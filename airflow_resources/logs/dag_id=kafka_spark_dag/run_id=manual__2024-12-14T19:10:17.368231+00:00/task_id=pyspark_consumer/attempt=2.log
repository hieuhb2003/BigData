[2024-12-14T19:13:23.505+0000] {taskinstance.py:1159} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: kafka_spark_dag.pyspark_consumer manual__2024-12-14T19:10:17.368231+00:00 [queued]>
[2024-12-14T19:13:23.528+0000] {taskinstance.py:1159} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: kafka_spark_dag.pyspark_consumer manual__2024-12-14T19:10:17.368231+00:00 [queued]>
[2024-12-14T19:13:23.529+0000] {taskinstance.py:1361} INFO - Starting attempt 2 of 2
[2024-12-14T19:13:23.556+0000] {taskinstance.py:1382} INFO - Executing <Task(DockerOperator): pyspark_consumer> on 2024-12-14 19:10:17.368231+00:00
[2024-12-14T19:13:23.564+0000] {standard_task_runner.py:57} INFO - Started process 2255 to run task
[2024-12-14T19:13:23.570+0000] {standard_task_runner.py:84} INFO - Running: ['airflow', 'tasks', 'run', 'kafka_spark_dag', 'pyspark_consumer', 'manual__2024-12-14T19:10:17.368231+00:00', '--job-id', '5', '--raw', '--subdir', 'DAGS_FOLDER/dag_kafka_spark.py', '--cfg-path', '/tmp/tmp1kfvxy72']
[2024-12-14T19:13:23.576+0000] {standard_task_runner.py:85} INFO - Job 5: Subtask pyspark_consumer
[2024-12-14T19:13:23.663+0000] {task_command.py:416} INFO - Running <TaskInstance: kafka_spark_dag.pyspark_consumer manual__2024-12-14T19:10:17.368231+00:00 [running]> on host e069fbdd121b
[2024-12-14T19:13:23.799+0000] {taskinstance.py:1662} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='airflow' AIRFLOW_CTX_DAG_ID='kafka_spark_dag' AIRFLOW_CTX_TASK_ID='pyspark_consumer' AIRFLOW_CTX_EXECUTION_DATE='2024-12-14T19:10:17.368231+00:00' AIRFLOW_CTX_TRY_NUMBER='2' AIRFLOW_CTX_DAG_RUN_ID='manual__2024-12-14T19:10:17.368231+00:00'
[2024-12-14T19:13:24.010+0000] {docker.py:343} INFO - Starting docker container from image reddit-consumer/spark:latest
[2024-12-14T19:13:24.071+0000] {docker.py:351} WARNING - Using remote engine or docker-in-docker and mounting temporary volume from host is not supported. Falling back to `mount_tmp_dir=False` mode. You can set `mount_tmp_dir` parameter to False to disable mounting and remove the warning
[2024-12-14T19:13:24.930+0000] {docker.py:413} INFO - [38;5;6mspark [38;5;5m19:13:24.91 [0m[38;5;2mINFO [0m ==>
[2024-12-14T19:13:24.953+0000] {docker.py:413} INFO - [38;5;6mspark [38;5;5m19:13:24.92 [0m[38;5;2mINFO [0m ==> [1mWelcome to the Bitnami spark container[0m
[2024-12-14T19:13:24.958+0000] {docker.py:413} INFO - [38;5;6mspark [38;5;5m19:13:24.93 [0m[38;5;2mINFO [0m ==> Subscribe to project updates by watching [1mhttps://github.com/bitnami/containers[0m
[2024-12-14T19:13:24.971+0000] {docker.py:413} INFO - [38;5;6mspark [38;5;5m19:13:24.94 [0m[38;5;2mINFO [0m ==> Submit issues and feature requests at [1mhttps://github.com/bitnami/containers/issues[0m
[2024-12-14T19:13:24.991+0000] {docker.py:413} INFO - [38;5;6mspark [38;5;5m19:13:24.96 [0m[38;5;2mINFO [0m ==>
[2024-12-14T19:13:24.999+0000] {docker.py:413} INFO - 
[2024-12-14T19:13:29.456+0000] {docker.py:413} INFO - :: loading settings :: url = jar:file:/opt/bitnami/spark/jars/ivy-2.5.1.jar!/org/apache/ivy/core/settings/ivysettings.xml
[2024-12-14T19:13:29.635+0000] {docker.py:413} INFO - Ivy Default Cache set to: /root/.ivy2/cache
The jars for the packages stored in: /root/.ivy2/jars
[2024-12-14T19:13:29.645+0000] {docker.py:413} INFO - org.***ql#***ql added as a dependency
org.apache.spark#spark-sql-kafka-0-10_2.12 added as a dependency
[2024-12-14T19:13:29.647+0000] {docker.py:413} INFO - :: resolving dependencies :: org.apache.spark#spark-submit-parent-1b3df44d-043e-4028-bbe9-574ddff8343c;1.0
	confs: [default]
[2024-12-14T19:13:32.324+0000] {docker.py:413} INFO - found org.***ql#***ql;42.5.4 in central
[2024-12-14T19:13:32.829+0000] {docker.py:413} INFO - found org.checkerframework#checker-qual;3.5.0 in central
[2024-12-14T19:13:37.893+0000] {docker.py:413} INFO - found org.apache.spark#spark-sql-kafka-0-10_2.12;3.5.0 in central
[2024-12-14T19:13:38.854+0000] {docker.py:413} INFO - found org.apache.spark#spark-token-provider-kafka-0-10_2.12;3.5.0 in central
[2024-12-14T19:13:39.471+0000] {docker.py:413} INFO - found org.apache.kafka#kafka-clients;3.4.1 in central
[2024-12-14T19:13:39.994+0000] {docker.py:413} INFO - found org.lz4#lz4-java;1.8.0 in central
[2024-12-14T19:13:40.635+0000] {docker.py:413} INFO - found org.xerial.snappy#snappy-java;1.1.10.3 in central
[2024-12-14T19:13:42.597+0000] {docker.py:413} INFO - found org.slf4j#slf4j-api;2.0.7 in central
[2024-12-14T19:13:46.543+0000] {docker.py:413} INFO - found org.apache.hadoop#hadoop-client-runtime;3.3.4 in central
[2024-12-14T19:13:47.202+0000] {docker.py:413} INFO - found org.apache.hadoop#hadoop-client-api;3.3.4 in central
[2024-12-14T19:13:51.048+0000] {docker.py:413} INFO - found commons-logging#commons-logging;1.1.3 in central
[2024-12-14T19:13:51.653+0000] {docker.py:413} INFO - found com.google.code.findbugs#jsr305;3.0.0 in central
[2024-12-14T19:13:56.353+0000] {docker.py:413} INFO - found org.apache.commons#commons-pool2;2.11.1 in central
[2024-12-14T19:13:56.656+0000] {docker.py:413} INFO - downloading https://repo1.maven.org/maven2/org/***ql/***ql/42.5.4/***ql-42.5.4.jar ...
[2024-12-14T19:13:58.963+0000] {docker.py:413} INFO - [SUCCESSFUL ] org.***ql#***ql;42.5.4!***ql.jar (2591ms)
[2024-12-14T19:13:59.215+0000] {docker.py:413} INFO - downloading https://repo1.maven.org/maven2/org/apache/spark/spark-sql-kafka-0-10_2.12/3.5.0/spark-sql-kafka-0-10_2.12-3.5.0.jar ...
[2024-12-14T19:14:01.675+0000] {docker.py:413} INFO - [SUCCESSFUL ] org.apache.spark#spark-sql-kafka-0-10_2.12;3.5.0!spark-sql-kafka-0-10_2.12.jar (2710ms)
[2024-12-14T19:14:01.886+0000] {docker.py:413} INFO - downloading https://repo1.maven.org/maven2/org/checkerframework/checker-qual/3.5.0/checker-qual-3.5.0.jar ...
[2024-12-14T19:14:03.111+0000] {docker.py:413} INFO - [SUCCESSFUL ] org.checkerframework#checker-qual;3.5.0!checker-qual.jar (1435ms)
[2024-12-14T19:14:03.415+0000] {docker.py:413} INFO - downloading https://repo1.maven.org/maven2/org/apache/spark/spark-token-provider-kafka-0-10_2.12/3.5.0/spark-token-provider-kafka-0-10_2.12-3.5.0.jar ...
[2024-12-14T19:14:03.780+0000] {docker.py:413} INFO - [SUCCESSFUL ] org.apache.spark#spark-token-provider-kafka-0-10_2.12;3.5.0!spark-token-provider-kafka-0-10_2.12.jar (666ms)
[2024-12-14T19:14:04.027+0000] {docker.py:413} INFO - downloading https://repo1.maven.org/maven2/org/apache/kafka/kafka-clients/3.4.1/kafka-clients-3.4.1.jar ...
[2024-12-14T19:14:17.218+0000] {docker.py:413} INFO - [SUCCESSFUL ] org.apache.kafka#kafka-clients;3.4.1!kafka-clients.jar (13435ms)
[2024-12-14T19:14:17.544+0000] {docker.py:413} INFO - downloading https://repo1.maven.org/maven2/com/google/code/findbugs/jsr305/3.0.0/jsr305-3.0.0.jar ...
[2024-12-14T19:14:17.963+0000] {docker.py:413} INFO - [SUCCESSFUL ] com.google.code.findbugs#jsr305;3.0.0!jsr305.jar (741ms)
[2024-12-14T19:14:18.264+0000] {docker.py:413} INFO - downloading https://repo1.maven.org/maven2/org/apache/commons/commons-pool2/2.11.1/commons-pool2-2.11.1.jar ...
[2024-12-14T19:14:18.854+0000] {docker.py:413} INFO - [SUCCESSFUL ] org.apache.commons#commons-pool2;2.11.1!commons-pool2.jar (884ms)
[2024-12-14T19:14:19.288+0000] {docker.py:413} INFO - downloading https://repo1.maven.org/maven2/org/apache/hadoop/hadoop-client-runtime/3.3.4/hadoop-client-runtime-3.3.4.jar ...
[2024-12-14T19:14:37.562+0000] {docker.py:413} INFO - [SUCCESSFUL ] org.apache.hadoop#hadoop-client-runtime;3.3.4!hadoop-client-runtime.jar (18707ms)
[2024-12-14T19:14:37.818+0000] {docker.py:413} INFO - downloading https://repo1.maven.org/maven2/org/lz4/lz4-java/1.8.0/lz4-java-1.8.0.jar ...
[2024-12-14T19:14:44.889+0000] {docker.py:413} INFO - [SUCCESSFUL ] org.lz4#lz4-java;1.8.0!lz4-java.jar (7326ms)
[2024-12-14T19:14:45.192+0000] {docker.py:413} INFO - downloading https://repo1.maven.org/maven2/org/xerial/snappy/snappy-java/1.1.10.3/snappy-java-1.1.10.3.jar ...
[2024-12-14T19:14:45.901+0000] {docker.py:413} INFO - [SUCCESSFUL ] org.xerial.snappy#snappy-java;1.1.10.3!snappy-java.jar(bundle) (1010ms)
[2024-12-14T19:14:46.218+0000] {docker.py:413} INFO - downloading https://repo1.maven.org/maven2/org/slf4j/slf4j-api/2.0.7/slf4j-api-2.0.7.jar ...
[2024-12-14T19:14:48.778+0000] {docker.py:413} INFO - [SUCCESSFUL ] org.slf4j#slf4j-api;2.0.7!slf4j-api.jar (2875ms)
[2024-12-14T19:14:49.087+0000] {docker.py:413} INFO - downloading https://repo1.maven.org/maven2/org/apache/hadoop/hadoop-client-api/3.3.4/hadoop-client-api-3.3.4.jar ...
[2024-12-14T19:14:56.889+0000] {docker.py:413} INFO - [SUCCESSFUL ] org.apache.hadoop#hadoop-client-api;3.3.4!hadoop-client-api.jar (8107ms)
[2024-12-14T19:14:57.171+0000] {docker.py:413} INFO - downloading https://repo1.maven.org/maven2/commons-logging/commons-logging/1.1.3/commons-logging-1.1.3.jar ...
[2024-12-14T19:14:57.403+0000] {docker.py:413} INFO - [SUCCESSFUL ] commons-logging#commons-logging;1.1.3!commons-logging.jar (512ms)
[2024-12-14T19:14:57.406+0000] {docker.py:413} INFO - :: resolution report :: resolve 26723ms :: artifacts dl 61032ms
	:: modules in use:
[2024-12-14T19:14:57.411+0000] {docker.py:413} INFO - com.google.code.findbugs#jsr305;3.0.0 from central in [default]
	commons-logging#commons-logging;1.1.3 from central in [default]
[2024-12-14T19:14:57.413+0000] {docker.py:413} INFO - org.apache.commons#commons-pool2;2.11.1 from central in [default]
	org.apache.hadoop#hadoop-client-api;3.3.4 from central in [default]
	org.apache.hadoop#hadoop-client-runtime;3.3.4 from central in [default]
	org.apache.kafka#kafka-clients;3.4.1 from central in [default]
	org.apache.spark#spark-sql-kafka-0-10_2.12;3.5.0 from central in [default]
	org.apache.spark#spark-token-provider-kafka-0-10_2.12;3.5.0 from central in [default]
	org.checkerframework#checker-qual;3.5.0 from central in [default]
	org.lz4#lz4-java;1.8.0 from central in [default]
	org.***ql#***ql;42.5.4 from central in [default]
[2024-12-14T19:14:57.415+0000] {docker.py:413} INFO - org.slf4j#slf4j-api;2.0.7 from central in [default]
	org.xerial.snappy#snappy-java;1.1.10.3 from central in [default]
[2024-12-14T19:14:57.418+0000] {docker.py:413} INFO - ---------------------------------------------------------------------
	|                  |            modules            ||   artifacts   |
[2024-12-14T19:14:57.420+0000] {docker.py:413} INFO - |       conf       | number| search|dwnlded|evicted|| number|dwnlded|
[2024-12-14T19:14:57.422+0000] {docker.py:413} INFO - ---------------------------------------------------------------------
[2024-12-14T19:14:57.424+0000] {docker.py:413} INFO - |      default     |   13  |   13  |   13  |   0   ||   13  |   13  |
	---------------------------------------------------------------------
[2024-12-14T19:14:57.433+0000] {docker.py:413} INFO - :: retrieving :: org.apache.spark#spark-submit-parent-1b3df44d-043e-4028-bbe9-574ddff8343c
[2024-12-14T19:14:57.437+0000] {docker.py:413} INFO - confs: [default]
[2024-12-14T19:14:57.638+0000] {docker.py:413} INFO - 13 artifacts copied, 0 already retrieved (58001kB/206ms)
[2024-12-14T19:14:58.427+0000] {docker.py:413} INFO - 24/12/14 19:14:58 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
[2024-12-14T19:15:06.225+0000] {docker.py:413} INFO - 2024-12-14 19:15:06,222 [INFO] Starting Spark Streaming job
2024-12-14 19:15:06,222 [INFO] Starting stream processing...
2024-12-14 19:15:06,222 [INFO] Creating Spark session...
[2024-12-14T19:15:06.397+0000] {docker.py:413} INFO - 24/12/14 19:15:06 INFO SparkContext: Running Spark version 3.5.0
[2024-12-14T19:15:06.398+0000] {docker.py:413} INFO - 24/12/14 19:15:06 INFO SparkContext: OS info Linux, 6.10.11-linuxkit, amd64
[2024-12-14T19:15:06.399+0000] {docker.py:413} INFO - 24/12/14 19:15:06 INFO SparkContext: Java version 17.0.10
[2024-12-14T19:15:06.447+0000] {docker.py:413} INFO - 24/12/14 19:15:06 INFO ResourceUtils: ==============================================================
[2024-12-14T19:15:06.451+0000] {docker.py:413} INFO - 24/12/14 19:15:06 INFO ResourceUtils: No custom resources configured for spark.driver.
[2024-12-14T19:15:06.452+0000] {docker.py:413} INFO - 24/12/14 19:15:06 INFO ResourceUtils: ==============================================================
[2024-12-14T19:15:06.454+0000] {docker.py:413} INFO - 24/12/14 19:15:06 INFO SparkContext: Submitted application: RedditSoccerAnalysis
[2024-12-14T19:15:06.505+0000] {docker.py:413} INFO - 24/12/14 19:15:06 INFO ResourceProfile: Default ResourceProfile created, executor resources: Map(cores -> name: cores, amount: 1, script: , vendor: , memory -> name: memory, amount: 1024, script: , vendor: , offHeap -> name: offHeap, amount: 0, script: , vendor: ), task resources: Map(cpus -> name: cpus, amount: 1.0)
[2024-12-14T19:15:06.522+0000] {docker.py:413} INFO - 24/12/14 19:15:06 INFO ResourceProfile: Limiting resource is cpu
[2024-12-14T19:15:06.524+0000] {docker.py:413} INFO - 24/12/14 19:15:06 INFO ResourceProfileManager: Added ResourceProfile id: 0
[2024-12-14T19:15:06.635+0000] {docker.py:413} INFO - 24/12/14 19:15:06 INFO SecurityManager: Changing view acls to: root,spark
[2024-12-14T19:15:06.637+0000] {docker.py:413} INFO - 24/12/14 19:15:06 INFO SecurityManager: Changing modify acls to: root,spark
[2024-12-14T19:15:06.638+0000] {docker.py:413} INFO - 24/12/14 19:15:06 INFO SecurityManager: Changing view acls groups to:
[2024-12-14T19:15:06.639+0000] {docker.py:413} INFO - 24/12/14 19:15:06 INFO SecurityManager: Changing modify acls groups to:
[2024-12-14T19:15:06.640+0000] {docker.py:413} INFO - 24/12/14 19:15:06 INFO SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users with view permissions: root, spark; groups with view permissions: EMPTY; users with modify permissions: root, spark; groups with modify permissions: EMPTY
[2024-12-14T19:15:07.393+0000] {docker.py:413} INFO - 24/12/14 19:15:07 INFO Utils: Successfully started service 'sparkDriver' on port 34095.
[2024-12-14T19:15:07.449+0000] {docker.py:413} INFO - 24/12/14 19:15:07 INFO SparkEnv: Registering MapOutputTracker
[2024-12-14T19:15:07.518+0000] {docker.py:413} INFO - 24/12/14 19:15:07 INFO SparkEnv: Registering BlockManagerMaster
[2024-12-14T19:15:07.561+0000] {docker.py:413} INFO - 24/12/14 19:15:07 INFO BlockManagerMasterEndpoint: Using org.apache.spark.storage.DefaultTopologyMapper for getting topology information
[2024-12-14T19:15:07.563+0000] {docker.py:413} INFO - 24/12/14 19:15:07 INFO BlockManagerMasterEndpoint: BlockManagerMasterEndpoint up
[2024-12-14T19:15:07.571+0000] {docker.py:413} INFO - 24/12/14 19:15:07 INFO SparkEnv: Registering BlockManagerMasterHeartbeat
[2024-12-14T19:15:07.607+0000] {docker.py:413} INFO - 24/12/14 19:15:07 INFO DiskBlockManager: Created local directory at /tmp/blockmgr-dd829ad3-02bf-479c-b3b0-a4e1a9341d98
[2024-12-14T19:15:07.634+0000] {docker.py:413} INFO - 24/12/14 19:15:07 INFO MemoryStore: MemoryStore started with capacity 434.4 MiB
[2024-12-14T19:15:07.660+0000] {docker.py:413} INFO - 24/12/14 19:15:07 INFO SparkEnv: Registering OutputCommitCoordinator
[2024-12-14T19:15:07.921+0000] {docker.py:413} INFO - 24/12/14 19:15:07 INFO JettyUtils: Start Jetty 0.0.0.0:4040 for SparkUI
[2024-12-14T19:15:08.116+0000] {docker.py:413} INFO - 24/12/14 19:15:08 INFO Utils: Successfully started service 'SparkUI' on port 4040.
[2024-12-14T19:15:08.227+0000] {docker.py:413} INFO - 24/12/14 19:15:08 INFO SparkContext: Added JAR file:///root/.ivy2/jars/org.***ql_***ql-42.5.4.jar at spark://localhost:34095/jars/org.***ql_***ql-42.5.4.jar with timestamp 1734203706381
[2024-12-14T19:15:08.230+0000] {docker.py:413} INFO - 24/12/14 19:15:08 INFO SparkContext: Added JAR file:///root/.ivy2/jars/org.apache.spark_spark-sql-kafka-0-10_2.12-3.5.0.jar at spark://localhost:34095/jars/org.apache.spark_spark-sql-kafka-0-10_2.12-3.5.0.jar with timestamp 1734203706381
[2024-12-14T19:15:08.232+0000] {docker.py:413} INFO - 24/12/14 19:15:08 INFO SparkContext: Added JAR file:///root/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar at spark://localhost:34095/jars/org.checkerframework_checker-qual-3.5.0.jar with timestamp 1734203706381
[2024-12-14T19:15:08.233+0000] {docker.py:413} INFO - 24/12/14 19:15:08 INFO SparkContext: Added JAR file:///root/.ivy2/jars/org.apache.spark_spark-token-provider-kafka-0-10_2.12-3.5.0.jar at spark://localhost:34095/jars/org.apache.spark_spark-token-provider-kafka-0-10_2.12-3.5.0.jar with timestamp 1734203706381
[2024-12-14T19:15:08.238+0000] {docker.py:413} INFO - 24/12/14 19:15:08 INFO SparkContext: Added JAR file:///root/.ivy2/jars/org.apache.kafka_kafka-clients-3.4.1.jar at spark://localhost:34095/jars/org.apache.kafka_kafka-clients-3.4.1.jar with timestamp 1734203706381
[2024-12-14T19:15:08.240+0000] {docker.py:413} INFO - 24/12/14 19:15:08 INFO SparkContext: Added JAR file:///root/.ivy2/jars/com.google.code.findbugs_jsr305-3.0.0.jar at spark://localhost:34095/jars/com.google.code.findbugs_jsr305-3.0.0.jar with timestamp 1734203706381
[2024-12-14T19:15:08.242+0000] {docker.py:413} INFO - 24/12/14 19:15:08 INFO SparkContext: Added JAR file:///root/.ivy2/jars/org.apache.commons_commons-pool2-2.11.1.jar at spark://localhost:34095/jars/org.apache.commons_commons-pool2-2.11.1.jar with timestamp 1734203706381
[2024-12-14T19:15:08.244+0000] {docker.py:413} INFO - 24/12/14 19:15:08 INFO SparkContext: Added JAR file:///root/.ivy2/jars/org.apache.hadoop_hadoop-client-runtime-3.3.4.jar at spark://localhost:34095/jars/org.apache.hadoop_hadoop-client-runtime-3.3.4.jar with timestamp 1734203706381
[2024-12-14T19:15:08.246+0000] {docker.py:413} INFO - 24/12/14 19:15:08 INFO SparkContext: Added JAR file:///root/.ivy2/jars/org.lz4_lz4-java-1.8.0.jar at spark://localhost:34095/jars/org.lz4_lz4-java-1.8.0.jar with timestamp 1734203706381
[2024-12-14T19:15:08.248+0000] {docker.py:413} INFO - 24/12/14 19:15:08 INFO SparkContext: Added JAR file:///root/.ivy2/jars/org.xerial.snappy_snappy-java-1.1.10.3.jar at spark://localhost:34095/jars/org.xerial.snappy_snappy-java-1.1.10.3.jar with timestamp 1734203706381
[2024-12-14T19:15:08.249+0000] {docker.py:413} INFO - 24/12/14 19:15:08 INFO SparkContext: Added JAR file:///root/.ivy2/jars/org.slf4j_slf4j-api-2.0.7.jar at spark://localhost:34095/jars/org.slf4j_slf4j-api-2.0.7.jar with timestamp 1734203706381
[2024-12-14T19:15:08.251+0000] {docker.py:413} INFO - 24/12/14 19:15:08 INFO SparkContext: Added JAR file:///root/.ivy2/jars/org.apache.hadoop_hadoop-client-api-3.3.4.jar at spark://localhost:34095/jars/org.apache.hadoop_hadoop-client-api-3.3.4.jar with timestamp 1734203706381
[2024-12-14T19:15:08.253+0000] {docker.py:413} INFO - 24/12/14 19:15:08 INFO SparkContext: Added JAR file:///root/.ivy2/jars/commons-logging_commons-logging-1.1.3.jar at spark://localhost:34095/jars/commons-logging_commons-logging-1.1.3.jar with timestamp 1734203706381
[2024-12-14T19:15:08.254+0000] {docker.py:413} INFO - 24/12/14 19:15:08 INFO SparkContext: Added file file:///root/.ivy2/jars/org.***ql_***ql-42.5.4.jar at file:///root/.ivy2/jars/org.***ql_***ql-42.5.4.jar with timestamp 1734203706381
[2024-12-14T19:15:08.257+0000] {docker.py:413} INFO - 24/12/14 19:15:08 INFO Utils: Copying /root/.ivy2/jars/org.***ql_***ql-42.5.4.jar to /tmp/spark-af6a2c99-decd-474f-b608-ac32561a9395/userFiles-61f50c36-c825-4af3-8535-38404f47e5cf/org.***ql_***ql-42.5.4.jar
[2024-12-14T19:15:08.280+0000] {docker.py:413} INFO - 24/12/14 19:15:08 INFO SparkContext: Added file file:///root/.ivy2/jars/org.apache.spark_spark-sql-kafka-0-10_2.12-3.5.0.jar at file:///root/.ivy2/jars/org.apache.spark_spark-sql-kafka-0-10_2.12-3.5.0.jar with timestamp 1734203706381
[2024-12-14T19:15:08.281+0000] {docker.py:413} INFO - 24/12/14 19:15:08 INFO Utils: Copying /root/.ivy2/jars/org.apache.spark_spark-sql-kafka-0-10_2.12-3.5.0.jar to /tmp/spark-af6a2c99-decd-474f-b608-ac32561a9395/userFiles-61f50c36-c825-4af3-8535-38404f47e5cf/org.apache.spark_spark-sql-kafka-0-10_2.12-3.5.0.jar
[2024-12-14T19:15:08.290+0000] {docker.py:413} INFO - 24/12/14 19:15:08 INFO SparkContext: Added file file:///root/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar at file:///root/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar with timestamp 1734203706381
[2024-12-14T19:15:08.291+0000] {docker.py:413} INFO - 24/12/14 19:15:08 INFO Utils: Copying /root/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar to /tmp/spark-af6a2c99-decd-474f-b608-ac32561a9395/userFiles-61f50c36-c825-4af3-8535-38404f47e5cf/org.checkerframework_checker-qual-3.5.0.jar
[2024-12-14T19:15:08.299+0000] {docker.py:413} INFO - 24/12/14 19:15:08 INFO SparkContext: Added file file:///root/.ivy2/jars/org.apache.spark_spark-token-provider-kafka-0-10_2.12-3.5.0.jar at file:///root/.ivy2/jars/org.apache.spark_spark-token-provider-kafka-0-10_2.12-3.5.0.jar with timestamp 1734203706381
[2024-12-14T19:15:08.301+0000] {docker.py:413} INFO - 24/12/14 19:15:08 INFO Utils: Copying /root/.ivy2/jars/org.apache.spark_spark-token-provider-kafka-0-10_2.12-3.5.0.jar to /tmp/spark-af6a2c99-decd-474f-b608-ac32561a9395/userFiles-61f50c36-c825-4af3-8535-38404f47e5cf/org.apache.spark_spark-token-provider-kafka-0-10_2.12-3.5.0.jar
[2024-12-14T19:15:08.308+0000] {docker.py:413} INFO - 24/12/14 19:15:08 INFO SparkContext: Added file file:///root/.ivy2/jars/org.apache.kafka_kafka-clients-3.4.1.jar at file:///root/.ivy2/jars/org.apache.kafka_kafka-clients-3.4.1.jar with timestamp 1734203706381
[2024-12-14T19:15:08.309+0000] {docker.py:413} INFO - 24/12/14 19:15:08 INFO Utils: Copying /root/.ivy2/jars/org.apache.kafka_kafka-clients-3.4.1.jar to /tmp/spark-af6a2c99-decd-474f-b608-ac32561a9395/userFiles-61f50c36-c825-4af3-8535-38404f47e5cf/org.apache.kafka_kafka-clients-3.4.1.jar
[2024-12-14T19:15:08.323+0000] {docker.py:413} INFO - 24/12/14 19:15:08 INFO SparkContext: Added file file:///root/.ivy2/jars/com.google.code.findbugs_jsr305-3.0.0.jar at file:///root/.ivy2/jars/com.google.code.findbugs_jsr305-3.0.0.jar with timestamp 1734203706381
[2024-12-14T19:15:08.325+0000] {docker.py:413} INFO - 24/12/14 19:15:08 INFO Utils: Copying /root/.ivy2/jars/com.google.code.findbugs_jsr305-3.0.0.jar to /tmp/spark-af6a2c99-decd-474f-b608-ac32561a9395/userFiles-61f50c36-c825-4af3-8535-38404f47e5cf/com.google.code.findbugs_jsr305-3.0.0.jar
[2024-12-14T19:15:08.331+0000] {docker.py:413} INFO - 24/12/14 19:15:08 INFO SparkContext: Added file file:///root/.ivy2/jars/org.apache.commons_commons-pool2-2.11.1.jar at file:///root/.ivy2/jars/org.apache.commons_commons-pool2-2.11.1.jar with timestamp 1734203706381
[2024-12-14T19:15:08.333+0000] {docker.py:413} INFO - 24/12/14 19:15:08 INFO Utils: Copying /root/.ivy2/jars/org.apache.commons_commons-pool2-2.11.1.jar to /tmp/spark-af6a2c99-decd-474f-b608-ac32561a9395/userFiles-61f50c36-c825-4af3-8535-38404f47e5cf/org.apache.commons_commons-pool2-2.11.1.jar
[2024-12-14T19:15:08.341+0000] {docker.py:413} INFO - 24/12/14 19:15:08 INFO SparkContext: Added file file:///root/.ivy2/jars/org.apache.hadoop_hadoop-client-runtime-3.3.4.jar at file:///root/.ivy2/jars/org.apache.hadoop_hadoop-client-runtime-3.3.4.jar with timestamp 1734203706381
[2024-12-14T19:15:08.343+0000] {docker.py:413} INFO - 24/12/14 19:15:08 INFO Utils: Copying /root/.ivy2/jars/org.apache.hadoop_hadoop-client-runtime-3.3.4.jar to /tmp/spark-af6a2c99-decd-474f-b608-ac32561a9395/userFiles-61f50c36-c825-4af3-8535-38404f47e5cf/org.apache.hadoop_hadoop-client-runtime-3.3.4.jar
[2024-12-14T19:15:08.380+0000] {docker.py:413} INFO - 24/12/14 19:15:08 INFO SparkContext: Added file file:///root/.ivy2/jars/org.lz4_lz4-java-1.8.0.jar at file:///root/.ivy2/jars/org.lz4_lz4-java-1.8.0.jar with timestamp 1734203706381
[2024-12-14T19:15:08.383+0000] {docker.py:413} INFO - 24/12/14 19:15:08 INFO Utils: Copying /root/.ivy2/jars/org.lz4_lz4-java-1.8.0.jar to /tmp/spark-af6a2c99-decd-474f-b608-ac32561a9395/userFiles-61f50c36-c825-4af3-8535-38404f47e5cf/org.lz4_lz4-java-1.8.0.jar
[2024-12-14T19:15:08.391+0000] {docker.py:413} INFO - 24/12/14 19:15:08 INFO SparkContext: Added file file:///root/.ivy2/jars/org.xerial.snappy_snappy-java-1.1.10.3.jar at file:///root/.ivy2/jars/org.xerial.snappy_snappy-java-1.1.10.3.jar with timestamp 1734203706381
[2024-12-14T19:15:08.393+0000] {docker.py:413} INFO - 24/12/14 19:15:08 INFO Utils: Copying /root/.ivy2/jars/org.xerial.snappy_snappy-java-1.1.10.3.jar to /tmp/spark-af6a2c99-decd-474f-b608-ac32561a9395/userFiles-61f50c36-c825-4af3-8535-38404f47e5cf/org.xerial.snappy_snappy-java-1.1.10.3.jar
[2024-12-14T19:15:08.403+0000] {docker.py:413} INFO - 24/12/14 19:15:08 INFO SparkContext: Added file file:///root/.ivy2/jars/org.slf4j_slf4j-api-2.0.7.jar at file:///root/.ivy2/jars/org.slf4j_slf4j-api-2.0.7.jar with timestamp 1734203706381
[2024-12-14T19:15:08.405+0000] {docker.py:413} INFO - 24/12/14 19:15:08 INFO Utils: Copying /root/.ivy2/jars/org.slf4j_slf4j-api-2.0.7.jar to /tmp/spark-af6a2c99-decd-474f-b608-ac32561a9395/userFiles-61f50c36-c825-4af3-8535-38404f47e5cf/org.slf4j_slf4j-api-2.0.7.jar
[2024-12-14T19:15:08.411+0000] {docker.py:413} INFO - 24/12/14 19:15:08 INFO SparkContext: Added file file:///root/.ivy2/jars/org.apache.hadoop_hadoop-client-api-3.3.4.jar at file:///root/.ivy2/jars/org.apache.hadoop_hadoop-client-api-3.3.4.jar with timestamp 1734203706381
[2024-12-14T19:15:08.413+0000] {docker.py:413} INFO - 24/12/14 19:15:08 INFO Utils: Copying /root/.ivy2/jars/org.apache.hadoop_hadoop-client-api-3.3.4.jar to /tmp/spark-af6a2c99-decd-474f-b608-ac32561a9395/userFiles-61f50c36-c825-4af3-8535-38404f47e5cf/org.apache.hadoop_hadoop-client-api-3.3.4.jar
[2024-12-14T19:15:08.438+0000] {docker.py:413} INFO - 24/12/14 19:15:08 INFO SparkContext: Added file file:///root/.ivy2/jars/commons-logging_commons-logging-1.1.3.jar at file:///root/.ivy2/jars/commons-logging_commons-logging-1.1.3.jar with timestamp 1734203706381
[2024-12-14T19:15:08.440+0000] {docker.py:413} INFO - 24/12/14 19:15:08 INFO Utils: Copying /root/.ivy2/jars/commons-logging_commons-logging-1.1.3.jar to /tmp/spark-af6a2c99-decd-474f-b608-ac32561a9395/userFiles-61f50c36-c825-4af3-8535-38404f47e5cf/commons-logging_commons-logging-1.1.3.jar
[2024-12-14T19:15:08.621+0000] {docker.py:413} INFO - 24/12/14 19:15:08 INFO Executor: Starting executor ID driver on host localhost
[2024-12-14T19:15:08.623+0000] {docker.py:413} INFO - 24/12/14 19:15:08 INFO Executor: OS info Linux, 6.10.11-linuxkit, amd64
[2024-12-14T19:15:08.626+0000] {docker.py:413} INFO - 24/12/14 19:15:08 INFO Executor: Java version 17.0.10
[2024-12-14T19:15:08.657+0000] {docker.py:413} INFO - 24/12/14 19:15:08 INFO Executor: Starting executor with user classpath (userClassPathFirst = false): ''
[2024-12-14T19:15:08.661+0000] {docker.py:413} INFO - 24/12/14 19:15:08 INFO Executor: Created or updated repl class loader org.apache.spark.util.MutableURLClassLoader@5fc33c49 for default.
[2024-12-14T19:15:08.698+0000] {docker.py:413} INFO - 24/12/14 19:15:08 INFO Executor: Fetching file:///root/.ivy2/jars/org.apache.spark_spark-sql-kafka-0-10_2.12-3.5.0.jar with timestamp 1734203706381
[2024-12-14T19:15:08.748+0000] {docker.py:413} INFO - 24/12/14 19:15:08 INFO Utils: /root/.ivy2/jars/org.apache.spark_spark-sql-kafka-0-10_2.12-3.5.0.jar has been previously copied to /tmp/spark-af6a2c99-decd-474f-b608-ac32561a9395/userFiles-61f50c36-c825-4af3-8535-38404f47e5cf/org.apache.spark_spark-sql-kafka-0-10_2.12-3.5.0.jar
[2024-12-14T19:15:08.759+0000] {docker.py:413} INFO - 24/12/14 19:15:08 INFO Executor: Fetching file:///root/.ivy2/jars/org.***ql_***ql-42.5.4.jar with timestamp 1734203706381
[2024-12-14T19:15:08.765+0000] {docker.py:413} INFO - 24/12/14 19:15:08 INFO Utils: /root/.ivy2/jars/org.***ql_***ql-42.5.4.jar has been previously copied to /tmp/spark-af6a2c99-decd-474f-b608-ac32561a9395/userFiles-61f50c36-c825-4af3-8535-38404f47e5cf/org.***ql_***ql-42.5.4.jar
[2024-12-14T19:15:08.775+0000] {docker.py:413} INFO - 24/12/14 19:15:08 INFO Executor: Fetching file:///root/.ivy2/jars/org.apache.hadoop_hadoop-client-api-3.3.4.jar with timestamp 1734203706381
[2024-12-14T19:15:08.807+0000] {docker.py:413} INFO - 24/12/14 19:15:08 INFO Utils: /root/.ivy2/jars/org.apache.hadoop_hadoop-client-api-3.3.4.jar has been previously copied to /tmp/spark-af6a2c99-decd-474f-b608-ac32561a9395/userFiles-61f50c36-c825-4af3-8535-38404f47e5cf/org.apache.hadoop_hadoop-client-api-3.3.4.jar
[2024-12-14T19:15:08.812+0000] {docker.py:413} INFO - 24/12/14 19:15:08 INFO Executor: Fetching file:///root/.ivy2/jars/com.google.code.findbugs_jsr305-3.0.0.jar with timestamp 1734203706381
[2024-12-14T19:15:08.814+0000] {docker.py:413} INFO - 24/12/14 19:15:08 INFO Utils: /root/.ivy2/jars/com.google.code.findbugs_jsr305-3.0.0.jar has been previously copied to /tmp/spark-af6a2c99-decd-474f-b608-ac32561a9395/userFiles-61f50c36-c825-4af3-8535-38404f47e5cf/com.google.code.findbugs_jsr305-3.0.0.jar
[2024-12-14T19:15:08.819+0000] {docker.py:413} INFO - 24/12/14 19:15:08 INFO Executor: Fetching file:///root/.ivy2/jars/org.apache.hadoop_hadoop-client-runtime-3.3.4.jar with timestamp 1734203706381
[2024-12-14T19:15:08.863+0000] {docker.py:413} INFO - 24/12/14 19:15:08 INFO Utils: /root/.ivy2/jars/org.apache.hadoop_hadoop-client-runtime-3.3.4.jar has been previously copied to /tmp/spark-af6a2c99-decd-474f-b608-ac32561a9395/userFiles-61f50c36-c825-4af3-8535-38404f47e5cf/org.apache.hadoop_hadoop-client-runtime-3.3.4.jar
[2024-12-14T19:15:08.869+0000] {docker.py:413} INFO - 24/12/14 19:15:08 INFO Executor: Fetching file:///root/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar with timestamp 1734203706381
[2024-12-14T19:15:08.871+0000] {docker.py:413} INFO - 24/12/14 19:15:08 INFO Utils: /root/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar has been previously copied to /tmp/spark-af6a2c99-decd-474f-b608-ac32561a9395/userFiles-61f50c36-c825-4af3-8535-38404f47e5cf/org.checkerframework_checker-qual-3.5.0.jar
[2024-12-14T19:15:08.881+0000] {docker.py:413} INFO - 24/12/14 19:15:08 INFO Executor: Fetching file:///root/.ivy2/jars/org.xerial.snappy_snappy-java-1.1.10.3.jar with timestamp 1734203706381
[2024-12-14T19:15:08.885+0000] {docker.py:413} INFO - 24/12/14 19:15:08 INFO Utils: /root/.ivy2/jars/org.xerial.snappy_snappy-java-1.1.10.3.jar has been previously copied to /tmp/spark-af6a2c99-decd-474f-b608-ac32561a9395/userFiles-61f50c36-c825-4af3-8535-38404f47e5cf/org.xerial.snappy_snappy-java-1.1.10.3.jar
[2024-12-14T19:15:08.894+0000] {docker.py:413} INFO - 24/12/14 19:15:08 INFO Executor: Fetching file:///root/.ivy2/jars/org.apache.spark_spark-token-provider-kafka-0-10_2.12-3.5.0.jar with timestamp 1734203706381
[2024-12-14T19:15:08.895+0000] {docker.py:413} INFO - 24/12/14 19:15:08 INFO Utils: /root/.ivy2/jars/org.apache.spark_spark-token-provider-kafka-0-10_2.12-3.5.0.jar has been previously copied to /tmp/spark-af6a2c99-decd-474f-b608-ac32561a9395/userFiles-61f50c36-c825-4af3-8535-38404f47e5cf/org.apache.spark_spark-token-provider-kafka-0-10_2.12-3.5.0.jar
[2024-12-14T19:15:08.902+0000] {docker.py:413} INFO - 24/12/14 19:15:08 INFO Executor: Fetching file:///root/.ivy2/jars/org.slf4j_slf4j-api-2.0.7.jar with timestamp 1734203706381
[2024-12-14T19:15:08.903+0000] {docker.py:413} INFO - 24/12/14 19:15:08 INFO Utils: /root/.ivy2/jars/org.slf4j_slf4j-api-2.0.7.jar has been previously copied to /tmp/spark-af6a2c99-decd-474f-b608-ac32561a9395/userFiles-61f50c36-c825-4af3-8535-38404f47e5cf/org.slf4j_slf4j-api-2.0.7.jar
[2024-12-14T19:15:08.915+0000] {docker.py:413} INFO - 24/12/14 19:15:08 INFO Executor: Fetching file:///root/.ivy2/jars/org.apache.commons_commons-pool2-2.11.1.jar with timestamp 1734203706381
[2024-12-14T19:15:08.917+0000] {docker.py:413} INFO - 24/12/14 19:15:08 INFO Utils: /root/.ivy2/jars/org.apache.commons_commons-pool2-2.11.1.jar has been previously copied to /tmp/spark-af6a2c99-decd-474f-b608-ac32561a9395/userFiles-61f50c36-c825-4af3-8535-38404f47e5cf/org.apache.commons_commons-pool2-2.11.1.jar
[2024-12-14T19:15:08.924+0000] {docker.py:413} INFO - 24/12/14 19:15:08 INFO Executor: Fetching file:///root/.ivy2/jars/commons-logging_commons-logging-1.1.3.jar with timestamp 1734203706381
[2024-12-14T19:15:08.926+0000] {docker.py:413} INFO - 24/12/14 19:15:08 INFO Utils: /root/.ivy2/jars/commons-logging_commons-logging-1.1.3.jar has been previously copied to /tmp/spark-af6a2c99-decd-474f-b608-ac32561a9395/userFiles-61f50c36-c825-4af3-8535-38404f47e5cf/commons-logging_commons-logging-1.1.3.jar
[2024-12-14T19:15:08.936+0000] {docker.py:413} INFO - 24/12/14 19:15:08 INFO Executor: Fetching file:///root/.ivy2/jars/org.lz4_lz4-java-1.8.0.jar with timestamp 1734203706381
[2024-12-14T19:15:08.939+0000] {docker.py:413} INFO - 24/12/14 19:15:08 INFO Utils: /root/.ivy2/jars/org.lz4_lz4-java-1.8.0.jar has been previously copied to /tmp/spark-af6a2c99-decd-474f-b608-ac32561a9395/userFiles-61f50c36-c825-4af3-8535-38404f47e5cf/org.lz4_lz4-java-1.8.0.jar
[2024-12-14T19:15:08.948+0000] {docker.py:413} INFO - 24/12/14 19:15:08 INFO Executor: Fetching file:///root/.ivy2/jars/org.apache.kafka_kafka-clients-3.4.1.jar with timestamp 1734203706381
[2024-12-14T19:15:08.962+0000] {docker.py:413} INFO - 24/12/14 19:15:08 INFO Utils: /root/.ivy2/jars/org.apache.kafka_kafka-clients-3.4.1.jar has been previously copied to /tmp/spark-af6a2c99-decd-474f-b608-ac32561a9395/userFiles-61f50c36-c825-4af3-8535-38404f47e5cf/org.apache.kafka_kafka-clients-3.4.1.jar
[2024-12-14T19:15:08.975+0000] {docker.py:413} INFO - 24/12/14 19:15:08 INFO Executor: Fetching spark://localhost:34095/jars/commons-logging_commons-logging-1.1.3.jar with timestamp 1734203706381
[2024-12-14T19:15:09.140+0000] {docker.py:413} INFO - 24/12/14 19:15:09 INFO TransportClientFactory: Successfully created connection to localhost/127.0.0.1:34095 after 110 ms (0 ms spent in bootstraps)
[2024-12-14T19:15:09.158+0000] {docker.py:413} INFO - 24/12/14 19:15:09 INFO Utils: Fetching spark://localhost:34095/jars/commons-logging_commons-logging-1.1.3.jar to /tmp/spark-af6a2c99-decd-474f-b608-ac32561a9395/userFiles-61f50c36-c825-4af3-8535-38404f47e5cf/fetchFileTemp14428723167890624684.tmp
[2024-12-14T19:15:09.225+0000] {docker.py:413} INFO - 24/12/14 19:15:09 INFO Utils: /tmp/spark-af6a2c99-decd-474f-b608-ac32561a9395/userFiles-61f50c36-c825-4af3-8535-38404f47e5cf/fetchFileTemp14428723167890624684.tmp has been previously copied to /tmp/spark-af6a2c99-decd-474f-b608-ac32561a9395/userFiles-61f50c36-c825-4af3-8535-38404f47e5cf/commons-logging_commons-logging-1.1.3.jar
[2024-12-14T19:15:09.235+0000] {docker.py:413} INFO - 24/12/14 19:15:09 INFO Executor: Adding file:/tmp/spark-af6a2c99-decd-474f-b608-ac32561a9395/userFiles-61f50c36-c825-4af3-8535-38404f47e5cf/commons-logging_commons-logging-1.1.3.jar to class loader default
[2024-12-14T19:15:09.237+0000] {docker.py:413} INFO - 24/12/14 19:15:09 INFO Executor: Fetching spark://localhost:34095/jars/org.slf4j_slf4j-api-2.0.7.jar with timestamp 1734203706381
[2024-12-14T19:15:09.239+0000] {docker.py:413} INFO - 24/12/14 19:15:09 INFO Utils: Fetching spark://localhost:34095/jars/org.slf4j_slf4j-api-2.0.7.jar to /tmp/spark-af6a2c99-decd-474f-b608-ac32561a9395/userFiles-61f50c36-c825-4af3-8535-38404f47e5cf/fetchFileTemp13155625284803941410.tmp
[2024-12-14T19:15:09.246+0000] {docker.py:413} INFO - 24/12/14 19:15:09 INFO Utils: /tmp/spark-af6a2c99-decd-474f-b608-ac32561a9395/userFiles-61f50c36-c825-4af3-8535-38404f47e5cf/fetchFileTemp13155625284803941410.tmp has been previously copied to /tmp/spark-af6a2c99-decd-474f-b608-ac32561a9395/userFiles-61f50c36-c825-4af3-8535-38404f47e5cf/org.slf4j_slf4j-api-2.0.7.jar
[2024-12-14T19:15:09.256+0000] {docker.py:413} INFO - 24/12/14 19:15:09 INFO Executor: Adding file:/tmp/spark-af6a2c99-decd-474f-b608-ac32561a9395/userFiles-61f50c36-c825-4af3-8535-38404f47e5cf/org.slf4j_slf4j-api-2.0.7.jar to class loader default
[2024-12-14T19:15:09.257+0000] {docker.py:413} INFO - 24/12/14 19:15:09 INFO Executor: Fetching spark://localhost:34095/jars/org.apache.commons_commons-pool2-2.11.1.jar with timestamp 1734203706381
[2024-12-14T19:15:09.259+0000] {docker.py:413} INFO - 24/12/14 19:15:09 INFO Utils: Fetching spark://localhost:34095/jars/org.apache.commons_commons-pool2-2.11.1.jar to /tmp/spark-af6a2c99-decd-474f-b608-ac32561a9395/userFiles-61f50c36-c825-4af3-8535-38404f47e5cf/fetchFileTemp8426454131333213159.tmp
[2024-12-14T19:15:09.264+0000] {docker.py:413} INFO - 24/12/14 19:15:09 INFO Utils: /tmp/spark-af6a2c99-decd-474f-b608-ac32561a9395/userFiles-61f50c36-c825-4af3-8535-38404f47e5cf/fetchFileTemp8426454131333213159.tmp has been previously copied to /tmp/spark-af6a2c99-decd-474f-b608-ac32561a9395/userFiles-61f50c36-c825-4af3-8535-38404f47e5cf/org.apache.commons_commons-pool2-2.11.1.jar
[2024-12-14T19:15:09.270+0000] {docker.py:413} INFO - 24/12/14 19:15:09 INFO Executor: Adding file:/tmp/spark-af6a2c99-decd-474f-b608-ac32561a9395/userFiles-61f50c36-c825-4af3-8535-38404f47e5cf/org.apache.commons_commons-pool2-2.11.1.jar to class loader default
[2024-12-14T19:15:09.272+0000] {docker.py:413} INFO - 24/12/14 19:15:09 INFO Executor: Fetching spark://localhost:34095/jars/org.xerial.snappy_snappy-java-1.1.10.3.jar with timestamp 1734203706381
[2024-12-14T19:15:09.273+0000] {docker.py:413} INFO - 24/12/14 19:15:09 INFO Utils: Fetching spark://localhost:34095/jars/org.xerial.snappy_snappy-java-1.1.10.3.jar to /tmp/spark-af6a2c99-decd-474f-b608-ac32561a9395/userFiles-61f50c36-c825-4af3-8535-38404f47e5cf/fetchFileTemp17345638733314263352.tmp
[2024-12-14T19:15:09.299+0000] {docker.py:413} INFO - 24/12/14 19:15:09 INFO Utils: /tmp/spark-af6a2c99-decd-474f-b608-ac32561a9395/userFiles-61f50c36-c825-4af3-8535-38404f47e5cf/fetchFileTemp17345638733314263352.tmp has been previously copied to /tmp/spark-af6a2c99-decd-474f-b608-ac32561a9395/userFiles-61f50c36-c825-4af3-8535-38404f47e5cf/org.xerial.snappy_snappy-java-1.1.10.3.jar
[2024-12-14T19:15:09.306+0000] {docker.py:413} INFO - 24/12/14 19:15:09 INFO Executor: Adding file:/tmp/spark-af6a2c99-decd-474f-b608-ac32561a9395/userFiles-61f50c36-c825-4af3-8535-38404f47e5cf/org.xerial.snappy_snappy-java-1.1.10.3.jar to class loader default
[2024-12-14T19:15:09.308+0000] {docker.py:413} INFO - 24/12/14 19:15:09 INFO Executor: Fetching spark://localhost:34095/jars/org.apache.hadoop_hadoop-client-runtime-3.3.4.jar with timestamp 1734203706381
[2024-12-14T19:15:09.310+0000] {docker.py:413} INFO - 24/12/14 19:15:09 INFO Utils: Fetching spark://localhost:34095/jars/org.apache.hadoop_hadoop-client-runtime-3.3.4.jar to /tmp/spark-af6a2c99-decd-474f-b608-ac32561a9395/userFiles-61f50c36-c825-4af3-8535-38404f47e5cf/fetchFileTemp10991831478890135706.tmp
[2024-12-14T19:15:09.520+0000] {docker.py:413} INFO - 24/12/14 19:15:09 INFO Utils: /tmp/spark-af6a2c99-decd-474f-b608-ac32561a9395/userFiles-61f50c36-c825-4af3-8535-38404f47e5cf/fetchFileTemp10991831478890135706.tmp has been previously copied to /tmp/spark-af6a2c99-decd-474f-b608-ac32561a9395/userFiles-61f50c36-c825-4af3-8535-38404f47e5cf/org.apache.hadoop_hadoop-client-runtime-3.3.4.jar
[2024-12-14T19:15:09.544+0000] {docker.py:413} INFO - 24/12/14 19:15:09 INFO Executor: Adding file:/tmp/spark-af6a2c99-decd-474f-b608-ac32561a9395/userFiles-61f50c36-c825-4af3-8535-38404f47e5cf/org.apache.hadoop_hadoop-client-runtime-3.3.4.jar to class loader default
[2024-12-14T19:15:09.548+0000] {docker.py:413} INFO - 24/12/14 19:15:09 INFO Executor: Fetching spark://localhost:34095/jars/org.apache.spark_spark-sql-kafka-0-10_2.12-3.5.0.jar with timestamp 1734203706381
[2024-12-14T19:15:09.551+0000] {docker.py:413} INFO - 24/12/14 19:15:09 INFO Utils: Fetching spark://localhost:34095/jars/org.apache.spark_spark-sql-kafka-0-10_2.12-3.5.0.jar to /tmp/spark-af6a2c99-decd-474f-b608-ac32561a9395/userFiles-61f50c36-c825-4af3-8535-38404f47e5cf/fetchFileTemp14077278259291623388.tmp
[2024-12-14T19:15:09.565+0000] {docker.py:413} INFO - 24/12/14 19:15:09 INFO Utils: /tmp/spark-af6a2c99-decd-474f-b608-ac32561a9395/userFiles-61f50c36-c825-4af3-8535-38404f47e5cf/fetchFileTemp14077278259291623388.tmp has been previously copied to /tmp/spark-af6a2c99-decd-474f-b608-ac32561a9395/userFiles-61f50c36-c825-4af3-8535-38404f47e5cf/org.apache.spark_spark-sql-kafka-0-10_2.12-3.5.0.jar
[2024-12-14T19:15:09.576+0000] {docker.py:413} INFO - 24/12/14 19:15:09 INFO Executor: Adding file:/tmp/spark-af6a2c99-decd-474f-b608-ac32561a9395/userFiles-61f50c36-c825-4af3-8535-38404f47e5cf/org.apache.spark_spark-sql-kafka-0-10_2.12-3.5.0.jar to class loader default
[2024-12-14T19:15:09.578+0000] {docker.py:413} INFO - 24/12/14 19:15:09 INFO Executor: Fetching spark://localhost:34095/jars/org.apache.hadoop_hadoop-client-api-3.3.4.jar with timestamp 1734203706381
[2024-12-14T19:15:09.581+0000] {docker.py:413} INFO - 24/12/14 19:15:09 INFO Utils: Fetching spark://localhost:34095/jars/org.apache.hadoop_hadoop-client-api-3.3.4.jar to /tmp/spark-af6a2c99-decd-474f-b608-ac32561a9395/userFiles-61f50c36-c825-4af3-8535-38404f47e5cf/fetchFileTemp17218266231103190798.tmp
[2024-12-14T19:15:09.813+0000] {docker.py:413} INFO - 24/12/14 19:15:09 INFO Utils: /tmp/spark-af6a2c99-decd-474f-b608-ac32561a9395/userFiles-61f50c36-c825-4af3-8535-38404f47e5cf/fetchFileTemp17218266231103190798.tmp has been previously copied to /tmp/spark-af6a2c99-decd-474f-b608-ac32561a9395/userFiles-61f50c36-c825-4af3-8535-38404f47e5cf/org.apache.hadoop_hadoop-client-api-3.3.4.jar
[2024-12-14T19:15:09.837+0000] {docker.py:413} INFO - 24/12/14 19:15:09 INFO Executor: Adding file:/tmp/spark-af6a2c99-decd-474f-b608-ac32561a9395/userFiles-61f50c36-c825-4af3-8535-38404f47e5cf/org.apache.hadoop_hadoop-client-api-3.3.4.jar to class loader default
[2024-12-14T19:15:09.840+0000] {docker.py:413} INFO - 24/12/14 19:15:09 INFO Executor: Fetching spark://localhost:34095/jars/org.***ql_***ql-42.5.4.jar with timestamp 1734203706381
[2024-12-14T19:15:09.846+0000] {docker.py:413} INFO - 24/12/14 19:15:09 INFO Utils: Fetching spark://localhost:34095/jars/org.***ql_***ql-42.5.4.jar to /tmp/spark-af6a2c99-decd-474f-b608-ac32561a9395/userFiles-61f50c36-c825-4af3-8535-38404f47e5cf/fetchFileTemp8052819058944997073.tmp
[2024-12-14T19:15:09.864+0000] {docker.py:413} INFO - 24/12/14 19:15:09 INFO Utils: /tmp/spark-af6a2c99-decd-474f-b608-ac32561a9395/userFiles-61f50c36-c825-4af3-8535-38404f47e5cf/fetchFileTemp8052819058944997073.tmp has been previously copied to /tmp/spark-af6a2c99-decd-474f-b608-ac32561a9395/userFiles-61f50c36-c825-4af3-8535-38404f47e5cf/org.***ql_***ql-42.5.4.jar
[2024-12-14T19:15:09.884+0000] {docker.py:413} INFO - 24/12/14 19:15:09 INFO Executor: Adding file:/tmp/spark-af6a2c99-decd-474f-b608-ac32561a9395/userFiles-61f50c36-c825-4af3-8535-38404f47e5cf/org.***ql_***ql-42.5.4.jar to class loader default
[2024-12-14T19:15:09.892+0000] {docker.py:413} INFO - 24/12/14 19:15:09 INFO Executor: Fetching spark://localhost:34095/jars/org.apache.kafka_kafka-clients-3.4.1.jar with timestamp 1734203706381
[2024-12-14T19:15:09.902+0000] {docker.py:413} INFO - 24/12/14 19:15:09 INFO Utils: Fetching spark://localhost:34095/jars/org.apache.kafka_kafka-clients-3.4.1.jar to /tmp/spark-af6a2c99-decd-474f-b608-ac32561a9395/userFiles-61f50c36-c825-4af3-8535-38404f47e5cf/fetchFileTemp12279493807912207807.tmp
[2024-12-14T19:15:09.976+0000] {docker.py:413} INFO - 24/12/14 19:15:09 INFO Utils: /tmp/spark-af6a2c99-decd-474f-b608-ac32561a9395/userFiles-61f50c36-c825-4af3-8535-38404f47e5cf/fetchFileTemp12279493807912207807.tmp has been previously copied to /tmp/spark-af6a2c99-decd-474f-b608-ac32561a9395/userFiles-61f50c36-c825-4af3-8535-38404f47e5cf/org.apache.kafka_kafka-clients-3.4.1.jar
[2024-12-14T19:15:09.990+0000] {docker.py:413} INFO - 24/12/14 19:15:09 INFO Executor: Adding file:/tmp/spark-af6a2c99-decd-474f-b608-ac32561a9395/userFiles-61f50c36-c825-4af3-8535-38404f47e5cf/org.apache.kafka_kafka-clients-3.4.1.jar to class loader default
[2024-12-14T19:15:09.992+0000] {docker.py:413} INFO - 24/12/14 19:15:09 INFO Executor: Fetching spark://localhost:34095/jars/org.apache.spark_spark-token-provider-kafka-0-10_2.12-3.5.0.jar with timestamp 1734203706381
[2024-12-14T19:15:09.995+0000] {docker.py:413} INFO - 24/12/14 19:15:09 INFO Utils: Fetching spark://localhost:34095/jars/org.apache.spark_spark-token-provider-kafka-0-10_2.12-3.5.0.jar to /tmp/spark-af6a2c99-decd-474f-b608-ac32561a9395/userFiles-61f50c36-c825-4af3-8535-38404f47e5cf/fetchFileTemp2343740916567754238.tmp
[2024-12-14T19:15:09.997+0000] {docker.py:413} INFO - 24/12/14 19:15:09 INFO Utils: /tmp/spark-af6a2c99-decd-474f-b608-ac32561a9395/userFiles-61f50c36-c825-4af3-8535-38404f47e5cf/fetchFileTemp2343740916567754238.tmp has been previously copied to /tmp/spark-af6a2c99-decd-474f-b608-ac32561a9395/userFiles-61f50c36-c825-4af3-8535-38404f47e5cf/org.apache.spark_spark-token-provider-kafka-0-10_2.12-3.5.0.jar
[2024-12-14T19:15:10.011+0000] {docker.py:413} INFO - 24/12/14 19:15:10 INFO Executor: Adding file:/tmp/spark-af6a2c99-decd-474f-b608-ac32561a9395/userFiles-61f50c36-c825-4af3-8535-38404f47e5cf/org.apache.spark_spark-token-provider-kafka-0-10_2.12-3.5.0.jar to class loader default
[2024-12-14T19:15:10.016+0000] {docker.py:413} INFO - 24/12/14 19:15:10 INFO Executor: Fetching spark://localhost:34095/jars/com.google.code.findbugs_jsr305-3.0.0.jar with timestamp 1734203706381
[2024-12-14T19:15:10.020+0000] {docker.py:413} INFO - 24/12/14 19:15:10 INFO Utils: Fetching spark://localhost:34095/jars/com.google.code.findbugs_jsr305-3.0.0.jar to /tmp/spark-af6a2c99-decd-474f-b608-ac32561a9395/userFiles-61f50c36-c825-4af3-8535-38404f47e5cf/fetchFileTemp8574119090106404026.tmp
[2024-12-14T19:15:10.023+0000] {docker.py:413} INFO - 24/12/14 19:15:10 INFO Utils: /tmp/spark-af6a2c99-decd-474f-b608-ac32561a9395/userFiles-61f50c36-c825-4af3-8535-38404f47e5cf/fetchFileTemp8574119090106404026.tmp has been previously copied to /tmp/spark-af6a2c99-decd-474f-b608-ac32561a9395/userFiles-61f50c36-c825-4af3-8535-38404f47e5cf/com.google.code.findbugs_jsr305-3.0.0.jar
[2024-12-14T19:15:10.038+0000] {docker.py:413} INFO - 24/12/14 19:15:10 INFO Executor: Adding file:/tmp/spark-af6a2c99-decd-474f-b608-ac32561a9395/userFiles-61f50c36-c825-4af3-8535-38404f47e5cf/com.google.code.findbugs_jsr305-3.0.0.jar to class loader default
[2024-12-14T19:15:10.041+0000] {docker.py:413} INFO - 24/12/14 19:15:10 INFO Executor: Fetching spark://localhost:34095/jars/org.checkerframework_checker-qual-3.5.0.jar with timestamp 1734203706381
[2024-12-14T19:15:10.046+0000] {docker.py:413} INFO - 24/12/14 19:15:10 INFO Utils: Fetching spark://localhost:34095/jars/org.checkerframework_checker-qual-3.5.0.jar to /tmp/spark-af6a2c99-decd-474f-b608-ac32561a9395/userFiles-61f50c36-c825-4af3-8535-38404f47e5cf/fetchFileTemp8917689178532889947.tmp
[2024-12-14T19:15:10.053+0000] {docker.py:413} INFO - 24/12/14 19:15:10 INFO Utils: /tmp/spark-af6a2c99-decd-474f-b608-ac32561a9395/userFiles-61f50c36-c825-4af3-8535-38404f47e5cf/fetchFileTemp8917689178532889947.tmp has been previously copied to /tmp/spark-af6a2c99-decd-474f-b608-ac32561a9395/userFiles-61f50c36-c825-4af3-8535-38404f47e5cf/org.checkerframework_checker-qual-3.5.0.jar
[2024-12-14T19:15:10.065+0000] {docker.py:413} INFO - 24/12/14 19:15:10 INFO Executor: Adding file:/tmp/spark-af6a2c99-decd-474f-b608-ac32561a9395/userFiles-61f50c36-c825-4af3-8535-38404f47e5cf/org.checkerframework_checker-qual-3.5.0.jar to class loader default
[2024-12-14T19:15:10.067+0000] {docker.py:413} INFO - 24/12/14 19:15:10 INFO Executor: Fetching spark://localhost:34095/jars/org.lz4_lz4-java-1.8.0.jar with timestamp 1734203706381
[2024-12-14T19:15:10.069+0000] {docker.py:413} INFO - 24/12/14 19:15:10 INFO Utils: Fetching spark://localhost:34095/jars/org.lz4_lz4-java-1.8.0.jar to /tmp/spark-af6a2c99-decd-474f-b608-ac32561a9395/userFiles-61f50c36-c825-4af3-8535-38404f47e5cf/fetchFileTemp15423577529626567123.tmp
[2024-12-14T19:15:10.076+0000] {docker.py:413} INFO - 24/12/14 19:15:10 INFO Utils: /tmp/spark-af6a2c99-decd-474f-b608-ac32561a9395/userFiles-61f50c36-c825-4af3-8535-38404f47e5cf/fetchFileTemp15423577529626567123.tmp has been previously copied to /tmp/spark-af6a2c99-decd-474f-b608-ac32561a9395/userFiles-61f50c36-c825-4af3-8535-38404f47e5cf/org.lz4_lz4-java-1.8.0.jar
[2024-12-14T19:15:10.086+0000] {docker.py:413} INFO - 24/12/14 19:15:10 INFO Executor: Adding file:/tmp/spark-af6a2c99-decd-474f-b608-ac32561a9395/userFiles-61f50c36-c825-4af3-8535-38404f47e5cf/org.lz4_lz4-java-1.8.0.jar to class loader default
[2024-12-14T19:15:10.134+0000] {docker.py:413} INFO - 24/12/14 19:15:10 INFO Utils: Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port 44151.
[2024-12-14T19:15:10.136+0000] {docker.py:413} INFO - 24/12/14 19:15:10 INFO NettyBlockTransferService: Server created on localhost:44151
[2024-12-14T19:15:10.140+0000] {docker.py:413} INFO - 24/12/14 19:15:10 INFO BlockManager: Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy
[2024-12-14T19:15:10.158+0000] {docker.py:413} INFO - 24/12/14 19:15:10 INFO BlockManagerMaster: Registering BlockManager BlockManagerId(driver, localhost, 44151, None)
[2024-12-14T19:15:10.169+0000] {docker.py:413} INFO - 24/12/14 19:15:10 INFO BlockManagerMasterEndpoint: Registering block manager localhost:44151 with 434.4 MiB RAM, BlockManagerId(driver, localhost, 44151, None)
[2024-12-14T19:15:10.176+0000] {docker.py:413} INFO - 24/12/14 19:15:10 INFO BlockManagerMaster: Registered BlockManager BlockManagerId(driver, localhost, 44151, None)
[2024-12-14T19:15:10.181+0000] {docker.py:413} INFO - 24/12/14 19:15:10 INFO BlockManager: Initialized BlockManager: BlockManagerId(driver, localhost, 44151, None)
[2024-12-14T19:15:11.272+0000] {docker.py:413} INFO - 2024-12-14 19:15:11,269 [INFO] Successfully created Spark session
2024-12-14 19:15:11,269 [INFO] Initializing RedditTransformer...
2024-12-14 19:15:11,269 [INFO] Loading spaCy model...
[2024-12-14T19:15:13.496+0000] {docker.py:413} INFO - 2024-12-14 19:15:13,492 [INFO] Successfully loaded spaCy model
2024-12-14 19:15:13,493 [INFO] Initialized database configuration with host: host.docker.internal
2024-12-14 19:15:13,493 [INFO] Schema initialized
2024-12-14 19:15:13,493 [INFO] Expected schema: StructType([StructField('id', StringType(), True), StructField('title', StringType(), True), StructField('author', StringType(), True), StructField('post_time', FloatType(), True), StructField('upvotes', IntegerType(), True), StructField('downvotes', IntegerType(), True), StructField('num_comments', IntegerType(), True), StructField('score', IntegerType(), True), StructField('selftext', StringType(), True), StructField('first_level_comments_count', IntegerType(), True), StructField('second_level_comments_count', IntegerType(), True), StructField('text', StringType(), True), StructField('subreddit', StringType(), True), StructField('processing_timestamp', StringType(), True)])
2024-12-14 19:15:13,493 [INFO] Database config: jdbc:***ql://host.docker.internal:5432/reddit-data
2024-12-14 19:15:13,493 [INFO] Setting up Kafka stream reader with broker: kafka:9092
[2024-12-14T19:15:13.515+0000] {docker.py:413} INFO - 24/12/14 19:15:13 INFO SharedState: Setting hive.metastore.warehouse.dir ('null') to the value of spark.sql.warehouse.dir.
[2024-12-14T19:15:13.521+0000] {docker.py:413} INFO - 24/12/14 19:15:13 INFO SharedState: Warehouse path is 'file:/opt/bitnami/spark/spark-warehouse'.
[2024-12-14T19:15:15.068+0000] {docker.py:413} INFO - 24/12/14 19:15:15 WARN KafkaSourceProvider: Kafka option 'kafka.group.id' has been set on this query, it is
 not recommended to set this option. This option is unsafe to use since multiple concurrent
 queries or sources using the same group id will interfere with each other as they are part
 of the same consumer group. Restarted queries may also suffer interference from the
 previous run having the same group id. The user should have only one query per group id,
 and/or set the option 'kafka.session.timeout.ms' to be very small so that the Kafka
 consumers from the previous query are marked dead by the Kafka group coordinator before the
 restarted query starts running.
[2024-12-14T19:15:16.502+0000] {docker.py:413} INFO - 2024-12-14 19:15:16,500 [INFO] Kafka reader configuration:
2024-12-14 19:15:16,500 [INFO] Raw Kafka schema:
[2024-12-14T19:15:16.542+0000] {docker.py:413} INFO - root
 |-- key: binary (nullable = true)
 |-- value: binary (nullable = true)
 |-- topic: string (nullable = true)
 |-- partition: integer (nullable = true)
 |-- offset: long (nullable = true)
 |-- timestamp: timestamp (nullable = true)
 |-- timestampType: integer (nullable = true)

2024-12-14 19:15:16,540 [INFO] Setting up JSON parsing...
[2024-12-14T19:15:16.950+0000] {docker.py:413} INFO - 2024-12-14 19:15:16,947 [INFO] Starting streaming query...
[2024-12-14T19:15:16.984+0000] {docker.py:413} INFO - 2024-12-14 19:15:16,981 [INFO] Callback Server Starting
2024-12-14 19:15:16,982 [INFO] Socket listening on ('127.0.0.1', 38769)
[2024-12-14T19:15:17.030+0000] {docker.py:413} INFO - 24/12/14 19:15:17 INFO StateStoreCoordinatorRef: Registered StateStoreCoordinator endpoint
[2024-12-14T19:15:17.124+0000] {docker.py:413} INFO - 24/12/14 19:15:17 INFO ResolveWriteToStream: Checkpoint root /opt/spark/checkpoints resolved to file:/opt/spark/checkpoints.
[2024-12-14T19:15:17.126+0000] {docker.py:413} INFO - 24/12/14 19:15:17 WARN ResolveWriteToStream: spark.sql.adaptive.enabled is not supported in streaming DataFrames/Datasets and will be disabled.
[2024-12-14T19:15:17.267+0000] {docker.py:413} INFO - 24/12/14 19:15:17 INFO CheckpointFileManager: Writing atomically to file:/opt/spark/checkpoints/metadata using temp file file:/opt/spark/checkpoints/.metadata.aa580a85-0bc9-4dc9-b421-20122b63b39b.tmp
[2024-12-14T19:15:17.448+0000] {docker.py:413} INFO - 24/12/14 19:15:17 INFO CheckpointFileManager: Renamed temp file file:/opt/spark/checkpoints/.metadata.aa580a85-0bc9-4dc9-b421-20122b63b39b.tmp to file:/opt/spark/checkpoints/metadata
[2024-12-14T19:15:17.518+0000] {docker.py:413} INFO - 24/12/14 19:15:17 INFO MicroBatchExecution: Starting [id = f66ffad1-7143-480f-83e7-41584b2f86df, runId = e4f10132-fdfd-4eb6-8ef6-5a2c2ba04a2e]. Use file:/opt/spark/checkpoints to store the query checkpoint.
[2024-12-14T19:15:17.532+0000] {docker.py:413} INFO - 2024-12-14 19:15:17,529 [INFO] Waiting for streaming query to complete...
[2024-12-14T19:15:17.547+0000] {docker.py:413} INFO - 24/12/14 19:15:17 INFO MicroBatchExecution: Reading table [org.apache.spark.sql.kafka010.KafkaSourceProvider$KafkaTable@2aa61f1] from DataSourceV2 named 'kafka' [org.apache.spark.sql.kafka010.KafkaSourceProvider@5a2f9be7]
[2024-12-14T19:15:17.554+0000] {docker.py:413} INFO - 24/12/14 19:15:17 WARN KafkaSourceProvider: Kafka option 'kafka.group.id' has been set on this query, it is
 not recommended to set this option. This option is unsafe to use since multiple concurrent
 queries or sources using the same group id will interfere with each other as they are part
 of the same consumer group. Restarted queries may also suffer interference from the
 previous run having the same group id. The user should have only one query per group id,
 and/or set the option 'kafka.session.timeout.ms' to be very small so that the Kafka
 consumers from the previous query are marked dead by the Kafka group coordinator before the
 restarted query starts running.
[2024-12-14T19:15:17.616+0000] {docker.py:413} INFO - 24/12/14 19:15:17 INFO OffsetSeqLog: BatchIds found from listing:
[2024-12-14T19:15:17.621+0000] {docker.py:413} INFO - 24/12/14 19:15:17 INFO OffsetSeqLog: BatchIds found from listing:
[2024-12-14T19:15:17.622+0000] {docker.py:413} INFO - 24/12/14 19:15:17 INFO MicroBatchExecution: Starting new streaming query.
[2024-12-14T19:15:17.630+0000] {docker.py:413} INFO - 24/12/14 19:15:17 INFO MicroBatchExecution: Stream started from {}
[2024-12-14T19:15:18.307+0000] {docker.py:413} INFO - 24/12/14 19:15:18 INFO AdminClientConfig: AdminClientConfig values: 
	auto.include.jmx.reporter = true
	bootstrap.servers = [kafka:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
[2024-12-14T19:15:18.470+0000] {docker.py:413} INFO - 24/12/14 19:15:18 INFO AdminClientConfig: These configurations '[key.deserializer, value.deserializer, enable.auto.commit, max.poll.records, group.id, auto.offset.reset]' were supplied but are not used yet.
[2024-12-14T19:15:18.475+0000] {docker.py:413} INFO - 24/12/14 19:15:18 INFO AppInfoParser: Kafka version: 3.5.0
24/12/14 19:15:18 INFO AppInfoParser: Kafka commitId: c97b88d5db4de28d
[2024-12-14T19:15:18.477+0000] {docker.py:413} INFO - 24/12/14 19:15:18 INFO AppInfoParser: Kafka startTimeMs: 1734203718466
[2024-12-14T19:15:19.549+0000] {docker.py:413} INFO - 24/12/14 19:15:19 INFO CheckpointFileManager: Writing atomically to file:/opt/spark/checkpoints/sources/0/0 using temp file file:/opt/spark/checkpoints/sources/0/.0.f260ce32-a125-4377-9aeb-9aba359dcce3.tmp
[2024-12-14T19:15:19.624+0000] {docker.py:413} INFO - 24/12/14 19:15:19 INFO CheckpointFileManager: Renamed temp file file:/opt/spark/checkpoints/sources/0/.0.f260ce32-a125-4377-9aeb-9aba359dcce3.tmp to file:/opt/spark/checkpoints/sources/0/0
[2024-12-14T19:15:19.626+0000] {docker.py:413} INFO - 24/12/14 19:15:19 INFO KafkaMicroBatchStream: Initial offsets: {"reddit_data":{"0":0}}
[2024-12-14T19:15:19.729+0000] {docker.py:413} INFO - 24/12/14 19:15:19 INFO CheckpointFileManager: Writing atomically to file:/opt/spark/checkpoints/offsets/0 using temp file file:/opt/spark/checkpoints/offsets/.0.1ab2c732-31d6-4ade-a2f7-3e0ae1a58d7d.tmp
[2024-12-14T19:15:19.843+0000] {docker.py:413} INFO - 24/12/14 19:15:19 INFO CheckpointFileManager: Renamed temp file file:/opt/spark/checkpoints/offsets/.0.1ab2c732-31d6-4ade-a2f7-3e0ae1a58d7d.tmp to file:/opt/spark/checkpoints/offsets/0
[2024-12-14T19:15:19.845+0000] {docker.py:413} INFO - 24/12/14 19:15:19 INFO MicroBatchExecution: Committed offsets for batch 0. Metadata OffsetSeqMetadata(0,1734203719688,Map(spark.sql.streaming.stateStore.providerClass -> org.apache.spark.sql.execution.streaming.state.HDFSBackedStateStoreProvider, spark.sql.streaming.join.stateFormatVersion -> 2, spark.sql.streaming.stateStore.compression.codec -> lz4, spark.sql.streaming.stateStore.rocksdb.formatVersion -> 5, spark.sql.streaming.statefulOperator.useStrictDistribution -> true, spark.sql.streaming.flatMapGroupsWithState.stateFormatVersion -> 2, spark.sql.streaming.multipleWatermarkPolicy -> min, spark.sql.streaming.aggregation.stateFormatVersion -> 2, spark.sql.shuffle.partitions -> 200))
[2024-12-14T19:15:20.677+0000] {docker.py:413} INFO - 24/12/14 19:15:20 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-12-14T19:15:20.777+0000] {docker.py:413} INFO - 24/12/14 19:15:20 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-12-14T19:15:20.902+0000] {docker.py:413} INFO - 24/12/14 19:15:20 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-12-14T19:15:20.908+0000] {docker.py:413} INFO - 24/12/14 19:15:20 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-12-14T19:15:21.824+0000] {docker.py:413} INFO - 24/12/14 19:15:21 INFO CodeGenerator: Code generated in 375.284403 ms
[2024-12-14T19:15:22.052+0000] {docker.py:413} INFO - 2024-12-14 19:15:22,049 [INFO] Python Server ready to receive messages
2024-12-14 19:15:22,050 [INFO] Received command c on object id p0
[2024-12-14T19:15:22.370+0000] {docker.py:413} INFO - 24/12/14 19:15:22 INFO CodeGenerator: Code generated in 29.037185 ms
[2024-12-14T19:15:22.412+0000] {docker.py:413} INFO - 24/12/14 19:15:22 INFO CodeGenerator: Code generated in 24.04106 ms
[2024-12-14T19:15:22.655+0000] {docker.py:413} INFO - 24/12/14 19:15:22 INFO SparkContext: Starting job: start at NativeMethodAccessorImpl.java:0
[2024-12-14T19:15:22.702+0000] {docker.py:413} INFO - 24/12/14 19:15:22 INFO DAGScheduler: Registering RDD 6 (start at NativeMethodAccessorImpl.java:0) as input to shuffle 0
[2024-12-14T19:15:22.734+0000] {docker.py:413} INFO - 24/12/14 19:15:22 INFO DAGScheduler: Got job 0 (start at NativeMethodAccessorImpl.java:0) with 1 output partitions
[2024-12-14T19:15:22.736+0000] {docker.py:413} INFO - 24/12/14 19:15:22 INFO DAGScheduler: Final stage: ResultStage 1 (start at NativeMethodAccessorImpl.java:0)
[2024-12-14T19:15:22.737+0000] {docker.py:413} INFO - 24/12/14 19:15:22 INFO DAGScheduler: Parents of final stage: List(ShuffleMapStage 0)
[2024-12-14T19:15:22.744+0000] {docker.py:413} INFO - 24/12/14 19:15:22 INFO DAGScheduler: Missing parents: List(ShuffleMapStage 0)
[2024-12-14T19:15:22.755+0000] {docker.py:413} INFO - 24/12/14 19:15:22 INFO DAGScheduler: Submitting ShuffleMapStage 0 (MapPartitionsRDD[6] at start at NativeMethodAccessorImpl.java:0), which has no missing parents
[2024-12-14T19:15:23.067+0000] {docker.py:413} INFO - 24/12/14 19:15:23 INFO MemoryStore: Block broadcast_0 stored as values in memory (estimated size 39.5 KiB, free 434.4 MiB)
[2024-12-14T19:15:23.144+0000] {docker.py:413} INFO - 24/12/14 19:15:23 INFO MemoryStore: Block broadcast_0_piece0 stored as bytes in memory (estimated size 15.9 KiB, free 434.3 MiB)
[2024-12-14T19:15:23.150+0000] {docker.py:413} INFO - 24/12/14 19:15:23 INFO BlockManagerInfo: Added broadcast_0_piece0 in memory on localhost:44151 (size: 15.9 KiB, free: 434.4 MiB)
[2024-12-14T19:15:23.163+0000] {docker.py:413} INFO - 24/12/14 19:15:23 INFO SparkContext: Created broadcast 0 from broadcast at DAGScheduler.scala:1580
[2024-12-14T19:15:23.199+0000] {docker.py:413} INFO - 24/12/14 19:15:23 INFO DAGScheduler: Submitting 1 missing tasks from ShuffleMapStage 0 (MapPartitionsRDD[6] at start at NativeMethodAccessorImpl.java:0) (first 15 tasks are for partitions Vector(0))
[2024-12-14T19:15:23.201+0000] {docker.py:413} INFO - 24/12/14 19:15:23 INFO TaskSchedulerImpl: Adding task set 0.0 with 1 tasks resource profile 0
[2024-12-14T19:15:23.284+0000] {docker.py:413} INFO - 24/12/14 19:15:23 INFO TaskSetManager: Starting task 0.0 in stage 0.0 (TID 0) (localhost, executor driver, partition 0, PROCESS_LOCAL, 10838 bytes)
[2024-12-14T19:15:23.307+0000] {docker.py:413} INFO - 24/12/14 19:15:23 INFO Executor: Running task 0.0 in stage 0.0 (TID 0)
[2024-12-14T19:15:23.539+0000] {docker.py:413} INFO - 24/12/14 19:15:23 INFO CodeGenerator: Code generated in 51.151486 ms
[2024-12-14T19:15:23.580+0000] {docker.py:413} INFO - 24/12/14 19:15:23 INFO CodeGenerator: Code generated in 37.029059 ms
[2024-12-14T19:15:23.612+0000] {docker.py:413} INFO - 24/12/14 19:15:23 INFO CodeGenerator: Code generated in 26.403008 ms
[2024-12-14T19:15:23.640+0000] {docker.py:413} INFO - 24/12/14 19:15:23 INFO KafkaBatchReaderFactory: Creating Kafka reader topicPartition=reddit_data-0 fromOffset=0 untilOffset=600, for query queryId=f66ffad1-7143-480f-83e7-41584b2f86df batchId=0 taskId=0 partitionId=0
[2024-12-14T19:15:23.711+0000] {docker.py:413} INFO - 24/12/14 19:15:23 INFO CodeGenerator: Code generated in 19.51194 ms
[2024-12-14T19:15:23.751+0000] {docker.py:413} INFO - 24/12/14 19:15:23 INFO CodeGenerator: Code generated in 24.889096 ms
[2024-12-14T19:15:23.788+0000] {docker.py:413} INFO - 24/12/14 19:15:23 INFO ConsumerConfig: ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = none
	bootstrap.servers = [kafka:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-reddit_processor_group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = reddit_processor_group
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.ByteArrayDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.ByteArrayDeserializer
[2024-12-14T19:15:23.878+0000] {docker.py:413} INFO - 24/12/14 19:15:23 INFO AppInfoParser: Kafka version: 3.5.0
24/12/14 19:15:23 INFO AppInfoParser: Kafka commitId: c97b88d5db4de28d
[2024-12-14T19:15:23.883+0000] {docker.py:413} INFO - 24/12/14 19:15:23 INFO AppInfoParser: Kafka startTimeMs: 1734203723873
[2024-12-14T19:15:23.885+0000] {docker.py:413} INFO - 24/12/14 19:15:23 INFO KafkaConsumer: [Consumer clientId=consumer-reddit_processor_group-1, groupId=reddit_processor_group] Assigned to partition(s): reddit_data-0
[2024-12-14T19:15:23.909+0000] {docker.py:413} INFO - 24/12/14 19:15:23 INFO KafkaConsumer: [Consumer clientId=consumer-reddit_processor_group-1, groupId=reddit_processor_group] Seeking to offset 0 for partition reddit_data-0
[2024-12-14T19:15:23.940+0000] {docker.py:413} INFO - 24/12/14 19:15:23 INFO Metadata: [Consumer clientId=consumer-reddit_processor_group-1, groupId=reddit_processor_group] Cluster ID: y_jx5SImQsqTV8y5Et3GdQ
[2024-12-14T19:15:24.129+0000] {docker.py:413} INFO - 24/12/14 19:15:24 INFO SubscriptionState: [Consumer clientId=consumer-reddit_processor_group-1, groupId=reddit_processor_group] Seeking to earliest offset of partition reddit_data-0
[2024-12-14T19:15:24.152+0000] {docker.py:413} INFO - 24/12/14 19:15:24 INFO SubscriptionState: [Consumer clientId=consumer-reddit_processor_group-1, groupId=reddit_processor_group] Resetting offset for partition reddit_data-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=30}}.
[2024-12-14T19:15:24.154+0000] {docker.py:413} INFO - 24/12/14 19:15:24 INFO SubscriptionState: [Consumer clientId=consumer-reddit_processor_group-1, groupId=reddit_processor_group] Seeking to latest offset of partition reddit_data-0
[2024-12-14T19:15:24.157+0000] {docker.py:413} INFO - 24/12/14 19:15:24 INFO SubscriptionState: [Consumer clientId=consumer-reddit_processor_group-1, groupId=reddit_processor_group] Resetting offset for partition reddit_data-0 to position FetchPosition{offset=600, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=30}}.
[2024-12-14T19:15:24.686+0000] {docker.py:413} INFO - 24/12/14 19:15:24 INFO KafkaConsumer: [Consumer clientId=consumer-reddit_processor_group-1, groupId=reddit_processor_group] Seeking to offset 500 for partition reddit_data-0
[2024-12-14T19:15:24.703+0000] {docker.py:413} INFO - 24/12/14 19:15:24 INFO SubscriptionState: [Consumer clientId=consumer-reddit_processor_group-1, groupId=reddit_processor_group] Seeking to earliest offset of partition reddit_data-0
[2024-12-14T19:15:25.212+0000] {docker.py:413} INFO - 24/12/14 19:15:25 INFO SubscriptionState: [Consumer clientId=consumer-reddit_processor_group-1, groupId=reddit_processor_group] Resetting offset for partition reddit_data-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=30}}.
[2024-12-14T19:15:25.214+0000] {docker.py:413} INFO - 24/12/14 19:15:25 INFO SubscriptionState: [Consumer clientId=consumer-reddit_processor_group-1, groupId=reddit_processor_group] Seeking to latest offset of partition reddit_data-0
[2024-12-14T19:15:25.219+0000] {docker.py:413} INFO - 24/12/14 19:15:25 INFO SubscriptionState: [Consumer clientId=consumer-reddit_processor_group-1, groupId=reddit_processor_group] Resetting offset for partition reddit_data-0 to position FetchPosition{offset=600, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=30}}.
[2024-12-14T19:15:25.387+0000] {docker.py:413} INFO - 24/12/14 19:15:25 INFO KafkaDataConsumer: From Kafka topicPartition=reddit_data-0 groupId=reddit_processor_group read 600 records through 2 polls (polled  out 600 records), taking 783927028 nanos, during time span of 1477187836 nanos.
[2024-12-14T19:15:25.470+0000] {docker.py:413} INFO - 24/12/14 19:15:25 INFO Executor: Finished task 0.0 in stage 0.0 (TID 0). 2383 bytes result sent to driver
[2024-12-14T19:15:25.514+0000] {docker.py:413} INFO - 24/12/14 19:15:25 INFO TaskSetManager: Finished task 0.0 in stage 0.0 (TID 0) in 2247 ms on localhost (executor driver) (1/1)
[2024-12-14T19:15:25.521+0000] {docker.py:413} INFO - 24/12/14 19:15:25 INFO TaskSchedulerImpl: Removed TaskSet 0.0, whose tasks have all completed, from pool
[2024-12-14T19:15:25.550+0000] {docker.py:413} INFO - 24/12/14 19:15:25 INFO DAGScheduler: ShuffleMapStage 0 (start at NativeMethodAccessorImpl.java:0) finished in 2.756 s
[2024-12-14T19:15:25.554+0000] {docker.py:413} INFO - 24/12/14 19:15:25 INFO DAGScheduler: looking for newly runnable stages
[2024-12-14T19:15:25.561+0000] {docker.py:413} INFO - 24/12/14 19:15:25 INFO DAGScheduler: running: Set()
[2024-12-14T19:15:25.565+0000] {docker.py:413} INFO - 24/12/14 19:15:25 INFO DAGScheduler: waiting: Set(ResultStage 1)
[2024-12-14T19:15:25.568+0000] {docker.py:413} INFO - 24/12/14 19:15:25 INFO DAGScheduler: failed: Set()
[2024-12-14T19:15:25.574+0000] {docker.py:413} INFO - 24/12/14 19:15:25 INFO DAGScheduler: Submitting ResultStage 1 (MapPartitionsRDD[9] at start at NativeMethodAccessorImpl.java:0), which has no missing parents
[2024-12-14T19:15:25.622+0000] {docker.py:413} INFO - 24/12/14 19:15:25 INFO MemoryStore: Block broadcast_1 stored as values in memory (estimated size 12.5 KiB, free 434.3 MiB)
[2024-12-14T19:15:25.634+0000] {docker.py:413} INFO - 24/12/14 19:15:25 INFO MemoryStore: Block broadcast_1_piece0 stored as bytes in memory (estimated size 5.9 KiB, free 434.3 MiB)
[2024-12-14T19:15:25.636+0000] {docker.py:413} INFO - 24/12/14 19:15:25 INFO BlockManagerInfo: Added broadcast_1_piece0 in memory on localhost:44151 (size: 5.9 KiB, free: 434.4 MiB)
[2024-12-14T19:15:25.639+0000] {docker.py:413} INFO - 24/12/14 19:15:25 INFO SparkContext: Created broadcast 1 from broadcast at DAGScheduler.scala:1580
[2024-12-14T19:15:25.646+0000] {docker.py:413} INFO - 24/12/14 19:15:25 INFO DAGScheduler: Submitting 1 missing tasks from ResultStage 1 (MapPartitionsRDD[9] at start at NativeMethodAccessorImpl.java:0) (first 15 tasks are for partitions Vector(0))
[2024-12-14T19:15:25.649+0000] {docker.py:413} INFO - 24/12/14 19:15:25 INFO TaskSchedulerImpl: Adding task set 1.0 with 1 tasks resource profile 0
[2024-12-14T19:15:25.674+0000] {docker.py:413} INFO - 24/12/14 19:15:25 INFO TaskSetManager: Starting task 0.0 in stage 1.0 (TID 1) (localhost, executor driver, partition 0, NODE_LOCAL, 9963 bytes)
[2024-12-14T19:15:25.676+0000] {docker.py:413} INFO - 24/12/14 19:15:25 INFO Executor: Running task 0.0 in stage 1.0 (TID 1)
[2024-12-14T19:15:25.862+0000] {docker.py:413} INFO - 24/12/14 19:15:25 INFO BlockManagerInfo: Removed broadcast_0_piece0 on localhost:44151 in memory (size: 15.9 KiB, free: 434.4 MiB)
[2024-12-14T19:15:25.872+0000] {docker.py:413} INFO - 24/12/14 19:15:25 INFO ShuffleBlockFetcherIterator: Getting 1 (60.0 B) non-empty blocks including 1 (60.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) push-merged-local and 0 (0.0 B) remote blocks
[2024-12-14T19:15:25.884+0000] {docker.py:413} INFO - 24/12/14 19:15:25 INFO ShuffleBlockFetcherIterator: Started 0 remote fetches in 48 ms
[2024-12-14T19:15:25.940+0000] {docker.py:413} INFO - 24/12/14 19:15:25 INFO CodeGenerator: Code generated in 41.112042 ms
[2024-12-14T19:15:25.974+0000] {docker.py:413} INFO - 24/12/14 19:15:25 INFO Executor: Finished task 0.0 in stage 1.0 (TID 1). 4081 bytes result sent to driver
[2024-12-14T19:15:25.983+0000] {docker.py:413} INFO - 24/12/14 19:15:25 INFO TaskSetManager: Finished task 0.0 in stage 1.0 (TID 1) in 321 ms on localhost (executor driver) (1/1)
[2024-12-14T19:15:25.984+0000] {docker.py:413} INFO - 24/12/14 19:15:25 INFO TaskSchedulerImpl: Removed TaskSet 1.0, whose tasks have all completed, from pool
[2024-12-14T19:15:25.988+0000] {docker.py:413} INFO - 24/12/14 19:15:25 INFO DAGScheduler: ResultStage 1 (start at NativeMethodAccessorImpl.java:0) finished in 0.384 s
[2024-12-14T19:15:26.001+0000] {docker.py:413} INFO - 24/12/14 19:15:25 INFO DAGScheduler: Job 0 is finished. Cancelling potential speculative or zombie tasks for this job
[2024-12-14T19:15:26.004+0000] {docker.py:413} INFO - 24/12/14 19:15:26 INFO TaskSchedulerImpl: Killing all running tasks in stage 1: Stage finished
[2024-12-14T19:15:26.010+0000] {docker.py:413} INFO - 24/12/14 19:15:26 INFO DAGScheduler: Job 0 finished: start at NativeMethodAccessorImpl.java:0, took 3.353919 s
[2024-12-14T19:15:26.046+0000] {docker.py:413} INFO - 2024-12-14 19:15:26,042 [INFO] Starting to process batch 0 with 600 records
2024-12-14 19:15:26,042 [INFO] Sample data from batch 0:
[2024-12-14T19:15:26.296+0000] {docker.py:413} INFO - 24/12/14 19:15:26 INFO CodeGenerator: Code generated in 37.588885 ms
[2024-12-14T19:15:26.328+0000] {docker.py:413} INFO - 24/12/14 19:15:26 INFO SparkContext: Starting job: start at NativeMethodAccessorImpl.java:0
[2024-12-14T19:15:26.332+0000] {docker.py:413} INFO - 24/12/14 19:15:26 INFO DAGScheduler: Got job 1 (start at NativeMethodAccessorImpl.java:0) with 1 output partitions
24/12/14 19:15:26 INFO DAGScheduler: Final stage: ResultStage 2 (start at NativeMethodAccessorImpl.java:0)
24/12/14 19:15:26 INFO DAGScheduler: Parents of final stage: List()
[2024-12-14T19:15:26.334+0000] {docker.py:413} INFO - 24/12/14 19:15:26 INFO DAGScheduler: Missing parents: List()
[2024-12-14T19:15:26.336+0000] {docker.py:413} INFO - 24/12/14 19:15:26 INFO DAGScheduler: Submitting ResultStage 2 (MapPartitionsRDD[11] at start at NativeMethodAccessorImpl.java:0), which has no missing parents
[2024-12-14T19:15:26.349+0000] {docker.py:413} INFO - 24/12/14 19:15:26 INFO MemoryStore: Block broadcast_2 stored as values in memory (estimated size 41.2 KiB, free 434.3 MiB)
[2024-12-14T19:15:26.352+0000] {docker.py:413} INFO - 24/12/14 19:15:26 INFO MemoryStore: Block broadcast_2_piece0 stored as bytes in memory (estimated size 15.6 KiB, free 434.3 MiB)
[2024-12-14T19:15:26.356+0000] {docker.py:413} INFO - 24/12/14 19:15:26 INFO BlockManagerInfo: Added broadcast_2_piece0 in memory on localhost:44151 (size: 15.6 KiB, free: 434.4 MiB)
[2024-12-14T19:15:26.358+0000] {docker.py:413} INFO - 24/12/14 19:15:26 INFO SparkContext: Created broadcast 2 from broadcast at DAGScheduler.scala:1580
[2024-12-14T19:15:26.362+0000] {docker.py:413} INFO - 24/12/14 19:15:26 INFO DAGScheduler: Submitting 1 missing tasks from ResultStage 2 (MapPartitionsRDD[11] at start at NativeMethodAccessorImpl.java:0) (first 15 tasks are for partitions Vector(0))
[2024-12-14T19:15:26.364+0000] {docker.py:413} INFO - 24/12/14 19:15:26 INFO TaskSchedulerImpl: Adding task set 2.0 with 1 tasks resource profile 0
[2024-12-14T19:15:26.370+0000] {docker.py:413} INFO - 24/12/14 19:15:26 INFO TaskSetManager: Starting task 0.0 in stage 2.0 (TID 2) (localhost, executor driver, partition 0, PROCESS_LOCAL, 10849 bytes)
[2024-12-14T19:15:26.373+0000] {docker.py:413} INFO - 24/12/14 19:15:26 INFO Executor: Running task 0.0 in stage 2.0 (TID 2)
[2024-12-14T19:15:26.467+0000] {docker.py:413} INFO - 24/12/14 19:15:26 INFO CodeGenerator: Code generated in 56.232679 ms
[2024-12-14T19:15:26.469+0000] {docker.py:413} INFO - 24/12/14 19:15:26 INFO KafkaBatchReaderFactory: Creating Kafka reader topicPartition=reddit_data-0 fromOffset=0 untilOffset=600, for query queryId=f66ffad1-7143-480f-83e7-41584b2f86df batchId=0 taskId=2 partitionId=0
[2024-12-14T19:15:26.503+0000] {docker.py:413} INFO - 24/12/14 19:15:26 INFO KafkaConsumer: [Consumer clientId=consumer-reddit_processor_group-1, groupId=reddit_processor_group] Seeking to offset 0 for partition reddit_data-0
[2024-12-14T19:15:26.515+0000] {docker.py:413} INFO - 24/12/14 19:15:26 INFO SubscriptionState: [Consumer clientId=consumer-reddit_processor_group-1, groupId=reddit_processor_group] Seeking to earliest offset of partition reddit_data-0
[2024-12-14T19:15:26.519+0000] {docker.py:413} INFO - 24/12/14 19:15:26 INFO SubscriptionState: [Consumer clientId=consumer-reddit_processor_group-1, groupId=reddit_processor_group] Resetting offset for partition reddit_data-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=30}}.
24/12/14 19:15:26 INFO SubscriptionState: [Consumer clientId=consumer-reddit_processor_group-1, groupId=reddit_processor_group] Seeking to latest offset of partition reddit_data-0
[2024-12-14T19:15:26.524+0000] {docker.py:413} INFO - 24/12/14 19:15:26 INFO SubscriptionState: [Consumer clientId=consumer-reddit_processor_group-1, groupId=reddit_processor_group] Resetting offset for partition reddit_data-0 to position FetchPosition{offset=600, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=30}}.
[2024-12-14T19:15:26.537+0000] {docker.py:413} INFO - 24/12/14 19:15:26 INFO KafkaDataConsumer: From Kafka topicPartition=reddit_data-0 groupId=reddit_processor_group read 3 records through 1 polls (polled  out 500 records), taking 21204153 nanos, during time span of 33467764 nanos.
[2024-12-14T19:15:26.548+0000] {docker.py:413} INFO - 24/12/14 19:15:26 INFO Executor: Finished task 0.0 in stage 2.0 (TID 2). 3723 bytes result sent to driver
[2024-12-14T19:15:26.557+0000] {docker.py:413} INFO - 24/12/14 19:15:26 INFO TaskSetManager: Finished task 0.0 in stage 2.0 (TID 2) in 189 ms on localhost (executor driver) (1/1)
[2024-12-14T19:15:26.560+0000] {docker.py:413} INFO - 24/12/14 19:15:26 INFO TaskSchedulerImpl: Removed TaskSet 2.0, whose tasks have all completed, from pool
[2024-12-14T19:15:26.562+0000] {docker.py:413} INFO - 24/12/14 19:15:26 INFO DAGScheduler: ResultStage 2 (start at NativeMethodAccessorImpl.java:0) finished in 0.221 s
[2024-12-14T19:15:26.564+0000] {docker.py:413} INFO - 24/12/14 19:15:26 INFO DAGScheduler: Job 1 is finished. Cancelling potential speculative or zombie tasks for this job
24/12/14 19:15:26 INFO TaskSchedulerImpl: Killing all running tasks in stage 2: Stage finished
[2024-12-14T19:15:26.565+0000] {docker.py:413} INFO - 24/12/14 19:15:26 INFO DAGScheduler: Job 1 finished: start at NativeMethodAccessorImpl.java:0, took 0.234901 s
[2024-12-14T19:15:29.602+0000] {docker.py:413} INFO - 24/12/14 19:15:29 INFO CodeGenerator: Code generated in 33.832161 ms
[2024-12-14T19:15:29.690+0000] {docker.py:413}
|id     |title                                                                                                                                                                                                                                                                                 |author    |post_time   |upvotes|downvotes|num_comments|score|selftext|first_level_comments_count|second_level_comments_count|text|subreddit|processing_timestamp      |

|1he0jj3|After Milan's 2-1 win against Crvena Zvezda, coach Fonseca had said: "I don't give a f... about the player's name, I work hard to give my best, some in the team don't. If I need to play players from the youth team I will do it." Today 6 youth players trained with the first team|Blodgharm |1.7341737E9 |20     |0        |2           |20   ||1                         |1                          ||soccer   |2024-12-14T11:08:32.604441|
|1he0j1x|UK TV Games & What to Watch: Sunday 15th December                                                                                                                                                                                                                                     |JammyMoore|1.73417357E9|2      |0        |1           |2    |Looking at the games on **Sunday 15th December** that are available to watch in the UK. Where to watch them and what I would watch!\n\nEarly risers can watch a tasty match from the Australian **A-League**. Newly founded **Auckland FC** are 6 wins from 6 games this season, and they travel to the seasoned **Melbourne City**.\n\nNext up is a double header of **Serie A** matches. A relegation scrap as **Lecce**, sitting 1 point outside the drop zone face **Monza** sitting in 19th. Followed up by Derby dell' Appennino, as Vincenzo Italiano's **Bologna** host his former club **Fiorentina**.\n\nThe match of the day is the Manchester Derby in the **Premier League**. Out of form **Manchester City** take on a new form **Manchester United** under Ruben Amorim.\n\nTo round of the day, a big showdown in **Ligue 1**. League leaders **PSG** take on a revived **Lyon** in what surely will be a tasty match.\n\n|Time|Fixture|Competition|Provider / Channel|\n|:-|:-|:-|:-|\n|06:00|Melbourne City v Auckland FC|A-League Men|TNT Sports 1|\n|11:30|Lecce v Monza|Serie A|OneFootball|\n|14:00|Bologna v Fiorentina|Serie A|OneFootball|\n|16:30|Manchester City v Manchester United|Premier League|Sky Sports Main Event / Sky Sports Premier League / Sky Sports Ultra HDR|\n|19:45|PSG v Lyon|Ligue 1|Ligue 1 Pass|\n\n|1                         |0                          |Looking at the games on **Sunday 15th December** that are available to watch in the UK. Where to watch them and what I would watch!\n\nEarly risers can watch a tasty match from the Australian **A-League**. Newly founded **Auckland FC** are 6 wins from 6 games this season, and they travel to the seasoned **Melbourne City**.\n\nNext up is a double header of **Serie A** matches. A relegation scrap as **Lecce**, sitting 1 point outside the drop zone face **Monza** sitting in 19th. Followed up by Derby dell' Appennino, as Vincenzo Italiano's **Bologna** host his former club **Fiorentina**.\n\nThe match of the day is the Manchester Derby in the **Premier League**. Out of form **Manchester City** take on a new form **Manchester United** under Ruben Amorim.\n\nTo round of the day, a big showdown in **Ligue 1**. League leaders **PSG** take on a revived **Lyon** in what surely will be a tasty match.\n\n|Time|Fixture|Competition|Provider / Channel|\n|:-|:-|:-|:-|\n|06:00|Melbourne City v Auckland FC|A-League Men|TNT Sports 1|\n|11:30|Lecce v Monza|Serie A|OneFootball|\n|14:00|Bologna v Fiorentina|Serie A|OneFootball|\n|16:30|Manchester City v Manchester United|Premier League|Sky Sports Main Event / Sky Sports Premier League / Sky Sports Ultra HDR|\n|19:45|PSG v Lyon|Ligue 1|Ligue 1 Pass|\n\n|soccer   |2024-12-14T11:08:33.922040|

only showing top 2 rows

2024-12-14 19:15:29,686 [INFO] Transforming posts for batch 0...
2024-12-14 19:15:29,687 [INFO] Starting posts transformation...
[2024-12-14T19:15:30.042+0000] {docker.py:413} INFO - 24/12/14 19:15:30 INFO SparkContext: Starting job: start at NativeMethodAccessorImpl.java:0
[2024-12-14T19:15:30.045+0000] {docker.py:413} INFO - 24/12/14 19:15:30 INFO DAGScheduler: Registering RDD 13 (start at NativeMethodAccessorImpl.java:0) as input to shuffle 1
[2024-12-14T19:15:30.048+0000] {docker.py:413} INFO - 24/12/14 19:15:30 INFO DAGScheduler: Got job 2 (start at NativeMethodAccessorImpl.java:0) with 1 output partitions
24/12/14 19:15:30 INFO DAGScheduler: Final stage: ResultStage 4 (start at NativeMethodAccessorImpl.java:0)
24/12/14 19:15:30 INFO DAGScheduler: Parents of final stage: List(ShuffleMapStage 3)
[2024-12-14T19:15:30.050+0000] {docker.py:413} INFO - 24/12/14 19:15:30 INFO DAGScheduler: Missing parents: List(ShuffleMapStage 3)
[2024-12-14T19:15:30.052+0000] {docker.py:413} INFO - 24/12/14 19:15:30 INFO DAGScheduler: Submitting ShuffleMapStage 3 (MapPartitionsRDD[13] at start at NativeMethodAccessorImpl.java:0), which has no missing parents
[2024-12-14T19:15:30.061+0000] {docker.py:413} INFO - 24/12/14 19:15:30 INFO MemoryStore: Block broadcast_3 stored as values in memory (estimated size 39.5 KiB, free 434.3 MiB)
[2024-12-14T19:15:30.066+0000] {docker.py:413} INFO - 24/12/14 19:15:30 INFO MemoryStore: Block broadcast_3_piece0 stored as bytes in memory (estimated size 15.9 KiB, free 434.3 MiB)
[2024-12-14T19:15:30.067+0000] {docker.py:413} INFO - 24/12/14 19:15:30 INFO BlockManagerInfo: Added broadcast_3_piece0 in memory on localhost:44151 (size: 15.9 KiB, free: 434.4 MiB)
[2024-12-14T19:15:30.071+0000] {docker.py:413} INFO - 24/12/14 19:15:30 INFO SparkContext: Created broadcast 3 from broadcast at DAGScheduler.scala:1580
[2024-12-14T19:15:30.074+0000] {docker.py:413} INFO - 24/12/14 19:15:30 INFO DAGScheduler: Submitting 1 missing tasks from ShuffleMapStage 3 (MapPartitionsRDD[13] at start at NativeMethodAccessorImpl.java:0) (first 15 tasks are for partitions Vector(0))
[2024-12-14T19:15:30.075+0000] {docker.py:413} INFO - 24/12/14 19:15:30 INFO TaskSchedulerImpl: Adding task set 3.0 with 1 tasks resource profile 0
[2024-12-14T19:15:30.087+0000] {docker.py:413} INFO - 24/12/14 19:15:30 INFO TaskSetManager: Starting task 0.0 in stage 3.0 (TID 3) (localhost, executor driver, partition 0, PROCESS_LOCAL, 10838 bytes)
[2024-12-14T19:15:30.089+0000] {docker.py:413} INFO - 24/12/14 19:15:30 INFO Executor: Running task 0.0 in stage 3.0 (TID 3)
[2024-12-14T19:15:30.117+0000] {docker.py:413} INFO - 24/12/14 19:15:30 INFO KafkaBatchReaderFactory: Creating Kafka reader topicPartition=reddit_data-0 fromOffset=0 untilOffset=600, for query queryId=f66ffad1-7143-480f-83e7-41584b2f86df batchId=0 taskId=3 partitionId=0
[2024-12-14T19:15:30.138+0000] {docker.py:413} INFO - 24/12/14 19:15:30 INFO KafkaConsumer: [Consumer clientId=consumer-reddit_processor_group-1, groupId=reddit_processor_group] Seeking to offset 0 for partition reddit_data-0
[2024-12-14T19:15:30.152+0000] {docker.py:413} INFO - 24/12/14 19:15:30 INFO SubscriptionState: [Consumer clientId=consumer-reddit_processor_group-1, groupId=reddit_processor_group] Seeking to earliest offset of partition reddit_data-0
[2024-12-14T19:15:30.157+0000] {docker.py:413} INFO - 24/12/14 19:15:30 INFO SubscriptionState: [Consumer clientId=consumer-reddit_processor_group-1, groupId=reddit_processor_group] Resetting offset for partition reddit_data-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=30}}.
[2024-12-14T19:15:30.158+0000] {docker.py:413} INFO - 24/12/14 19:15:30 INFO SubscriptionState: [Consumer clientId=consumer-reddit_processor_group-1, groupId=reddit_processor_group] Seeking to latest offset of partition reddit_data-0
[2024-12-14T19:15:30.164+0000] {docker.py:413} INFO - 24/12/14 19:15:30 INFO SubscriptionState: [Consumer clientId=consumer-reddit_processor_group-1, groupId=reddit_processor_group] Resetting offset for partition reddit_data-0 to position FetchPosition{offset=600, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=30}}.
[2024-12-14T19:15:30.251+0000] {docker.py:413} INFO - 24/12/14 19:15:30 INFO KafkaConsumer: [Consumer clientId=consumer-reddit_processor_group-1, groupId=reddit_processor_group] Seeking to offset 500 for partition reddit_data-0
[2024-12-14T19:15:30.254+0000] {docker.py:413} INFO - 24/12/14 19:15:30 INFO SubscriptionState: [Consumer clientId=consumer-reddit_processor_group-1, groupId=reddit_processor_group] Seeking to earliest offset of partition reddit_data-0
[2024-12-14T19:15:30.760+0000] {docker.py:413} INFO - 24/12/14 19:15:30 INFO SubscriptionState: [Consumer clientId=consumer-reddit_processor_group-1, groupId=reddit_processor_group] Resetting offset for partition reddit_data-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=30}}.
[2024-12-14T19:15:30.762+0000] {docker.py:413} INFO - 24/12/14 19:15:30 INFO SubscriptionState: [Consumer clientId=consumer-reddit_processor_group-1, groupId=reddit_processor_group] Seeking to latest offset of partition reddit_data-0
[2024-12-14T19:15:30.767+0000] {docker.py:413} INFO - 24/12/14 19:15:30 INFO SubscriptionState: [Consumer clientId=consumer-reddit_processor_group-1, groupId=reddit_processor_group] Resetting offset for partition reddit_data-0 to position FetchPosition{offset=600, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=30}}.
[2024-12-14T19:15:30.779+0000] {docker.py:413} INFO - 24/12/14 19:15:30 INFO KafkaDataConsumer: From Kafka topicPartition=reddit_data-0 groupId=reddit_processor_group read 600 records through 2 polls (polled  out 600 records), taking 542673356 nanos, during time span of 642795757 nanos.
[2024-12-14T19:15:30.784+0000] {docker.py:413} INFO - 24/12/14 19:15:30 INFO Executor: Finished task 0.0 in stage 3.0 (TID 3). 2297 bytes result sent to driver
[2024-12-14T19:15:30.789+0000] {docker.py:413} INFO - 24/12/14 19:15:30 INFO TaskSetManager: Finished task 0.0 in stage 3.0 (TID 3) in 709 ms on localhost (executor driver) (1/1)
[2024-12-14T19:15:30.791+0000] {docker.py:413} INFO - 24/12/14 19:15:30 INFO TaskSchedulerImpl: Removed TaskSet 3.0, whose tasks have all completed, from pool
[2024-12-14T19:15:30.793+0000] {docker.py:413} INFO - 24/12/14 19:15:30 INFO DAGScheduler: ShuffleMapStage 3 (start at NativeMethodAccessorImpl.java:0) finished in 0.742 s
[2024-12-14T19:15:30.794+0000] {docker.py:413} INFO - 24/12/14 19:15:30 INFO DAGScheduler: looking for newly runnable stages
[2024-12-14T19:15:30.796+0000] {docker.py:413} INFO - 24/12/14 19:15:30 INFO DAGScheduler: running: Set()
24/12/14 19:15:30 INFO DAGScheduler: waiting: Set(ResultStage 4)
[2024-12-14T19:15:30.797+0000] {docker.py:413} INFO - 24/12/14 19:15:30 INFO DAGScheduler: failed: Set()
[2024-12-14T19:15:30.798+0000] {docker.py:413} INFO - 24/12/14 19:15:30 INFO DAGScheduler: Submitting ResultStage 4 (MapPartitionsRDD[16] at start at NativeMethodAccessorImpl.java:0), which has no missing parents
[2024-12-14T19:15:30.811+0000] {docker.py:413} INFO - 24/12/14 19:15:30 INFO MemoryStore: Block broadcast_4 stored as values in memory (estimated size 12.5 KiB, free 434.3 MiB)
[2024-12-14T19:15:30.818+0000] {docker.py:413} INFO - 24/12/14 19:15:30 INFO MemoryStore: Block broadcast_4_piece0 stored as bytes in memory (estimated size 5.9 KiB, free 434.3 MiB)
[2024-12-14T19:15:30.822+0000] {docker.py:413} INFO - 24/12/14 19:15:30 INFO BlockManagerInfo: Added broadcast_4_piece0 in memory on localhost:44151 (size: 5.9 KiB, free: 434.4 MiB)
[2024-12-14T19:15:30.824+0000] {docker.py:413} INFO - 24/12/14 19:15:30 INFO SparkContext: Created broadcast 4 from broadcast at DAGScheduler.scala:1580
[2024-12-14T19:15:30.828+0000] {docker.py:413} INFO - 24/12/14 19:15:30 INFO DAGScheduler: Submitting 1 missing tasks from ResultStage 4 (MapPartitionsRDD[16] at start at NativeMethodAccessorImpl.java:0) (first 15 tasks are for partitions Vector(0))
[2024-12-14T19:15:30.830+0000] {docker.py:413} INFO - 24/12/14 19:15:30 INFO TaskSchedulerImpl: Adding task set 4.0 with 1 tasks resource profile 0
[2024-12-14T19:15:30.835+0000] {docker.py:413} INFO - 24/12/14 19:15:30 INFO TaskSetManager: Starting task 0.0 in stage 4.0 (TID 4) (localhost, executor driver, partition 0, NODE_LOCAL, 9963 bytes)
[2024-12-14T19:15:30.840+0000] {docker.py:413} INFO - 24/12/14 19:15:30 INFO Executor: Running task 0.0 in stage 4.0 (TID 4)
[2024-12-14T19:15:30.860+0000] {docker.py:413} INFO - 24/12/14 19:15:30 INFO ShuffleBlockFetcherIterator: Getting 1 (60.0 B) non-empty blocks including 1 (60.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) push-merged-local and 0 (0.0 B) remote blocks
[2024-12-14T19:15:30.862+0000] {docker.py:413} INFO - 24/12/14 19:15:30 INFO ShuffleBlockFetcherIterator: Started 0 remote fetches in 2 ms
[2024-12-14T19:15:30.873+0000] {docker.py:413} INFO - 24/12/14 19:15:30 INFO Executor: Finished task 0.0 in stage 4.0 (TID 4). 4038 bytes result sent to driver
[2024-12-14T19:15:30.881+0000] {docker.py:413} INFO - 24/12/14 19:15:30 INFO TaskSetManager: Finished task 0.0 in stage 4.0 (TID 4) in 47 ms on localhost (executor driver) (1/1)
24/12/14 19:15:30 INFO TaskSchedulerImpl: Removed TaskSet 4.0, whose tasks have all completed, from pool
[2024-12-14T19:15:30.886+0000] {docker.py:413} INFO - 24/12/14 19:15:30 INFO DAGScheduler: ResultStage 4 (start at NativeMethodAccessorImpl.java:0) finished in 0.084 s
[2024-12-14T19:15:30.888+0000] {docker.py:413} INFO - 24/12/14 19:15:30 INFO DAGScheduler: Job 2 is finished. Cancelling potential speculative or zombie tasks for this job
24/12/14 19:15:30 INFO TaskSchedulerImpl: Killing all running tasks in stage 4: Stage finished
[2024-12-14T19:15:30.891+0000] {docker.py:413} INFO - 24/12/14 19:15:30 INFO DAGScheduler: Job 2 finished: start at NativeMethodAccessorImpl.java:0, took 0.846206 s
[2024-12-14T19:15:30.896+0000] {docker.py:413} INFO - 2024-12-14 19:15:30,893 [INFO] Successfully transformed 600 posts
[2024-12-14T19:15:31.015+0000] {docker.py:413} INFO - 24/12/14 19:15:31 INFO SparkContext: Starting job: start at NativeMethodAccessorImpl.java:0
[2024-12-14T19:15:31.020+0000] {docker.py:413} INFO - 24/12/14 19:15:31 INFO DAGScheduler: Registering RDD 18 (start at NativeMethodAccessorImpl.java:0) as input to shuffle 2
[2024-12-14T19:15:31.021+0000] {docker.py:413} INFO - 24/12/14 19:15:31 INFO DAGScheduler: Got job 3 (start at NativeMethodAccessorImpl.java:0) with 1 output partitions
24/12/14 19:15:31 INFO DAGScheduler: Final stage: ResultStage 6 (start at NativeMethodAccessorImpl.java:0)
[2024-12-14T19:15:31.023+0000] {docker.py:413} INFO - 24/12/14 19:15:31 INFO DAGScheduler: Parents of final stage: List(ShuffleMapStage 5)
[2024-12-14T19:15:31.025+0000] {docker.py:413} INFO - 24/12/14 19:15:31 INFO DAGScheduler: Missing parents: List(ShuffleMapStage 5)
[2024-12-14T19:15:31.027+0000] {docker.py:413} INFO - 24/12/14 19:15:31 INFO DAGScheduler: Submitting ShuffleMapStage 5 (MapPartitionsRDD[18] at start at NativeMethodAccessorImpl.java:0), which has no missing parents
[2024-12-14T19:15:31.039+0000] {docker.py:413} INFO - 24/12/14 19:15:31 INFO MemoryStore: Block broadcast_5 stored as values in memory (estimated size 39.5 KiB, free 434.2 MiB)
[2024-12-14T19:15:31.044+0000] {docker.py:413} INFO - 24/12/14 19:15:31 INFO MemoryStore: Block broadcast_5_piece0 stored as bytes in memory (estimated size 15.9 KiB, free 434.2 MiB)
[2024-12-14T19:15:31.048+0000] {docker.py:413} INFO - 24/12/14 19:15:31 INFO BlockManagerInfo: Added broadcast_5_piece0 in memory on localhost:44151 (size: 15.9 KiB, free: 434.3 MiB)
[2024-12-14T19:15:31.050+0000] {docker.py:413} INFO - 24/12/14 19:15:31 INFO SparkContext: Created broadcast 5 from broadcast at DAGScheduler.scala:1580
[2024-12-14T19:15:31.052+0000] {docker.py:413} INFO - 24/12/14 19:15:31 INFO DAGScheduler: Submitting 1 missing tasks from ShuffleMapStage 5 (MapPartitionsRDD[18] at start at NativeMethodAccessorImpl.java:0) (first 15 tasks are for partitions Vector(0))
24/12/14 19:15:31 INFO TaskSchedulerImpl: Adding task set 5.0 with 1 tasks resource profile 0
[2024-12-14T19:15:31.060+0000] {docker.py:413} INFO - 24/12/14 19:15:31 INFO TaskSetManager: Starting task 0.0 in stage 5.0 (TID 5) (localhost, executor driver, partition 0, PROCESS_LOCAL, 10838 bytes)
[2024-12-14T19:15:31.065+0000] {docker.py:413} INFO - 24/12/14 19:15:31 INFO Executor: Running task 0.0 in stage 5.0 (TID 5)
[2024-12-14T19:15:31.093+0000] {docker.py:413} INFO - 24/12/14 19:15:31 INFO KafkaBatchReaderFactory: Creating Kafka reader topicPartition=reddit_data-0 fromOffset=0 untilOffset=600, for query queryId=f66ffad1-7143-480f-83e7-41584b2f86df batchId=0 taskId=5 partitionId=0
[2024-12-14T19:15:31.139+0000] {docker.py:413} INFO - 24/12/14 19:15:31 INFO KafkaConsumer: [Consumer clientId=consumer-reddit_processor_group-1, groupId=reddit_processor_group] Seeking to offset 0 for partition reddit_data-0
[2024-12-14T19:15:31.152+0000] {docker.py:413} INFO - 24/12/14 19:15:31 INFO SubscriptionState: [Consumer clientId=consumer-reddit_processor_group-1, groupId=reddit_processor_group] Seeking to earliest offset of partition reddit_data-0
[2024-12-14T19:15:31.155+0000] {docker.py:413} INFO - 24/12/14 19:15:31 INFO SubscriptionState: [Consumer clientId=consumer-reddit_processor_group-1, groupId=reddit_processor_group] Resetting offset for partition reddit_data-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=30}}.
[2024-12-14T19:15:31.157+0000] {docker.py:413} INFO - 24/12/14 19:15:31 INFO SubscriptionState: [Consumer clientId=consumer-reddit_processor_group-1, groupId=reddit_processor_group] Seeking to latest offset of partition reddit_data-0
[2024-12-14T19:15:31.160+0000] {docker.py:413} INFO - 24/12/14 19:15:31 INFO SubscriptionState: [Consumer clientId=consumer-reddit_processor_group-1, groupId=reddit_processor_group] Resetting offset for partition reddit_data-0 to position FetchPosition{offset=600, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=30}}.
[2024-12-14T19:15:31.329+0000] {docker.py:413} INFO - 24/12/14 19:15:31 INFO KafkaConsumer: [Consumer clientId=consumer-reddit_processor_group-1, groupId=reddit_processor_group] Seeking to offset 500 for partition reddit_data-0
[2024-12-14T19:15:31.333+0000] {docker.py:413} INFO - 24/12/14 19:15:31 INFO SubscriptionState: [Consumer clientId=consumer-reddit_processor_group-1, groupId=reddit_processor_group] Seeking to earliest offset of partition reddit_data-0
[2024-12-14T19:15:31.839+0000] {docker.py:413} INFO - 24/12/14 19:15:31 INFO SubscriptionState: [Consumer clientId=consumer-reddit_processor_group-1, groupId=reddit_processor_group] Resetting offset for partition reddit_data-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=30}}.
[2024-12-14T19:15:31.841+0000] {docker.py:413} INFO - 24/12/14 19:15:31 INFO SubscriptionState: [Consumer clientId=consumer-reddit_processor_group-1, groupId=reddit_processor_group] Seeking to latest offset of partition reddit_data-0
[2024-12-14T19:15:31.843+0000] {docker.py:413} INFO - 24/12/14 19:15:31 INFO SubscriptionState: [Consumer clientId=consumer-reddit_processor_group-1, groupId=reddit_processor_group] Resetting offset for partition reddit_data-0 to position FetchPosition{offset=600, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=30}}.
[2024-12-14T19:15:31.879+0000] {docker.py:413} INFO - 24/12/14 19:15:31 INFO KafkaDataConsumer: From Kafka topicPartition=reddit_data-0 groupId=reddit_processor_group read 600 records through 2 polls (polled  out 600 records), taking 536910638 nanos, during time span of 737437422 nanos.
[2024-12-14T19:15:31.890+0000] {docker.py:413} INFO - 24/12/14 19:15:31 INFO Executor: Finished task 0.0 in stage 5.0 (TID 5). 2340 bytes result sent to driver
[2024-12-14T19:15:31.896+0000] {docker.py:413} INFO - 24/12/14 19:15:31 INFO TaskSetManager: Finished task 0.0 in stage 5.0 (TID 5) in 839 ms on localhost (executor driver) (1/1)
[2024-12-14T19:15:31.902+0000] {docker.py:413} INFO - 24/12/14 19:15:31 INFO TaskSchedulerImpl: Removed TaskSet 5.0, whose tasks have all completed, from pool
[2024-12-14T19:15:31.908+0000] {docker.py:413} INFO - 24/12/14 19:15:31 INFO DAGScheduler: ShuffleMapStage 5 (start at NativeMethodAccessorImpl.java:0) finished in 0.872 s
24/12/14 19:15:31 INFO DAGScheduler: looking for newly runnable stages
24/12/14 19:15:31 INFO DAGScheduler: running: Set()
[2024-12-14T19:15:31.912+0000] {docker.py:413} INFO - 24/12/14 19:15:31 INFO DAGScheduler: waiting: Set(ResultStage 6)
24/12/14 19:15:31 INFO DAGScheduler: failed: Set()
[2024-12-14T19:15:31.914+0000] {docker.py:413} INFO - 24/12/14 19:15:31 INFO DAGScheduler: Submitting ResultStage 6 (MapPartitionsRDD[21] at start at NativeMethodAccessorImpl.java:0), which has no missing parents
[2024-12-14T19:15:31.923+0000] {docker.py:413} INFO - 24/12/14 19:15:31 INFO MemoryStore: Block broadcast_6 stored as values in memory (estimated size 12.5 KiB, free 434.2 MiB)
[2024-12-14T19:15:31.927+0000] {docker.py:413} INFO - 24/12/14 19:15:31 INFO MemoryStore: Block broadcast_6_piece0 stored as bytes in memory (estimated size 5.9 KiB, free 434.2 MiB)
[2024-12-14T19:15:31.929+0000] {docker.py:413} INFO - 24/12/14 19:15:31 INFO BlockManagerInfo: Added broadcast_6_piece0 in memory on localhost:44151 (size: 5.9 KiB, free: 434.3 MiB)
[2024-12-14T19:15:31.932+0000] {docker.py:413} INFO - 24/12/14 19:15:31 INFO SparkContext: Created broadcast 6 from broadcast at DAGScheduler.scala:1580
[2024-12-14T19:15:31.935+0000] {docker.py:413} INFO - 24/12/14 19:15:31 INFO DAGScheduler: Submitting 1 missing tasks from ResultStage 6 (MapPartitionsRDD[21] at start at NativeMethodAccessorImpl.java:0) (first 15 tasks are for partitions Vector(0))
[2024-12-14T19:15:31.937+0000] {docker.py:413} INFO - 24/12/14 19:15:31 INFO TaskSchedulerImpl: Adding task set 6.0 with 1 tasks resource profile 0
[2024-12-14T19:15:31.944+0000] {docker.py:413} INFO - 24/12/14 19:15:31 INFO TaskSetManager: Starting task 0.0 in stage 6.0 (TID 6) (localhost, executor driver, partition 0, NODE_LOCAL, 9963 bytes)
[2024-12-14T19:15:31.948+0000] {docker.py:413} INFO - 24/12/14 19:15:31 INFO Executor: Running task 0.0 in stage 6.0 (TID 6)
[2024-12-14T19:15:31.963+0000] {docker.py:413} INFO - 24/12/14 19:15:31 INFO ShuffleBlockFetcherIterator: Getting 1 (60.0 B) non-empty blocks including 1 (60.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) push-merged-local and 0 (0.0 B) remote blocks
[2024-12-14T19:15:31.965+0000] {docker.py:413} INFO - 24/12/14 19:15:31 INFO ShuffleBlockFetcherIterator: Started 0 remote fetches in 1 ms
[2024-12-14T19:15:31.972+0000] {docker.py:413} INFO - 24/12/14 19:15:31 INFO Executor: Finished task 0.0 in stage 6.0 (TID 6). 3995 bytes result sent to driver
[2024-12-14T19:15:31.976+0000] {docker.py:413} INFO - 24/12/14 19:15:31 INFO TaskSetManager: Finished task 0.0 in stage 6.0 (TID 6) in 33 ms on localhost (executor driver) (1/1)
24/12/14 19:15:31 INFO TaskSchedulerImpl: Removed TaskSet 6.0, whose tasks have all completed, from pool
[2024-12-14T19:15:31.979+0000] {docker.py:413} INFO - 24/12/14 19:15:31 INFO DAGScheduler: ResultStage 6 (start at NativeMethodAccessorImpl.java:0) finished in 0.064 s
[2024-12-14T19:15:31.982+0000] {docker.py:413} INFO - 24/12/14 19:15:31 INFO DAGScheduler: Job 3 is finished. Cancelling potential speculative or zombie tasks for this job
24/12/14 19:15:31 INFO TaskSchedulerImpl: Killing all running tasks in stage 6: Stage finished
[2024-12-14T19:15:31.984+0000] {docker.py:413} INFO - 24/12/14 19:15:31 INFO DAGScheduler: Job 3 finished: start at NativeMethodAccessorImpl.java:0, took 0.965233 s
[2024-12-14T19:15:31.989+0000] {docker.py:413} INFO - 2024-12-14 19:15:31,985 [INFO] Transformed 600 posts
2024-12-14 19:15:31,986 [INFO] Saving posts to PostgreSQL...
[2024-12-14T19:15:32.093+0000] {docker.py:413} INFO - 24/12/14 19:15:32 INFO SparkContext: Starting job: start at NativeMethodAccessorImpl.java:0
[2024-12-14T19:15:32.095+0000] {docker.py:413} INFO - 24/12/14 19:15:32 INFO DAGScheduler: Registering RDD 23 (start at NativeMethodAccessorImpl.java:0) as input to shuffle 3
[2024-12-14T19:15:32.097+0000] {docker.py:413} INFO - 24/12/14 19:15:32 INFO DAGScheduler: Got job 4 (start at NativeMethodAccessorImpl.java:0) with 1 output partitions
24/12/14 19:15:32 INFO DAGScheduler: Final stage: ResultStage 8 (start at NativeMethodAccessorImpl.java:0)
24/12/14 19:15:32 INFO DAGScheduler: Parents of final stage: List(ShuffleMapStage 7)
[2024-12-14T19:15:32.099+0000] {docker.py:413} INFO - 24/12/14 19:15:32 INFO DAGScheduler: Missing parents: List(ShuffleMapStage 7)
[2024-12-14T19:15:32.101+0000] {docker.py:413} INFO - 24/12/14 19:15:32 INFO DAGScheduler: Submitting ShuffleMapStage 7 (MapPartitionsRDD[23] at start at NativeMethodAccessorImpl.java:0), which has no missing parents
[2024-12-14T19:15:32.110+0000] {docker.py:413} INFO - 24/12/14 19:15:32 INFO MemoryStore: Block broadcast_7 stored as values in memory (estimated size 39.5 KiB, free 434.1 MiB)
[2024-12-14T19:15:32.116+0000] {docker.py:413} INFO - 24/12/14 19:15:32 INFO MemoryStore: Block broadcast_7_piece0 stored as bytes in memory (estimated size 15.9 KiB, free 434.1 MiB)
[2024-12-14T19:15:32.120+0000] {docker.py:413} INFO - 24/12/14 19:15:32 INFO BlockManagerInfo: Added broadcast_7_piece0 in memory on localhost:44151 (size: 15.9 KiB, free: 434.3 MiB)
[2024-12-14T19:15:32.122+0000] {docker.py:413} INFO - 24/12/14 19:15:32 INFO SparkContext: Created broadcast 7 from broadcast at DAGScheduler.scala:1580
[2024-12-14T19:15:32.123+0000] {docker.py:413} INFO - 24/12/14 19:15:32 INFO DAGScheduler: Submitting 1 missing tasks from ShuffleMapStage 7 (MapPartitionsRDD[23] at start at NativeMethodAccessorImpl.java:0) (first 15 tasks are for partitions Vector(0))
[2024-12-14T19:15:32.125+0000] {docker.py:413} INFO - 24/12/14 19:15:32 INFO TaskSchedulerImpl: Adding task set 7.0 with 1 tasks resource profile 0
[2024-12-14T19:15:32.129+0000] {docker.py:413} INFO - 24/12/14 19:15:32 INFO TaskSetManager: Starting task 0.0 in stage 7.0 (TID 7) (localhost, executor driver, partition 0, PROCESS_LOCAL, 10838 bytes)
[2024-12-14T19:15:32.132+0000] {docker.py:413} INFO - 24/12/14 19:15:32 INFO Executor: Running task 0.0 in stage 7.0 (TID 7)
[2024-12-14T19:15:32.153+0000] {docker.py:413} INFO - 24/12/14 19:15:32 INFO KafkaBatchReaderFactory: Creating Kafka reader topicPartition=reddit_data-0 fromOffset=0 untilOffset=600, for query queryId=f66ffad1-7143-480f-83e7-41584b2f86df batchId=0 taskId=7 partitionId=0
[2024-12-14T19:15:32.180+0000] {docker.py:413} INFO - 24/12/14 19:15:32 INFO KafkaConsumer: [Consumer clientId=consumer-reddit_processor_group-1, groupId=reddit_processor_group] Seeking to offset 0 for partition reddit_data-0
[2024-12-14T19:15:32.221+0000] {docker.py:413} INFO - 24/12/14 19:15:32 INFO SubscriptionState: [Consumer clientId=consumer-reddit_processor_group-1, groupId=reddit_processor_group] Seeking to earliest offset of partition reddit_data-0
[2024-12-14T19:15:32.224+0000] {docker.py:413} INFO - 24/12/14 19:15:32 INFO SubscriptionState: [Consumer clientId=consumer-reddit_processor_group-1, groupId=reddit_processor_group] Resetting offset for partition reddit_data-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=30}}.
[2024-12-14T19:15:32.226+0000] {docker.py:413} INFO - 24/12/14 19:15:32 INFO SubscriptionState: [Consumer clientId=consumer-reddit_processor_group-1, groupId=reddit_processor_group] Seeking to latest offset of partition reddit_data-0
[2024-12-14T19:15:32.230+0000] {docker.py:413} INFO - 24/12/14 19:15:32 INFO SubscriptionState: [Consumer clientId=consumer-reddit_processor_group-1, groupId=reddit_processor_group] Resetting offset for partition reddit_data-0 to position FetchPosition{offset=600, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=30}}.
[2024-12-14T19:15:32.245+0000] {docker.py:413} INFO - 24/12/14 19:15:32 INFO BlockManagerInfo: Removed broadcast_3_piece0 on localhost:44151 in memory (size: 15.9 KiB, free: 434.3 MiB)
[2024-12-14T19:15:32.276+0000] {docker.py:413} INFO - 24/12/14 19:15:32 INFO BlockManagerInfo: Removed broadcast_5_piece0 on localhost:44151 in memory (size: 15.9 KiB, free: 434.4 MiB)
[2024-12-14T19:15:32.288+0000] {docker.py:413} INFO - 24/12/14 19:15:32 INFO BlockManagerInfo: Removed broadcast_6_piece0 on localhost:44151 in memory (size: 5.9 KiB, free: 434.4 MiB)
24/12/14 19:15:32 INFO KafkaConsumer: [Consumer clientId=consumer-reddit_processor_group-1, groupId=reddit_processor_group] Seeking to offset 500 for partition reddit_data-0
[2024-12-14T19:15:32.292+0000] {docker.py:413} INFO - 24/12/14 19:15:32 INFO SubscriptionState: [Consumer clientId=consumer-reddit_processor_group-1, groupId=reddit_processor_group] Seeking to earliest offset of partition reddit_data-0
[2024-12-14T19:15:32.297+0000] {docker.py:413} INFO - 24/12/14 19:15:32 INFO BlockManagerInfo: Removed broadcast_1_piece0 on localhost:44151 in memory (size: 5.9 KiB, free: 434.4 MiB)
[2024-12-14T19:15:32.308+0000] {docker.py:413} INFO - 24/12/14 19:15:32 INFO BlockManagerInfo: Removed broadcast_2_piece0 on localhost:44151 in memory (size: 15.6 KiB, free: 434.4 MiB)
[2024-12-14T19:15:32.318+0000] {docker.py:413} INFO - 24/12/14 19:15:32 INFO BlockManagerInfo: Removed broadcast_4_piece0 on localhost:44151 in memory (size: 5.9 KiB, free: 434.4 MiB)
[2024-12-14T19:15:32.806+0000] {docker.py:413} INFO - 24/12/14 19:15:32 INFO SubscriptionState: [Consumer clientId=consumer-reddit_processor_group-1, groupId=reddit_processor_group] Resetting offset for partition reddit_data-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=30}}.
[2024-12-14T19:15:32.807+0000] {docker.py:413} INFO - 24/12/14 19:15:32 INFO SubscriptionState: [Consumer clientId=consumer-reddit_processor_group-1, groupId=reddit_processor_group] Seeking to latest offset of partition reddit_data-0
[2024-12-14T19:15:32.809+0000] {docker.py:413} INFO - 24/12/14 19:15:32 INFO SubscriptionState: [Consumer clientId=consumer-reddit_processor_group-1, groupId=reddit_processor_group] Resetting offset for partition reddit_data-0 to position FetchPosition{offset=600, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=30}}.
[2024-12-14T19:15:32.829+0000] {docker.py:413} INFO - 24/12/14 19:15:32 INFO KafkaDataConsumer: From Kafka topicPartition=reddit_data-0 groupId=reddit_processor_group read 600 records through 2 polls (polled  out 600 records), taking 572970724 nanos, during time span of 649932849 nanos.
[2024-12-14T19:15:32.831+0000] {docker.py:413} INFO - 24/12/14 19:15:32 INFO Executor: Finished task 0.0 in stage 7.0 (TID 7). 2340 bytes result sent to driver
[2024-12-14T19:15:32.836+0000] {docker.py:413} INFO - 24/12/14 19:15:32 INFO TaskSetManager: Finished task 0.0 in stage 7.0 (TID 7) in 706 ms on localhost (executor driver) (1/1)
[2024-12-14T19:15:32.840+0000] {docker.py:413} INFO - 24/12/14 19:15:32 INFO TaskSchedulerImpl: Removed TaskSet 7.0, whose tasks have all completed, from pool
[2024-12-14T19:15:32.841+0000] {docker.py:413} INFO - 24/12/14 19:15:32 INFO DAGScheduler: ShuffleMapStage 7 (start at NativeMethodAccessorImpl.java:0) finished in 0.736 s
[2024-12-14T19:15:32.843+0000] {docker.py:413} INFO - 24/12/14 19:15:32 INFO DAGScheduler: looking for newly runnable stages
[2024-12-14T19:15:32.844+0000] {docker.py:413} INFO - 24/12/14 19:15:32 INFO DAGScheduler: running: Set()
[2024-12-14T19:15:32.845+0000] {docker.py:413} INFO - 24/12/14 19:15:32 INFO DAGScheduler: waiting: Set(ResultStage 8)
[2024-12-14T19:15:32.847+0000] {docker.py:413} INFO - 24/12/14 19:15:32 INFO DAGScheduler: failed: Set()
[2024-12-14T19:15:32.848+0000] {docker.py:413} INFO - 24/12/14 19:15:32 INFO DAGScheduler: Submitting ResultStage 8 (MapPartitionsRDD[26] at start at NativeMethodAccessorImpl.java:0), which has no missing parents
[2024-12-14T19:15:32.851+0000] {docker.py:413} INFO - 24/12/14 19:15:32 INFO MemoryStore: Block broadcast_8 stored as values in memory (estimated size 12.5 KiB, free 434.3 MiB)
[2024-12-14T19:15:32.854+0000] {docker.py:413} INFO - 24/12/14 19:15:32 INFO MemoryStore: Block broadcast_8_piece0 stored as bytes in memory (estimated size 5.9 KiB, free 434.3 MiB)
[2024-12-14T19:15:32.857+0000] {docker.py:413} INFO - 24/12/14 19:15:32 INFO BlockManagerInfo: Added broadcast_8_piece0 in memory on localhost:44151 (size: 5.9 KiB, free: 434.4 MiB)
[2024-12-14T19:15:32.859+0000] {docker.py:413} INFO - 24/12/14 19:15:32 INFO SparkContext: Created broadcast 8 from broadcast at DAGScheduler.scala:1580
[2024-12-14T19:15:32.863+0000] {docker.py:413} INFO - 24/12/14 19:15:32 INFO DAGScheduler: Submitting 1 missing tasks from ResultStage 8 (MapPartitionsRDD[26] at start at NativeMethodAccessorImpl.java:0) (first 15 tasks are for partitions Vector(0))
[2024-12-14T19:15:32.866+0000] {docker.py:413} INFO - 24/12/14 19:15:32 INFO TaskSchedulerImpl: Adding task set 8.0 with 1 tasks resource profile 0
[2024-12-14T19:15:32.868+0000] {docker.py:413} INFO - 24/12/14 19:15:32 INFO TaskSetManager: Starting task 0.0 in stage 8.0 (TID 8) (localhost, executor driver, partition 0, NODE_LOCAL, 9963 bytes)
[2024-12-14T19:15:32.873+0000] {docker.py:413} INFO - 24/12/14 19:15:32 INFO Executor: Running task 0.0 in stage 8.0 (TID 8)
[2024-12-14T19:15:32.885+0000] {docker.py:413} INFO - 24/12/14 19:15:32 INFO ShuffleBlockFetcherIterator: Getting 1 (60.0 B) non-empty blocks including 1 (60.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) push-merged-local and 0 (0.0 B) remote blocks
[2024-12-14T19:15:32.887+0000] {docker.py:413} INFO - 24/12/14 19:15:32 INFO ShuffleBlockFetcherIterator: Started 0 remote fetches in 2 ms
[2024-12-14T19:15:32.893+0000] {docker.py:413} INFO - 24/12/14 19:15:32 INFO Executor: Finished task 0.0 in stage 8.0 (TID 8). 3995 bytes result sent to driver
[2024-12-14T19:15:32.899+0000] {docker.py:413} INFO - 24/12/14 19:15:32 INFO TaskSetManager: Finished task 0.0 in stage 8.0 (TID 8) in 33 ms on localhost (executor driver) (1/1)
[2024-12-14T19:15:32.904+0000] {docker.py:413} INFO - 24/12/14 19:15:32 INFO TaskSchedulerImpl: Removed TaskSet 8.0, whose tasks have all completed, from pool
[2024-12-14T19:15:32.906+0000] {docker.py:413} INFO - 24/12/14 19:15:32 INFO DAGScheduler: ResultStage 8 (start at NativeMethodAccessorImpl.java:0) finished in 0.056 s
[2024-12-14T19:15:32.908+0000] {docker.py:413} INFO - 24/12/14 19:15:32 INFO DAGScheduler: Job 4 is finished. Cancelling potential speculative or zombie tasks for this job
24/12/14 19:15:32 INFO TaskSchedulerImpl: Killing all running tasks in stage 8: Stage finished
[2024-12-14T19:15:32.910+0000] {docker.py:413} INFO - 24/12/14 19:15:32 INFO DAGScheduler: Job 4 finished: start at NativeMethodAccessorImpl.java:0, took 0.810201 s
[2024-12-14T19:15:32.912+0000] {docker.py:413} INFO - 2024-12-14 19:15:32,905 [INFO] Attempting to save 600 rows to table reddit_posts
2024-12-14 19:15:32,905 [INFO] Sample data for table reddit_posts:
[2024-12-14T19:15:33.248+0000] {docker.py:413} INFO - 24/12/14 19:15:33 INFO CodeGenerator: Code generated in 47.042638 ms
[2024-12-14T19:15:33.286+0000] {docker.py:413} INFO - 24/12/14 19:15:33 INFO SparkContext: Starting job: start at NativeMethodAccessorImpl.java:0
[2024-12-14T19:15:33.288+0000] {docker.py:413} INFO - 24/12/14 19:15:33 INFO DAGScheduler: Got job 5 (start at NativeMethodAccessorImpl.java:0) with 1 output partitions
24/12/14 19:15:33 INFO DAGScheduler: Final stage: ResultStage 9 (start at NativeMethodAccessorImpl.java:0)
24/12/14 19:15:33 INFO DAGScheduler: Parents of final stage: List()
[2024-12-14T19:15:33.290+0000] {docker.py:413} INFO - 24/12/14 19:15:33 INFO DAGScheduler: Missing parents: List()
[2024-12-14T19:15:33.292+0000] {docker.py:413} INFO - 24/12/14 19:15:33 INFO DAGScheduler: Submitting ResultStage 9 (MapPartitionsRDD[28] at start at NativeMethodAccessorImpl.java:0), which has no missing parents
[2024-12-14T19:15:33.295+0000] {docker.py:413} INFO - 24/12/14 19:15:33 INFO MemoryStore: Block broadcast_9 stored as values in memory (estimated size 44.6 KiB, free 434.3 MiB)
[2024-12-14T19:15:33.299+0000] {docker.py:413} INFO - 24/12/14 19:15:33 INFO MemoryStore: Block broadcast_9_piece0 stored as bytes in memory (estimated size 17.2 KiB, free 434.3 MiB)
[2024-12-14T19:15:33.304+0000] {docker.py:413} INFO - 24/12/14 19:15:33 INFO BlockManagerInfo: Added broadcast_9_piece0 in memory on localhost:44151 (size: 17.2 KiB, free: 434.4 MiB)
[2024-12-14T19:15:33.307+0000] {docker.py:413} INFO - 24/12/14 19:15:33 INFO SparkContext: Created broadcast 9 from broadcast at DAGScheduler.scala:1580
[2024-12-14T19:15:33.313+0000] {docker.py:413} INFO - 24/12/14 19:15:33 INFO DAGScheduler: Submitting 1 missing tasks from ResultStage 9 (MapPartitionsRDD[28] at start at NativeMethodAccessorImpl.java:0) (first 15 tasks are for partitions Vector(0))
[2024-12-14T19:15:33.314+0000] {docker.py:413} INFO - 24/12/14 19:15:33 INFO TaskSchedulerImpl: Adding task set 9.0 with 1 tasks resource profile 0
[2024-12-14T19:15:33.316+0000] {docker.py:413} INFO - 24/12/14 19:15:33 INFO TaskSetManager: Starting task 0.0 in stage 9.0 (TID 9) (localhost, executor driver, partition 0, PROCESS_LOCAL, 10849 bytes)
[2024-12-14T19:15:33.324+0000] {docker.py:413} INFO - 24/12/14 19:15:33 INFO Executor: Running task 0.0 in stage 9.0 (TID 9)
[2024-12-14T19:15:33.401+0000] {docker.py:413} INFO - 24/12/14 19:15:33 INFO CodeGenerator: Code generated in 57.024507 ms
[2024-12-14T19:15:33.406+0000] {docker.py:413} INFO - 24/12/14 19:15:33 INFO KafkaBatchReaderFactory: Creating Kafka reader topicPartition=reddit_data-0 fromOffset=0 untilOffset=600, for query queryId=f66ffad1-7143-480f-83e7-41584b2f86df batchId=0 taskId=9 partitionId=0
[2024-12-14T19:15:33.433+0000] {docker.py:413} INFO - 24/12/14 19:15:33 INFO KafkaConsumer: [Consumer clientId=consumer-reddit_processor_group-1, groupId=reddit_processor_group] Seeking to offset 0 for partition reddit_data-0
[2024-12-14T19:15:33.454+0000] {docker.py:413} INFO - 24/12/14 19:15:33 INFO SubscriptionState: [Consumer clientId=consumer-reddit_processor_group-1, groupId=reddit_processor_group] Seeking to earliest offset of partition reddit_data-0
[2024-12-14T19:15:33.460+0000] {docker.py:413} INFO - 24/12/14 19:15:33 INFO SubscriptionState: [Consumer clientId=consumer-reddit_processor_group-1, groupId=reddit_processor_group] Resetting offset for partition reddit_data-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=30}}.
[2024-12-14T19:15:33.462+0000] {docker.py:413} INFO - 24/12/14 19:15:33 INFO SubscriptionState: [Consumer clientId=consumer-reddit_processor_group-1, groupId=reddit_processor_group] Seeking to latest offset of partition reddit_data-0
[2024-12-14T19:15:33.464+0000] {docker.py:413} INFO - 24/12/14 19:15:33 INFO SubscriptionState: [Consumer clientId=consumer-reddit_processor_group-1, groupId=reddit_processor_group] Resetting offset for partition reddit_data-0 to position FetchPosition{offset=600, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=30}}.
[2024-12-14T19:15:33.489+0000] {docker.py:413} INFO - 24/12/14 19:15:33 INFO KafkaDataConsumer: From Kafka topicPartition=reddit_data-0 groupId=reddit_processor_group read 3 records through 1 polls (polled  out 500 records), taking 32306155 nanos, during time span of 54161455 nanos.
[2024-12-14T19:15:33.495+0000] {docker.py:413} INFO - 24/12/14 19:15:33 INFO Executor: Finished task 0.0 in stage 9.0 (TID 9). 3715 bytes result sent to driver
[2024-12-14T19:15:33.501+0000] {docker.py:413} INFO - 24/12/14 19:15:33 INFO TaskSetManager: Finished task 0.0 in stage 9.0 (TID 9) in 186 ms on localhost (executor driver) (1/1)
24/12/14 19:15:33 INFO TaskSchedulerImpl: Removed TaskSet 9.0, whose tasks have all completed, from pool
[2024-12-14T19:15:33.507+0000] {docker.py:413} INFO - 24/12/14 19:15:33 INFO DAGScheduler: ResultStage 9 (start at NativeMethodAccessorImpl.java:0) finished in 0.213 s
[2024-12-14T19:15:33.510+0000] {docker.py:413} INFO - 24/12/14 19:15:33 INFO DAGScheduler: Job 5 is finished. Cancelling potential speculative or zombie tasks for this job
[2024-12-14T19:15:33.513+0000] {docker.py:413} INFO - 24/12/14 19:15:33 INFO TaskSchedulerImpl: Killing all running tasks in stage 9: Stage finished
[2024-12-14T19:15:33.515+0000] {docker.py:413} INFO - 24/12/14 19:15:33 INFO DAGScheduler: Job 5 finished: start at NativeMethodAccessorImpl.java:0, took 0.221498 s
[2024-12-14T19:15:33.563+0000] {docker.py:413} INFO - 24/12/14 19:15:33 INFO CodeGenerator: Code generated in 32.263331 ms
[2024-12-14T19:15:33.615+0000] {docker.py:413}
|post_id|title                                                                                                                                                                                                                                                                                 |author    |post_time          |upvotes|downvotes|num_comments|score|text|first_level_comments_count|second_level_comments_count|subreddit|hour_of_day|day_of_week|created_at                |

|1he0jj3|After Milan's 2-1 win against Crvena Zvezda, coach Fonseca had said: "I don't give a f... about the player's name, I work hard to give my best, some in the team don't. If I need to play players from the youth team I will do it." Today 6 youth players trained with the first team|Blodgharm |2024-12-14 10:54:56|20     |0        |2           |20   ||1                         |1                          |soccer   |10         |7          |2024-12-14 19:15:32.953399|
|1he0j1x|UK TV Games & What to Watch: Sunday 15th December                                                                                                                                                                                                                                     |JammyMoore|2024-12-14 10:52:48|2      |0        |1           |2    |Looking at the games on **Sunday 15th December** that are available to watch in the UK. Where to watch them and what I would watch!\n\nEarly risers can watch a tasty match from the Australian **A-League**. Newly founded **Auckland FC** are 6 wins from 6 games this season, and they travel to the seasoned **Melbourne City**.\n\nNext up is a double header of **Serie A** matches. A relegation scrap as **Lecce**, sitting 1 point outside the drop zone face **Monza** sitting in 19th. Followed up by Derby dell' Appennino, as Vincenzo Italiano's **Bologna** host his former club **Fiorentina**.\n\nThe match of the day is the Manchester Derby in the **Premier League**. Out of form **Manchester City** take on a new form **Manchester United** under Ruben Amorim.\n\nTo round of the day, a big showdown in **Ligue 1**. League leaders **PSG** take on a revived **Lyon** in what surely will be a tasty match.\n\n|Time|Fixture|Competition|Provider / Channel|\n|:-|:-|:-|:-|\n|06:00|Melbourne City v Auckland FC|A-League Men|TNT Sports 1|\n|11:30|Lecce v Monza|Serie A|OneFootball|\n|14:00|Bologna v Fiorentina|Serie A|OneFootball|\n|16:30|Manchester City v Manchester United|Premier League|Sky Sports Main Event / Sky Sports Premier League / Sky Sports Ultra HDR|\n|19:45|PSG v Lyon|Ligue 1|Ligue 1 Pass|\n\n|1                         |0                          |soccer   |10         |7          |2024-12-14 19:15:32.953399|

only showing top 2 rows
[2024-12-14T19:15:34.624+0000] {docker.py:413} INFO - 24/12/14 19:15:34 INFO CodeGenerator: Code generated in 29.118369 ms
[2024-12-14T19:15:34.729+0000] {docker.py:413} INFO - 24/12/14 19:15:34 INFO SparkContext: Starting job: start at NativeMethodAccessorImpl.java:0
[2024-12-14T19:15:34.734+0000] {docker.py:413} INFO - 24/12/14 19:15:34 INFO DAGScheduler: Got job 6 (start at NativeMethodAccessorImpl.java:0) with 1 output partitions
24/12/14 19:15:34 INFO DAGScheduler: Final stage: ResultStage 10 (start at NativeMethodAccessorImpl.java:0)
24/12/14 19:15:34 INFO DAGScheduler: Parents of final stage: List()
[2024-12-14T19:15:34.736+0000] {docker.py:413} INFO - 24/12/14 19:15:34 INFO DAGScheduler: Missing parents: List()
[2024-12-14T19:15:34.737+0000] {docker.py:413} INFO - 24/12/14 19:15:34 INFO DAGScheduler: Submitting ResultStage 10 (MapPartitionsRDD[32] at start at NativeMethodAccessorImpl.java:0), which has no missing parents
[2024-12-14T19:15:34.798+0000] {docker.py:413} INFO - 24/12/14 19:15:34 INFO MemoryStore: Block broadcast_10 stored as values in memory (estimated size 56.0 KiB, free 434.2 MiB)
[2024-12-14T19:15:34.801+0000] {docker.py:413} INFO - 24/12/14 19:15:34 INFO MemoryStore: Block broadcast_10_piece0 stored as bytes in memory (estimated size 22.2 KiB, free 434.2 MiB)
[2024-12-14T19:15:34.803+0000] {docker.py:413} INFO - 24/12/14 19:15:34 INFO BlockManagerInfo: Added broadcast_10_piece0 in memory on localhost:44151 (size: 22.2 KiB, free: 434.3 MiB)
[2024-12-14T19:15:34.806+0000] {docker.py:413} INFO - 24/12/14 19:15:34 INFO SparkContext: Created broadcast 10 from broadcast at DAGScheduler.scala:1580
[2024-12-14T19:15:34.808+0000] {docker.py:413} INFO - 24/12/14 19:15:34 INFO DAGScheduler: Submitting 1 missing tasks from ResultStage 10 (MapPartitionsRDD[32] at start at NativeMethodAccessorImpl.java:0) (first 15 tasks are for partitions Vector(0))
24/12/14 19:15:34 INFO TaskSchedulerImpl: Adding task set 10.0 with 1 tasks resource profile 0
[2024-12-14T19:15:34.811+0000] {docker.py:413} INFO - 24/12/14 19:15:34 INFO TaskSetManager: Starting task 0.0 in stage 10.0 (TID 10) (localhost, executor driver, partition 0, PROCESS_LOCAL, 10849 bytes)
[2024-12-14T19:15:34.813+0000] {docker.py:413} INFO - 24/12/14 19:15:34 INFO Executor: Running task 0.0 in stage 10.0 (TID 10)
[2024-12-14T19:15:34.900+0000] {docker.py:413} INFO - 24/12/14 19:15:34 INFO CodeGenerator: Code generated in 32.593248 ms
[2024-12-14T19:15:34.990+0000] {docker.py:413} INFO - 24/12/14 19:15:34 INFO CodeGenerator: Code generated in 65.844924 ms
[2024-12-14T19:15:34.995+0000] {docker.py:413} INFO - 24/12/14 19:15:34 INFO KafkaBatchReaderFactory: Creating Kafka reader topicPartition=reddit_data-0 fromOffset=0 untilOffset=600, for query queryId=f66ffad1-7143-480f-83e7-41584b2f86df batchId=0 taskId=10 partitionId=0
[2024-12-14T19:15:35.025+0000] {docker.py:413} INFO - 24/12/14 19:15:35 INFO KafkaConsumer: [Consumer clientId=consumer-reddit_processor_group-1, groupId=reddit_processor_group] Seeking to offset 0 for partition reddit_data-0
[2024-12-14T19:15:35.039+0000] {docker.py:413} INFO - 24/12/14 19:15:35 INFO SubscriptionState: [Consumer clientId=consumer-reddit_processor_group-1, groupId=reddit_processor_group] Seeking to earliest offset of partition reddit_data-0
[2024-12-14T19:15:35.043+0000] {docker.py:413} INFO - 24/12/14 19:15:35 INFO SubscriptionState: [Consumer clientId=consumer-reddit_processor_group-1, groupId=reddit_processor_group] Resetting offset for partition reddit_data-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=30}}.
[2024-12-14T19:15:35.045+0000] {docker.py:413} INFO - 24/12/14 19:15:35 INFO SubscriptionState: [Consumer clientId=consumer-reddit_processor_group-1, groupId=reddit_processor_group] Seeking to latest offset of partition reddit_data-0
[2024-12-14T19:15:35.049+0000] {docker.py:413} INFO - 24/12/14 19:15:35 INFO SubscriptionState: [Consumer clientId=consumer-reddit_processor_group-1, groupId=reddit_processor_group] Resetting offset for partition reddit_data-0 to position FetchPosition{offset=600, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=30}}.
[2024-12-14T19:15:35.424+0000] {docker.py:413} INFO - 24/12/14 19:15:35 INFO KafkaConsumer: [Consumer clientId=consumer-reddit_processor_group-1, groupId=reddit_processor_group] Seeking to offset 500 for partition reddit_data-0
[2024-12-14T19:15:35.428+0000] {docker.py:413} INFO - 24/12/14 19:15:35 INFO SubscriptionState: [Consumer clientId=consumer-reddit_processor_group-1, groupId=reddit_processor_group] Seeking to earliest offset of partition reddit_data-0
[2024-12-14T19:15:35.938+0000] {docker.py:413} INFO - 24/12/14 19:15:35 INFO SubscriptionState: [Consumer clientId=consumer-reddit_processor_group-1, groupId=reddit_processor_group] Resetting offset for partition reddit_data-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=30}}.
[2024-12-14T19:15:35.941+0000] {docker.py:413} INFO - 24/12/14 19:15:35 INFO SubscriptionState: [Consumer clientId=consumer-reddit_processor_group-1, groupId=reddit_processor_group] Seeking to latest offset of partition reddit_data-0
[2024-12-14T19:15:35.947+0000] {docker.py:413} INFO - 24/12/14 19:15:35 INFO SubscriptionState: [Consumer clientId=consumer-reddit_processor_group-1, groupId=reddit_processor_group] Resetting offset for partition reddit_data-0 to position FetchPosition{offset=600, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=30}}.
[2024-12-14T19:15:36.094+0000] {docker.py:413} INFO - 24/12/14 19:15:36 INFO KafkaDataConsumer: From Kafka topicPartition=reddit_data-0 groupId=reddit_processor_group read 600 records through 2 polls (polled  out 600 records), taking 546649266 nanos, during time span of 1068418625 nanos.
[2024-12-14T19:15:36.107+0000] {docker.py:413} INFO - 24/12/14 19:15:36 ERROR Executor: Exception in task 0.0 in stage 10.0 (TID 10)
java.sql.BatchUpdateException: Batch entry 50 INSERT INTO reddit_posts ("post_id","title","author","post_time","upvotes","downvotes","num_comments","score","text","first_level_comments_count","second_level_comments_count","subreddit","hour_of_day","day_of_week","created_at") VALUES ('1he0jj3','After Milan''s 2-1 win against Crvena Zvezda, coach Fonseca had said: "I don''t give a f... about the player''s name, I work hard to give my best, some in the team don''t. If I need to play players from the youth team I will do it." Today 6 youth players trained with the first team','Blodgharm','2024-12-14 10:54:56+00',23,0,2,23,'',1,1,'soccer',10,7,'2024-12-14 19:15:34.53043+00') was aborted: ERROR: duplicate key value violates unique constraint "reddit_posts_pkey"
  Detail: Key (post_id)=(1he0jj3) already exists.  Call getNextException to see other errors in the batch.
	at org.***ql.jdbc.BatchResultHandler.handleError(BatchResultHandler.java:165)
	at org.***ql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2401)
	at org.***ql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2133)
	at org.***ql.core.v3.QueryExecutorImpl.flushIfDeadlockRisk(QueryExecutorImpl.java:1490)
	at org.***ql.core.v3.QueryExecutorImpl.sendQuery(QueryExecutorImpl.java:1515)
	at org.***ql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:559)
	at org.***ql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:896)
	at org.***ql.jdbc.PgStatement.executeBatch(PgStatement.java:919)
	at org.***ql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1677)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.savePartition(JdbcUtils.scala:751)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1(JdbcUtils.scala:902)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1$adapted(JdbcUtils.scala:901)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2(RDD.scala:1036)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2$adapted(RDD.scala:1036)
	at org.apache.spark.SparkContext.$anonfun$runJob$5(SparkContext.scala:2438)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)
	at org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:161)
	at org.apache.spark.scheduler.Task.run(Task.scala:141)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.***ql.util.PSQLException: ERROR: duplicate key value violates unique constraint "reddit_posts_pkey"
  Detail: Key (post_id)=(1he0jj3) already exists.
	at org.***ql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2712)
	at org.***ql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2400)
	... 24 more
[2024-12-14T19:15:36.168+0000] {docker.py:413} INFO - 24/12/14 19:15:36 WARN TaskSetManager: Lost task 0.0 in stage 10.0 (TID 10) (localhost executor driver): java.sql.BatchUpdateException: Batch entry 50 INSERT INTO reddit_posts ("post_id","title","author","post_time","upvotes","downvotes","num_comments","score","text","first_level_comments_count","second_level_comments_count","subreddit","hour_of_day","day_of_week","created_at") VALUES ('1he0jj3','After Milan''s 2-1 win against Crvena Zvezda, coach Fonseca had said: "I don''t give a f... about the player''s name, I work hard to give my best, some in the team don''t. If I need to play players from the youth team I will do it." Today 6 youth players trained with the first team','Blodgharm','2024-12-14 10:54:56+00',23,0,2,23,'',1,1,'soccer',10,7,'2024-12-14 19:15:34.53043+00') was aborted: ERROR: duplicate key value violates unique constraint "reddit_posts_pkey"
  Detail: Key (post_id)=(1he0jj3) already exists.  Call getNextException to see other errors in the batch.
	at org.***ql.jdbc.BatchResultHandler.handleError(BatchResultHandler.java:165)
	at org.***ql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2401)
	at org.***ql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2133)
	at org.***ql.core.v3.QueryExecutorImpl.flushIfDeadlockRisk(QueryExecutorImpl.java:1490)
	at org.***ql.core.v3.QueryExecutorImpl.sendQuery(QueryExecutorImpl.java:1515)
	at org.***ql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:559)
	at org.***ql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:896)
	at org.***ql.jdbc.PgStatement.executeBatch(PgStatement.java:919)
	at org.***ql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1677)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.savePartition(JdbcUtils.scala:751)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1(JdbcUtils.scala:902)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1$adapted(JdbcUtils.scala:901)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2(RDD.scala:1036)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2$adapted(RDD.scala:1036)
	at org.apache.spark.SparkContext.$anonfun$runJob$5(SparkContext.scala:2438)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)
	at org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:161)
	at org.apache.spark.scheduler.Task.run(Task.scala:141)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.***ql.util.PSQLException: ERROR: duplicate key value violates unique constraint "reddit_posts_pkey"
  Detail: Key (post_id)=(1he0jj3) already exists.
	at org.***ql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2712)
	at org.***ql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2400)
	... 24 more
[2024-12-14T19:15:36.175+0000] {docker.py:413} INFO - 24/12/14 19:15:36 ERROR TaskSetManager: Task 0 in stage 10.0 failed 1 times; aborting job
[2024-12-14T19:15:36.181+0000] {docker.py:413} INFO - 24/12/14 19:15:36 INFO TaskSchedulerImpl: Removed TaskSet 10.0, whose tasks have all completed, from pool
[2024-12-14T19:15:36.188+0000] {docker.py:413} INFO - 24/12/14 19:15:36 INFO TaskSchedulerImpl: Cancelling stage 10
24/12/14 19:15:36 INFO TaskSchedulerImpl: Killing all running tasks in stage 10: Stage cancelled: Job aborted due to stage failure: Task 0 in stage 10.0 failed 1 times, most recent failure: Lost task 0.0 in stage 10.0 (TID 10) (localhost executor driver): java.sql.BatchUpdateException: Batch entry 50 INSERT INTO reddit_posts ("post_id","title","author","post_time","upvotes","downvotes","num_comments","score","text","first_level_comments_count","second_level_comments_count","subreddit","hour_of_day","day_of_week","created_at") VALUES ('1he0jj3','After Milan''s 2-1 win against Crvena Zvezda, coach Fonseca had said: "I don''t give a f... about the player''s name, I work hard to give my best, some in the team don''t. If I need to play players from the youth team I will do it." Today 6 youth players trained with the first team','Blodgharm','2024-12-14 10:54:56+00',23,0,2,23,'',1,1,'soccer',10,7,'2024-12-14 19:15:34.53043+00') was aborted: ERROR: duplicate key value violates unique constraint "reddit_posts_pkey"
  Detail: Key (post_id)=(1he0jj3) already exists.  Call getNextException to see other errors in the batch.
	at org.***ql.jdbc.BatchResultHandler.handleError(BatchResultHandler.java:165)
	at org.***ql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2401)
	at org.***ql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2133)
	at org.***ql.core.v3.QueryExecutorImpl.flushIfDeadlockRisk(QueryExecutorImpl.java:1490)
	at org.***ql.core.v3.QueryExecutorImpl.sendQuery(QueryExecutorImpl.java:1515)
	at org.***ql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:559)
	at org.***ql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:896)
	at org.***ql.jdbc.PgStatement.executeBatch(PgStatement.java:919)
	at org.***ql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1677)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.savePartition(JdbcUtils.scala:751)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1(JdbcUtils.scala:902)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1$adapted(JdbcUtils.scala:901)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2(RDD.scala:1036)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2$adapted(RDD.scala:1036)
	at org.apache.spark.SparkContext.$anonfun$runJob$5(SparkContext.scala:2438)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)
	at org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:161)
	at org.apache.spark.scheduler.Task.run(Task.scala:141)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.***ql.util.PSQLException: ERROR: duplicate key value violates unique constraint "reddit_posts_pkey"
  Detail: Key (post_id)=(1he0jj3) already exists.
	at org.***ql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2712)
	at org.***ql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2400)
	... 24 more

Driver stacktrace:
[2024-12-14T19:15:36.193+0000] {docker.py:413} INFO - 24/12/14 19:15:36 INFO DAGScheduler: ResultStage 10 (start at NativeMethodAccessorImpl.java:0) failed in 1.451 s due to Job aborted due to stage failure: Task 0 in stage 10.0 failed 1 times, most recent failure: Lost task 0.0 in stage 10.0 (TID 10) (localhost executor driver): java.sql.BatchUpdateException: Batch entry 50 INSERT INTO reddit_posts ("post_id","title","author","post_time","upvotes","downvotes","num_comments","score","text","first_level_comments_count","second_level_comments_count","subreddit","hour_of_day","day_of_week","created_at") VALUES ('1he0jj3','After Milan''s 2-1 win against Crvena Zvezda, coach Fonseca had said: "I don''t give a f... about the player''s name, I work hard to give my best, some in the team don''t. If I need to play players from the youth team I will do it." Today 6 youth players trained with the first team','Blodgharm','2024-12-14 10:54:56+00',23,0,2,23,'',1,1,'soccer',10,7,'2024-12-14 19:15:34.53043+00') was aborted: ERROR: duplicate key value violates unique constraint "reddit_posts_pkey"
  Detail: Key (post_id)=(1he0jj3) already exists.  Call getNextException to see other errors in the batch.
	at org.***ql.jdbc.BatchResultHandler.handleError(BatchResultHandler.java:165)
	at org.***ql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2401)
	at org.***ql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2133)
	at org.***ql.core.v3.QueryExecutorImpl.flushIfDeadlockRisk(QueryExecutorImpl.java:1490)
	at org.***ql.core.v3.QueryExecutorImpl.sendQuery(QueryExecutorImpl.java:1515)
	at org.***ql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:559)
	at org.***ql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:896)
	at org.***ql.jdbc.PgStatement.executeBatch(PgStatement.java:919)
	at org.***ql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1677)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.savePartition(JdbcUtils.scala:751)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1(JdbcUtils.scala:902)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1$adapted(JdbcUtils.scala:901)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2(RDD.scala:1036)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2$adapted(RDD.scala:1036)
	at org.apache.spark.SparkContext.$anonfun$runJob$5(SparkContext.scala:2438)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)
	at org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:161)
	at org.apache.spark.scheduler.Task.run(Task.scala:141)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.***ql.util.PSQLException: ERROR: duplicate key value violates unique constraint "reddit_posts_pkey"
  Detail: Key (post_id)=(1he0jj3) already exists.
	at org.***ql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2712)
	at org.***ql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2400)
	... 24 more

Driver stacktrace:
[2024-12-14T19:15:36.201+0000] {docker.py:413} INFO - 24/12/14 19:15:36 INFO DAGScheduler: Job 6 failed: start at NativeMethodAccessorImpl.java:0, took 1.469070 s
[2024-12-14T19:15:36.870+0000] {docker.py:413} INFO - 2024-12-14 19:15:36,807 [ERROR] Failed to save to PostgreSQL table reddit_posts: An error occurred while calling o102.save.
: org.apache.spark.SparkException: Job aborted due to stage failure: Task 0 in stage 10.0 failed 1 times, most recent failure: Lost task 0.0 in stage 10.0 (TID 10) (localhost executor driver): java.sql.BatchUpdateException: Batch entry 50 INSERT INTO reddit_posts ("post_id","title","author","post_time","upvotes","downvotes","num_comments","score","text","first_level_comments_count","second_level_comments_count","subreddit","hour_of_day","day_of_week","created_at") VALUES ('1he0jj3','After Milan''s 2-1 win against Crvena Zvezda, coach Fonseca had said: "I don''t give a f... about the player''s name, I work hard to give my best, some in the team don''t. If I need to play players from the youth team I will do it." Today 6 youth players trained with the first team','Blodgharm','2024-12-14 10:54:56+00',23,0,2,23,'',1,1,'soccer',10,7,'2024-12-14 19:15:34.53043+00') was aborted: ERROR: duplicate key value violates unique constraint "reddit_posts_pkey"
  Detail: Key (post_id)=(1he0jj3) already exists.  Call getNextException to see other errors in the batch.
	at org.***ql.jdbc.BatchResultHandler.handleError(BatchResultHandler.java:165)
	at org.***ql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2401)
	at org.***ql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2133)
	at org.***ql.core.v3.QueryExecutorImpl.flushIfDeadlockRisk(QueryExecutorImpl.java:1490)
	at org.***ql.core.v3.QueryExecutorImpl.sendQuery(QueryExecutorImpl.java:1515)
	at org.***ql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:559)
	at org.***ql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:896)
	at org.***ql.jdbc.PgStatement.executeBatch(PgStatement.java:919)
	at org.***ql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1677)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.savePartition(JdbcUtils.scala:751)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1(JdbcUtils.scala:902)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1$adapted(JdbcUtils.scala:901)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2(RDD.scala:1036)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2$adapted(RDD.scala:1036)
	at org.apache.spark.SparkContext.$anonfun$runJob$5(SparkContext.scala:2438)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)
	at org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:161)
	at org.apache.spark.scheduler.Task.run(Task.scala:141)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.***ql.util.PSQLException: ERROR: duplicate key value violates unique constraint "reddit_posts_pkey"
  Detail: Key (post_id)=(1he0jj3) already exists.
	at org.***ql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2712)
	at org.***ql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2400)
	... 24 more

Driver stacktrace:
	at org.apache.spark.scheduler.DAGScheduler.failJobAndIndependentStages(DAGScheduler.scala:2844)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$abortStage$2(DAGScheduler.scala:2780)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$abortStage$2$adapted(DAGScheduler.scala:2779)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at org.apache.spark.scheduler.DAGScheduler.abortStage(DAGScheduler.scala:2779)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$handleTaskSetFailed$1(DAGScheduler.scala:1242)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$handleTaskSetFailed$1$adapted(DAGScheduler.scala:1242)
	at scala.Option.foreach(Option.scala:407)
	at org.apache.spark.scheduler.DAGScheduler.handleTaskSetFailed(DAGScheduler.scala:1242)
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.doOnReceive(DAGScheduler.scala:3048)
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:2982)
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:2971)
	at org.apache.spark.util.EventLoop$$anon$1.run(EventLoop.scala:49)
	at org.apache.spark.scheduler.DAGScheduler.runJob(DAGScheduler.scala:984)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2398)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2419)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2438)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2463)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$1(RDD.scala:1036)
	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:151)
	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:112)
	at org.apache.spark.rdd.RDD.withScope(RDD.scala:407)
	at org.apache.spark.rdd.RDD.foreachPartition(RDD.scala:1034)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.saveTable(JdbcUtils.scala:901)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcRelationProvider.createRelation(JdbcRelationProvider.scala:70)
	at org.apache.spark.sql.execution.datasources.SaveIntoDataSourceCommand.run(SaveIntoDataSourceCommand.scala:48)
	at org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult$lzycompute(commands.scala:75)
	at org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult(commands.scala:73)
	at org.apache.spark.sql.execution.command.ExecutedCommandExec.executeCollect(commands.scala:84)
	at org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$1.$anonfun$applyOrElse$1(QueryExecution.scala:107)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$6(SQLExecution.scala:125)
	at org.apache.spark.sql.execution.SQLExecution$.withSQLConfPropagated(SQLExecution.scala:201)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$1(SQLExecution.scala:108)
	at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:900)
	at org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:66)
	at org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$1.applyOrElse(QueryExecution.scala:107)
	at org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$1.applyOrElse(QueryExecution.scala:98)
	at org.apache.spark.sql.catalyst.trees.TreeNode.$anonfun$transformDownWithPruning$1(TreeNode.scala:461)
	at org.apache.spark.sql.catalyst.trees.CurrentOrigin$.withOrigin(origin.scala:76)
	at org.apache.spark.sql.catalyst.trees.TreeNode.transformDownWithPruning(TreeNode.scala:461)
	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.org$apache$spark$sql$catalyst$plans$logical$AnalysisHelper$$super$transformDownWithPruning(LogicalPlan.scala:32)
	at org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.transformDownWithPruning(AnalysisHelper.scala:267)
	at org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.transformDownWithPruning$(AnalysisHelper.scala:263)
	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.transformDownWithPruning(LogicalPlan.scala:32)
	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.transformDownWithPruning(LogicalPlan.scala:32)
	at org.apache.spark.sql.catalyst.trees.TreeNode.transformDown(TreeNode.scala:437)
	at org.apache.spark.sql.execution.QueryExecution.eagerlyExecuteCommands(QueryExecution.scala:98)
	at org.apache.spark.sql.execution.QueryExecution.commandExecuted$lzycompute(QueryExecution.scala:85)
	at org.apache.spark.sql.execution.QueryExecution.commandExecuted(QueryExecution.scala:83)
	at org.apache.spark.sql.execution.QueryExecution.assertCommandExecuted(QueryExecution.scala:142)
	at org.apache.spark.sql.DataFrameWriter.runCommand(DataFrameWriter.scala:859)
	at org.apache.spark.sql.DataFrameWriter.saveToV1Source(DataFrameWriter.scala:388)
	at org.apache.spark.sql.DataFrameWriter.saveInternal(DataFrameWriter.scala:361)
	at org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:248)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)
	at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)
	at py4j.Gateway.invoke(Gateway.java:282)
	at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)
	at py4j.commands.CallCommand.execute(CallCommand.java:79)
	at py4j.ClientServerConnection.sendCommand(ClientServerConnection.java:244)
	at py4j.CallbackClient.sendCommand(CallbackClient.java:384)
	at py4j.CallbackClient.sendCommand(CallbackClient.java:356)
	at py4j.reflection.PythonProxyHandler.invoke(PythonProxyHandler.java:106)
	at jdk.proxy3/jdk.proxy3.$Proxy30.call(Unknown Source)
	at org.apache.spark.sql.execution.streaming.sources.PythonForeachBatchHelper$.$anonfun$callForeachBatch$1(ForeachBatchSink.scala:53)
	at org.apache.spark.sql.execution.streaming.sources.PythonForeachBatchHelper$.$anonfun$callForeachBatch$1$adapted(ForeachBatchSink.scala:53)
	at org.apache.spark.sql.execution.streaming.sources.ForeachBatchSink.addBatch(ForeachBatchSink.scala:34)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.$anonfun$runBatch$17(MicroBatchExecution.scala:732)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$6(SQLExecution.scala:125)
	at org.apache.spark.sql.execution.SQLExecution$.withSQLConfPropagated(SQLExecution.scala:201)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$1(SQLExecution.scala:108)
	at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:900)
	at org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:66)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.$anonfun$runBatch$16(MicroBatchExecution.scala:729)
	at org.apache.spark.sql.execution.streaming.ProgressReporter.reportTimeTaken(ProgressReporter.scala:427)
	at org.apache.spark.sql.execution.streaming.ProgressReporter.reportTimeTaken$(ProgressReporter.scala:425)
	at org.apache.spark.sql.execution.streaming.StreamExecution.reportTimeTaken(StreamExecution.scala:67)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.runBatch(MicroBatchExecution.scala:729)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.$anonfun$runActivatedStream$2(MicroBatchExecution.scala:286)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at org.apache.spark.sql.execution.streaming.ProgressReporter.reportTimeTaken(ProgressReporter.scala:427)
	at org.apache.spark.sql.execution.streaming.ProgressReporter.reportTimeTaken$(ProgressReporter.scala:425)
	at org.apache.spark.sql.execution.streaming.StreamExecution.reportTimeTaken(StreamExecution.scala:67)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.$anonfun$runActivatedStream$1(MicroBatchExecution.scala:249)
	at org.apache.spark.sql.execution.streaming.SingleBatchExecutor.execute(TriggerExecutor.scala:39)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.runActivatedStream(MicroBatchExecution.scala:239)
	at org.apache.spark.sql.execution.streaming.StreamExecution.$anonfun$runStream$1(StreamExecution.scala:311)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:900)
	at org.apache.spark.sql.execution.streaming.StreamExecution.org$apache$spark$sql$execution$streaming$StreamExecution$$runStream(StreamExecution.scala:289)
	at org.apache.spark.sql.execution.streaming.StreamExecution$$anon$1.$anonfun$run$1(StreamExecution.scala:211)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at org.apache.spark.JobArtifactSet$.withActiveJobArtifactState(JobArtifactSet.scala:94)
	at org.apache.spark.sql.execution.streaming.StreamExecution$$anon$1.run(StreamExecution.scala:211)
Caused by: java.sql.BatchUpdateException: Batch entry 50 INSERT INTO reddit_posts ("post_id","title","author","post_time","upvotes","downvotes","num_comments","score","text","first_level_comments_count","second_level_comments_count","subreddit","hour_of_day","day_of_week","created_at") VALUES ('1he0jj3','After Milan''s 2-1 win against Crvena Zvezda, coach Fonseca had said: "I don''t give a f... about the player''s name, I work hard to give my best, some in the team don''t. If I need to play players from the youth team I will do it." Today 6 youth players trained with the first team','Blodgharm','2024-12-14 10:54:56+00',23,0,2,23,'',1,1,'soccer',10,7,'2024-12-14 19:15:34.53043+00') was aborted: ERROR: duplicate key value violates unique constraint "reddit_posts_pkey"
  Detail: Key (post_id)=(1he0jj3) already exists.  Call getNextException to see other errors in the batch.
	at org.***ql.jdbc.BatchResultHandler.handleError(BatchResultHandler.java:165)
	at org.***ql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2401)
	at org.***ql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2133)
	at org.***ql.core.v3.QueryExecutorImpl.flushIfDeadlockRisk(QueryExecutorImpl.java:1490)
	at org.***ql.core.v3.QueryExecutorImpl.sendQuery(QueryExecutorImpl.java:1515)
	at org.***ql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:559)
	at org.***ql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:896)
	at org.***ql.jdbc.PgStatement.executeBatch(PgStatement.java:919)
	at org.***ql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1677)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.savePartition(JdbcUtils.scala:751)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1(JdbcUtils.scala:902)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1$adapted(JdbcUtils.scala:901)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2(RDD.scala:1036)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2$adapted(RDD.scala:1036)
	at org.apache.spark.SparkContext.$anonfun$runJob$5(SparkContext.scala:2438)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)
	at org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:161)
	at org.apache.spark.scheduler.Task.run(Task.scala:141)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.***ql.util.PSQLException: ERROR: duplicate key value violates unique constraint "reddit_posts_pkey"
  Detail: Key (post_id)=(1he0jj3) already exists.
	at org.***ql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2712)
	at org.***ql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2400)
	... 24 more
Traceback (most recent call last):
  File "/opt/bitnami/spark/transformation.py", line 453, in save_to_***
    .save()
     ^^^^^^
  File "/opt/bitnami/spark/python/lib/pyspark.zip/pyspark/sql/readwriter.py", line 1461, in save
    self._jwrite.save()
  File "/opt/bitnami/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/java_gateway.py", line 1322, in __call__
    return_value = get_return_value(
                   ^^^^^^^^^^^^^^^^^
  File "/opt/bitnami/spark/python/lib/pyspark.zip/pyspark/errors/exceptions/captured.py", line 179, in deco
    return f(*a, **kw)
           ^^^^^^^^^^^
  File "/opt/bitnami/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/protocol.py", line 326, in get_return_value
    raise Py4JJavaError(
py4j.protocol.Py4JJavaError: An error occurred while calling o102.save.
: org.apache.spark.SparkException: Job aborted due to stage failure: Task 0 in stage 10.0 failed 1 times, most recent failure: Lost task 0.0 in stage 10.0 (TID 10) (localhost executor driver): java.sql.BatchUpdateException: Batch entry 50 INSERT INTO reddit_posts ("post_id","title","author","post_time","upvotes","downvotes","num_comments","score","text","first_level_comments_count","second_level_comments_count","subreddit","hour_of_day","day_of_week","created_at") VALUES ('1he0jj3','After Milan''s 2-1 win against Crvena Zvezda, coach Fonseca had said: "I don''t give a f... about the player''s name, I work hard to give my best, some in the team don''t. If I need to play players from the youth team I will do it." Today 6 youth players trained with the first team','Blodgharm','2024-12-14 10:54:56+00',23,0,2,23,'',1,1,'soccer',10,7,'2024-12-14 19:15:34.53043+00') was aborted: ERROR: duplicate key value violates unique constraint "reddit_posts_pkey"
  Detail: Key (post_id)=(1he0jj3) already exists.  Call getNextException to see other errors in the batch.
	at org.***ql.jdbc.BatchResultHandler.handleError(BatchResultHandler.java:165)
	at org.***ql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2401)
	at org.***ql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2133)
	at org.***ql.core.v3.QueryExecutorImpl.flushIfDeadlockRisk(QueryExecutorImpl.java:1490)
	at org.***ql.core.v3.QueryExecutorImpl.sendQuery(QueryExecutorImpl.java:1515)
	at org.***ql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:559)
	at org.***ql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:896)
	at org.***ql.jdbc.PgStatement.executeBatch(PgStatement.java:919)
	at org.***ql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1677)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.savePartition(JdbcUtils.scala:751)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1(JdbcUtils.scala:902)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1$adapted(JdbcUtils.scala:901)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2(RDD.scala:1036)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2$adapted(RDD.scala:1036)
	at org.apache.spark.SparkContext.$anonfun$runJob$5(SparkContext.scala:2438)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)
	at org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:161)
	at org.apache.spark.scheduler.Task.run(Task.scala:141)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.***ql.util.PSQLException: ERROR: duplicate key value violates unique constraint "reddit_posts_pkey"
  Detail: Key (post_id)=(1he0jj3) already exists.
	at org.***ql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2712)
	at org.***ql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2400)
	... 24 more

Driver stacktrace:
	at org.apache.spark.scheduler.DAGScheduler.failJobAndIndependentStages(DAGScheduler.scala:2844)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$abortStage$2(DAGScheduler.scala:2780)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$abortStage$2$adapted(DAGScheduler.scala:2779)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at org.apache.spark.scheduler.DAGScheduler.abortStage(DAGScheduler.scala:2779)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$handleTaskSetFailed$1(DAGScheduler.scala:1242)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$handleTaskSetFailed$1$adapted(DAGScheduler.scala:1242)
	at scala.Option.foreach(Option.scala:407)
	at org.apache.spark.scheduler.DAGScheduler.handleTaskSetFailed(DAGScheduler.scala:1242)
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.doOnReceive(DAGScheduler.scala:3048)
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:2982)
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:2971)
	at org.apache.spark.util.EventLoop$$anon$1.run(EventLoop.scala:49)
	at org.apache.spark.scheduler.DAGScheduler.runJob(DAGScheduler.scala:984)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2398)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2419)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2438)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2463)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$1(RDD.scala:1036)
	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:151)
	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:112)
	at org.apache.spark.rdd.RDD.withScope(RDD.scala:407)
	at org.apache.spark.rdd.RDD.foreachPartition(RDD.scala:1034)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.saveTable(JdbcUtils.scala:901)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcRelationProvider.createRelation(JdbcRelationProvider.scala:70)
	at org.apache.spark.sql.execution.datasources.SaveIntoDataSourceCommand.run(SaveIntoDataSourceCommand.scala:48)
	at org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult$lzycompute(commands.scala:75)
	at org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult(commands.scala:73)
	at org.apache.spark.sql.execution.command.ExecutedCommandExec.executeCollect(commands.scala:84)
	at org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$1.$anonfun$applyOrElse$1(QueryExecution.scala:107)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$6(SQLExecution.scala:125)
	at org.apache.spark.sql.execution.SQLExecution$.withSQLConfPropagated(SQLExecution.scala:201)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$1(SQLExecution.scala:108)
	at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:900)
	at org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:66)
	at org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$1.applyOrElse(QueryExecution.scala:107)
	at org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$1.applyOrElse(QueryExecution.scala:98)
	at org.apache.spark.sql.catalyst.trees.TreeNode.$anonfun$transformDownWithPruning$1(TreeNode.scala:461)
	at org.apache.spark.sql.catalyst.trees.CurrentOrigin$.withOrigin(origin.scala:76)
	at org.apache.spark.sql.catalyst.trees.TreeNode.transformDownWithPruning(TreeNode.scala:461)
	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.org$apache$spark$sql$catalyst$plans$logical$AnalysisHelper$$super$transformDownWithPruning(LogicalPlan.scala:32)
	at org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.transformDownWithPruning(AnalysisHelper.scala:267)
	at org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.transformDownWithPruning$(AnalysisHelper.scala:263)
	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.transformDownWithPruning(LogicalPlan.scala:32)
	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.transformDownWithPruning(LogicalPlan.scala:32)
	at org.apache.spark.sql.catalyst.trees.TreeNode.transformDown(TreeNode.scala:437)
	at org.apache.spark.sql.execution.QueryExecution.eagerlyExecuteCommands(QueryExecution.scala:98)
	at org.apache.spark.sql.execution.QueryExecution.commandExecuted$lzycompute(QueryExecution.scala:85)
	at org.apache.spark.sql.execution.QueryExecution.commandExecuted(QueryExecution.scala:83)
	at org.apache.spark.sql.execution.QueryExecution.assertCommandExecuted(QueryExecution.scala:142)
	at org.apache.spark.sql.DataFrameWriter.runCommand(DataFrameWriter.scala:859)
	at org.apache.spark.sql.DataFrameWriter.saveToV1Source(DataFrameWriter.scala:388)
	at org.apache.spark.sql.DataFrameWriter.saveInternal(DataFrameWriter.scala:361)
	at org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:248)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)
	at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)
	at py4j.Gateway.invoke(Gateway.java:282)
	at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)
	at py4j.commands.CallCommand.execute(CallCommand.java:79)
	at py4j.ClientServerConnection.sendCommand(ClientServerConnection.java:244)
	at py4j.CallbackClient.sendCommand(CallbackClient.java:384)
	at py4j.CallbackClient.sendCommand(CallbackClient.java:356)
	at py4j.reflection.PythonProxyHandler.invoke(PythonProxyHandler.java:106)
	at jdk.proxy3/jdk.proxy3.$Proxy30.call(Unknown Source)
	at org.apache.spark.sql.execution.streaming.sources.PythonForeachBatchHelper$.$anonfun$callForeachBatch$1(ForeachBatchSink.scala:53)
	at org.apache.spark.sql.execution.streaming.sources.PythonForeachBatchHelper$.$anonfun$callForeachBatch$1$adapted(ForeachBatchSink.scala:53)
	at org.apache.spark.sql.execution.streaming.sources.ForeachBatchSink.addBatch(ForeachBatchSink.scala:34)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.$anonfun$runBatch$17(MicroBatchExecution.scala:732)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$6(SQLExecution.scala:125)
	at org.apache.spark.sql.execution.SQLExecution$.withSQLConfPropagated(SQLExecution.scala:201)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$1(SQLExecution.scala:108)
	at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:900)
	at org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:66)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.$anonfun$runBatch$16(MicroBatchExecution.scala:729)
	at org.apache.spark.sql.execution.streaming.ProgressReporter.reportTimeTaken(ProgressReporter.scala:427)
	at org.apache.spark.sql.execution.streaming.ProgressReporter.reportTimeTaken$(ProgressReporter.scala:425)
	at org.apache.spark.sql.execution.streaming.StreamExecution.reportTimeTaken(StreamExecution.scala:67)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.runBatch(MicroBatchExecution.scala:729)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.$anonfun$runActivatedStream$2(MicroBatchExecution.scala:286)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at org.apache.spark.sql.execution.streaming.ProgressReporter.reportTimeTaken(ProgressReporter.scala:427)
	at org.apache.spark.sql.execution.streaming.ProgressReporter.reportTimeTaken$(ProgressReporter.scala:425)
	at org.apache.spark.sql.execution.streaming.StreamExecution.reportTimeTaken(StreamExecution.scala:67)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.$anonfun$runActivatedStream$1(MicroBatchExecution.scala:249)
	at org.apache.spark.sql.execution.streaming.SingleBatchExecutor.execute(TriggerExecutor.scala:39)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.runActivatedStream(MicroBatchExecution.scala:239)
	at org.apache.spark.sql.execution.streaming.StreamExecution.$anonfun$runStream$1(StreamExecution.scala:311)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:900)
	at org.apache.spark.sql.execution.streaming.StreamExecution.org$apache$spark$sql$execution$streaming$StreamExecution$$runStream(StreamExecution.scala:289)
	at org.apache.spark.sql.execution.streaming.StreamExecution$$anon$1.$anonfun$run$1(StreamExecution.scala:211)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at org.apache.spark.JobArtifactSet$.withActiveJobArtifactState(JobArtifactSet.scala:94)
	at org.apache.spark.sql.execution.streaming.StreamExecution$$anon$1.run(StreamExecution.scala:211)
Caused by: java.sql.BatchUpdateException: Batch entry 50 INSERT INTO reddit_posts ("post_id","title","author","post_time","upvotes","downvotes","num_comments","score","text","first_level_comments_count","second_level_comments_count","subreddit","hour_of_day","day_of_week","created_at") VALUES ('1he0jj3','After Milan''s 2-1 win against Crvena Zvezda, coach Fonseca had said: "I don''t give a f... about the player''s name, I work hard to give my best, some in the team don''t. If I need to play players from the youth team I will do it." Today 6 youth players trained with the first team','Blodgharm','2024-12-14 10:54:56+00',23,0,2,23,'',1,1,'soccer',10,7,'2024-12-14 19:15:34.53043+00') was aborted: ERROR: duplicate key value violates unique constraint "reddit_posts_pkey"
  Detail: Key (post_id)=(1he0jj3) already exists.  Call getNextException to see other errors in the batch.
	at org.***ql.jdbc.BatchResultHandler.handleError(BatchResultHandler.java:165)
	at org.***ql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2401)
	at org.***ql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2133)
	at org.***ql.core.v3.QueryExecutorImpl.flushIfDeadlockRisk(QueryExecutorImpl.java:1490)
	at org.***ql.core.v3.QueryExecutorImpl.sendQuery(QueryExecutorImpl.java:1515)
	at org.***ql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:559)
	at org.***ql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:896)
	at org.***ql.jdbc.PgStatement.executeBatch(PgStatement.java:919)
	at org.***ql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1677)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.savePartition(JdbcUtils.scala:751)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1(JdbcUtils.scala:902)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1$adapted(JdbcUtils.scala:901)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2(RDD.scala:1036)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2$adapted(RDD.scala:1036)
	at org.apache.spark.SparkContext.$anonfun$runJob$5(SparkContext.scala:2438)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)
	at org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:161)
	at org.apache.spark.scheduler.Task.run(Task.scala:141)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)
	at org.apac
[2024-12-14T19:15:36.875+0000] {docker.py:413} INFO - he.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.***ql.util.PSQLException: ERROR: duplicate key value violates unique constraint "reddit_posts_pkey"
  Detail: Key (post_id)=(1he0jj3) already exists.
	at org.***ql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2712)
	at org.***ql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2400)
	... 24 more
[2024-12-14T19:15:36.958+0000] {docker.py:413} INFO - 2024-12-14 19:15:36,909 [ERROR] Error processing batch 0: An error occurred while calling o102.save.
: org.apache.spark.SparkException: Job aborted due to stage failure: Task 0 in stage 10.0 failed 1 times, most recent failure: Lost task 0.0 in stage 10.0 (TID 10) (localhost executor driver): java.sql.BatchUpdateException: Batch entry 50 INSERT INTO reddit_posts ("post_id","title","author","post_time","upvotes","downvotes","num_comments","score","text","first_level_comments_count","second_level_comments_count","subreddit","hour_of_day","day_of_week","created_at") VALUES ('1he0jj3','After Milan''s 2-1 win against Crvena Zvezda, coach Fonseca had said: "I don''t give a f... about the player''s name, I work hard to give my best, some in the team don''t. If I need to play players from the youth team I will do it." Today 6 youth players trained with the first team','Blodgharm','2024-12-14 10:54:56+00',23,0,2,23,'',1,1,'soccer',10,7,'2024-12-14 19:15:34.53043+00') was aborted: ERROR: duplicate key value violates unique constraint "reddit_posts_pkey"
  Detail: Key (post_id)=(1he0jj3) already exists.  Call getNextException to see other errors in the batch.
	at org.***ql.jdbc.BatchResultHandler.handleError(BatchResultHandler.java:165)
	at org.***ql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2401)
	at org.***ql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2133)
	at org.***ql.core.v3.QueryExecutorImpl.flushIfDeadlockRisk(QueryExecutorImpl.java:1490)
	at org.***ql.core.v3.QueryExecutorImpl.sendQuery(QueryExecutorImpl.java:1515)
	at org.***ql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:559)
	at org.***ql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:896)
	at org.***ql.jdbc.PgStatement.executeBatch(PgStatement.java:919)
	at org.***ql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1677)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.savePartition(JdbcUtils.scala:751)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1(JdbcUtils.scala:902)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1$adapted(JdbcUtils.scala:901)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2(RDD.scala:1036)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2$adapted(RDD.scala:1036)
	at org.apache.spark.SparkContext.$anonfun$runJob$5(SparkContext.scala:2438)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)
	at org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:161)
	at org.apache.spark.scheduler.Task.run(Task.scala:141)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.***ql.util.PSQLException: ERROR: duplicate key value violates unique constraint "reddit_posts_pkey"
  Detail: Key (post_id)=(1he0jj3) already exists.
	at org.***ql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2712)
	at org.***ql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2400)
	... 24 more

Driver stacktrace:
	at org.apache.spark.scheduler.DAGScheduler.failJobAndIndependentStages(DAGScheduler.scala:2844)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$abortStage$2(DAGScheduler.scala:2780)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$abortStage$2$adapted(DAGScheduler.scala:2779)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at org.apache.spark.scheduler.DAGScheduler.abortStage(DAGScheduler.scala:2779)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$handleTaskSetFailed$1(DAGScheduler.scala:1242)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$handleTaskSetFailed$1$adapted(DAGScheduler.scala:1242)
	at scala.Option.foreach(Option.scala:407)
	at org.apache.spark.scheduler.DAGScheduler.handleTaskSetFailed(DAGScheduler.scala:1242)
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.doOnReceive(DAGScheduler.scala:3048)
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:2982)
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:2971)
	at org.apache.spark.util.EventLoop$$anon$1.run(EventLoop.scala:49)
	at org.apache.spark.scheduler.DAGScheduler.runJob(DAGScheduler.scala:984)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2398)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2419)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2438)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2463)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$1(RDD.scala:1036)
	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:151)
	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:112)
	at org.apache.spark.rdd.RDD.withScope(RDD.scala:407)
	at org.apache.spark.rdd.RDD.foreachPartition(RDD.scala:1034)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.saveTable(JdbcUtils.scala:901)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcRelationProvider.createRelation(JdbcRelationProvider.scala:70)
	at org.apache.spark.sql.execution.datasources.SaveIntoDataSourceCommand.run(SaveIntoDataSourceCommand.scala:48)
	at org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult$lzycompute(commands.scala:75)
	at org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult(commands.scala:73)
	at org.apache.spark.sql.execution.command.ExecutedCommandExec.executeCollect(commands.scala:84)
	at org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$1.$anonfun$applyOrElse$1(QueryExecution.scala:107)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$6(SQLExecution.scala:125)
	at org.apache.spark.sql.execution.SQLExecution$.withSQLConfPropagated(SQLExecution.scala:201)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$1(SQLExecution.scala:108)
	at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:900)
	at org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:66)
	at org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$1.applyOrElse(QueryExecution.scala:107)
	at org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$1.applyOrElse(QueryExecution.scala:98)
	at org.apache.spark.sql.catalyst.trees.TreeNode.$anonfun$transformDownWithPruning$1(TreeNode.scala:461)
	at org.apache.spark.sql.catalyst.trees.CurrentOrigin$.withOrigin(origin.scala:76)
	at org.apache.spark.sql.catalyst.trees.TreeNode.transformDownWithPruning(TreeNode.scala:461)
	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.org$apache$spark$sql$catalyst$plans$logical$AnalysisHelper$$super$transformDownWithPruning(LogicalPlan.scala:32)
	at org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.transformDownWithPruning(AnalysisHelper.scala:267)
	at org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.transformDownWithPruning$(AnalysisHelper.scala:263)
	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.transformDownWithPruning(LogicalPlan.scala:32)
	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.transformDownWithPruning(LogicalPlan.scala:32)
	at org.apache.spark.sql.catalyst.trees.TreeNode.transformDown(TreeNode.scala:437)
	at org.apache.spark.sql.execution.QueryExecution.eagerlyExecuteCommands(QueryExecution.scala:98)
	at org.apache.spark.sql.execution.QueryExecution.commandExecuted$lzycompute(QueryExecution.scala:85)
	at org.apache.spark.sql.execution.QueryExecution.commandExecuted(QueryExecution.scala:83)
	at org.apache.spark.sql.execution.QueryExecution.assertCommandExecuted(QueryExecution.scala:142)
	at org.apache.spark.sql.DataFrameWriter.runCommand(DataFrameWriter.scala:859)
	at org.apache.spark.sql.DataFrameWriter.saveToV1Source(DataFrameWriter.scala:388)
	at org.apache.spark.sql.DataFrameWriter.saveInternal(DataFrameWriter.scala:361)
	at org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:248)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)
	at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)
	at py4j.Gateway.invoke(Gateway.java:282)
	at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)
	at py4j.commands.CallCommand.execute(CallCommand.java:79)
	at py4j.ClientServerConnection.sendCommand(ClientServerConnection.java:244)
	at py4j.CallbackClient.sendCommand(CallbackClient.java:384)
	at py4j.CallbackClient.sendCommand(CallbackClient.java:356)
	at py4j.reflection.PythonProxyHandler.invoke(PythonProxyHandler.java:106)
	at jdk.proxy3/jdk.proxy3.$Proxy30.call(Unknown Source)
	at org.apache.spark.sql.execution.streaming.sources.PythonForeachBatchHelper$.$anonfun$callForeachBatch$1(ForeachBatchSink.scala:53)
	at org.apache.spark.sql.execution.streaming.sources.PythonForeachBatchHelper$.$anonfun$callForeachBatch$1$adapted(ForeachBatchSink.scala:53)
	at org.apache.spark.sql.execution.streaming.sources.ForeachBatchSink.addBatch(ForeachBatchSink.scala:34)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.$anonfun$runBatch$17(MicroBatchExecution.scala:732)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$6(SQLExecution.scala:125)
	at org.apache.spark.sql.execution.SQLExecution$.withSQLConfPropagated(SQLExecution.scala:201)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$1(SQLExecution.scala:108)
	at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:900)
	at org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:66)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.$anonfun$runBatch$16(MicroBatchExecution.scala:729)
	at org.apache.spark.sql.execution.streaming.ProgressReporter.reportTimeTaken(ProgressReporter.scala:427)
	at org.apache.spark.sql.execution.streaming.ProgressReporter.reportTimeTaken$(ProgressReporter.scala:425)
	at org.apache.spark.sql.execution.streaming.StreamExecution.reportTimeTaken(StreamExecution.scala:67)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.runBatch(MicroBatchExecution.scala:729)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.$anonfun$runActivatedStream$2(MicroBatchExecution.scala:286)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at org.apache.spark.sql.execution.streaming.ProgressReporter.reportTimeTaken(ProgressReporter.scala:427)
	at org.apache.spark.sql.execution.streaming.ProgressReporter.reportTimeTaken$(ProgressReporter.scala:425)
	at org.apache.spark.sql.execution.streaming.StreamExecution.reportTimeTaken(StreamExecution.scala:67)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.$anonfun$runActivatedStream$1(MicroBatchExecution.scala:249)
	at org.apache.spark.sql.execution.streaming.SingleBatchExecutor.execute(TriggerExecutor.scala:39)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.runActivatedStream(MicroBatchExecution.scala:239)
	at org.apache.spark.sql.execution.streaming.StreamExecution.$anonfun$runStream$1(StreamExecution.scala:311)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:900)
	at org.apache.spark.sql.execution.streaming.StreamExecution.org$apache$spark$sql$execution$streaming$StreamExecution$$runStream(StreamExecution.scala:289)
	at org.apache.spark.sql.execution.streaming.StreamExecution$$anon$1.$anonfun$run$1(StreamExecution.scala:211)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at org.apache.spark.JobArtifactSet$.withActiveJobArtifactState(JobArtifactSet.scala:94)
	at org.apache.spark.sql.execution.streaming.StreamExecution$$anon$1.run(StreamExecution.scala:211)
Caused by: java.sql.BatchUpdateException: Batch entry 50 INSERT INTO reddit_posts ("post_id","title","author","post_time","upvotes","downvotes","num_comments","score","text","first_level_comments_count","second_level_comments_count","subreddit","hour_of_day","day_of_week","created_at") VALUES ('1he0jj3','After Milan''s 2-1 win against Crvena Zvezda, coach Fonseca had said: "I don''t give a f... about the player''s name, I work hard to give my best, some in the team don''t. If I need to play players from the youth team I will do it." Today 6 youth players trained with the first team','Blodgharm','2024-12-14 10:54:56+00',23,0,2,23,'',1,1,'soccer',10,7,'2024-12-14 19:15:34.53043+00') was aborted: ERROR: duplicate key value violates unique constraint "reddit_posts_pkey"
  Detail: Key (post_id)=(1he0jj3) already exists.  Call getNextException to see other errors in the batch.
	at org.***ql.jdbc.BatchResultHandler.handleError(BatchResultHandler.java:165)
	at org.***ql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2401)
	at org.***ql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2133)
	at org.***ql.core.v3.QueryExecutorImpl.flushIfDeadlockRisk(QueryExecutorImpl.java:1490)
	at org.***ql.core.v3.QueryExecutorImpl.sendQuery(QueryExecutorImpl.java:1515)
	at org.***ql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:559)
	at org.***ql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:896)
	at org.***ql.jdbc.PgStatement.executeBatch(PgStatement.java:919)
	at org.***ql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1677)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.savePartition(JdbcUtils.scala:751)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1(JdbcUtils.scala:902)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1$adapted(JdbcUtils.scala:901)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2(RDD.scala:1036)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2$adapted(RDD.scala:1036)
	at org.apache.spark.SparkContext.$anonfun$runJob$5(SparkContext.scala:2438)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)
	at org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:161)
	at org.apache.spark.scheduler.Task.run(Task.scala:141)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.***ql.util.PSQLException: ERROR: duplicate key value violates unique constraint "reddit_posts_pkey"
  Detail: Key (post_id)=(1he0jj3) already exists.
	at org.***ql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2712)
	at org.***ql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2400)
	... 24 more
Traceback (most recent call last):
  File "/opt/bitnami/spark/spark_streaming.py", line 287, in process_batch
    transformer.save_to_***(posts_df, "reddit_posts")
  File "/opt/bitnami/spark/transformation.py", line 458, in save_to_***
    raise e
  File "/opt/bitnami/spark/transformation.py", line 453, in save_to_***
    .save()
     ^^^^^^
  File "/opt/bitnami/spark/python/lib/pyspark.zip/pyspark/sql/readwriter.py", line 1461, in save
    self._jwrite.save()
  File "/opt/bitnami/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/java_gateway.py", line 1322, in __call__
    return_value = get_return_value(
                   ^^^^^^^^^^^^^^^^^
  File "/opt/bitnami/spark/python/lib/pyspark.zip/pyspark/errors/exceptions/captured.py", line 179, in deco
    return f(*a, **kw)
           ^^^^^^^^^^^
  File "/opt/bitnami/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/protocol.py", line 326, in get_return_value
    raise Py4JJavaError(
py4j.protocol.Py4JJavaError: An error occurred while calling o102.save.
: org.apache.spark.SparkException: Job aborted due to stage failure: Task 0 in stage 10.0 failed 1 times, most recent failure: Lost task 0.0 in stage 10.0 (TID 10) (localhost executor driver): java.sql.BatchUpdateException: Batch entry 50 INSERT INTO reddit_posts ("post_id","title","author","post_time","upvotes","downvotes","num_comments","score","text","first_level_comments_count","second_level_comments_count","subreddit","hour_of_day","day_of_week","created_at") VALUES ('1he0jj3','After Milan''s 2-1 win against Crvena Zvezda, coach Fonseca had said: "I don''t give a f... about the player''s name, I work hard to give my best, some in the team don''t. If I need to play players from the youth team I will do it." Today 6 youth players trained with the first team','Blodgharm','2024-12-14 10:54:56+00',23,0,2,23,'',1,1,'soccer',10,7,'2024-12-14 19:15:34.53043+00') was aborted: ERROR: duplicate key value violates unique constraint "reddit_posts_pkey"
  Detail: Key (post_id)=(1he0jj3) already exists.  Call getNextException to see other errors in the batch.
	at org.***ql.jdbc.BatchResultHandler.handleError(BatchResultHandler.java:165)
	at org.***ql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2401)
	at org.***ql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2133)
	at org.***ql.core.v3.QueryExecutorImpl.flushIfDeadlockRisk(QueryExecutorImpl.java:1490)
	at org.***ql.core.v3.QueryExecutorImpl.sendQuery(QueryExecutorImpl.java:1515)
	at org.***ql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:559)
	at org.***ql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:896)
	at org.***ql.jdbc.PgStatement.executeBatch(PgStatement.java:919)
	at org.***ql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1677)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.savePartition(JdbcUtils.scala:751)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1(JdbcUtils.scala:902)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1$adapted(JdbcUtils.scala:901)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2(RDD.scala:1036)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2$adapted(RDD.scala:1036)
	at org.apache.spark.SparkContext.$anonfun$runJob$5(SparkContext.scala:2438)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)
	at org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:161)
	at org.apache.spark.scheduler.Task.run(Task.scala:141)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.***ql.util.PSQLException: ERROR: duplicate key value violates unique constraint "reddit_posts_pkey"
  Detail: Key (post_id)=(1he0jj3) already exists.
	at org.***ql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2712)
	at org.***ql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2400)
	... 24 more

Driver stacktrace:
	at org.apache.spark.scheduler.DAGScheduler.failJobAndIndependentStages(DAGScheduler.scala:2844)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$abortStage$2(DAGScheduler.scala:2780)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$abortStage$2$adapted(DAGScheduler.scala:2779)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at org.apache.spark.scheduler.DAGScheduler.abortStage(DAGScheduler.scala:2779)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$handleTaskSetFailed$1(DAGScheduler.scala:1242)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$handleTaskSetFailed$1$adapted(DAGScheduler.scala:1242)
	at scala.Option.foreach(Option.scala:407)
	at org.apache.spark.scheduler.DAGScheduler.handleTaskSetFailed(DAGScheduler.scala:1242)
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.doOnReceive(DAGScheduler.scala:3048)
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:2982)
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:2971)
	at org.apache.spark.util.EventLoop$$anon$1.run(EventLoop.scala:49)
	at org.apache.spark.scheduler.DAGScheduler.runJob(DAGScheduler.scala:984)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2398)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2419)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2438)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2463)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$1(RDD.scala:1036)
	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:151)
	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:112)
	at org.apache.spark.rdd.RDD.withScope(RDD.scala:407)
	at org.apache.spark.rdd.RDD.foreachPartition(RDD.scala:1034)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.saveTable(JdbcUtils.scala:901)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcRelationProvider.createRelation(JdbcRelationProvider.scala:70)
	at org.apache.spark.sql.execution.datasources.SaveIntoDataSourceCommand.run(SaveIntoDataSourceCommand.scala:48)
	at org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult$lzycompute(commands.scala:75)
	at org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult(commands.scala:73)
	at org.apache.spark.sql.execution.command.ExecutedCommandExec.executeCollect(commands.scala:84)
	at org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$1.$anonfun$applyOrElse$1(QueryExecution.scala:107)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$6(SQLExecution.scala:125)
	at org.apache.spark.sql.execution.SQLExecution$.withSQLConfPropagated(SQLExecution.scala:201)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$1(SQLExecution.scala:108)
	at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:900)
	at org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:66)
	at org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$1.applyOrElse(QueryExecution.scala:107)
	at org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$1.applyOrElse(QueryExecution.scala:98)
	at org.apache.spark.sql.catalyst.trees.TreeNode.$anonfun$transformDownWithPruning$1(TreeNode.scala:461)
	at org.apache.spark.sql.catalyst.trees.CurrentOrigin$.withOrigin(origin.scala:76)
	at org.apache.spark.sql.catalyst.trees.TreeNode.transformDownWithPruning(TreeNode.scala:461)
	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.org$apache$spark$sql$catalyst$plans$logical$AnalysisHelper$$super$transformDownWithPruning(LogicalPlan.scala:32)
	at org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.transformDownWithPruning(AnalysisHelper.scala:267)
	at org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.transformDownWithPruning$(AnalysisHelper.scala:263)
	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.transformDownWithPruning(LogicalPlan.scala:32)
	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.transformDownWithPruning(LogicalPlan.scala:32)
	at org.apache.spark.sql.catalyst.trees.TreeNode.transformDown(TreeNode.scala:437)
	at org.apache.spark.sql.execution.QueryExecution.eagerlyExecuteCommands(QueryExecution.scala:98)
	at org.apache.spark.sql.execution.QueryExecution.commandExecuted$lzycompute(QueryExecution.scala:85)
	at org.apache.spark.sql.execution.QueryExecution.commandExecuted(QueryExecution.scala:83)
	at org.apache.spark.sql.execution.QueryExecution.assertCommandExecuted(QueryExecution.scala:142)
	at org.apache.spark.sql.DataFrameWriter.runCommand(DataFrameWriter.scala:859)
	at org.apache.spark.sql.DataFrameWriter.saveToV1Source(DataFrameWriter.scala:388)
	at org.apache.spark.sql.DataFrameWriter.saveInternal(DataFrameWriter.scala:361)
	at org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:248)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)
	at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)
	at py4j.Gateway.invoke(Gateway.java:282)
	at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)
	at py4j.commands.CallCommand.execute(CallCommand.java:79)
	at py4j.ClientServerConnection.sendCommand(ClientServerConnection.java:244)
	at py4j.CallbackClient.sendCommand(CallbackClient.java:384)
	at py4j.CallbackClient.sendCommand(CallbackClient.java:356)
	at py4j.reflection.PythonProxyHandler.invoke(PythonProxyHandler.java:106)
	at jdk.proxy3/jdk.proxy3.$Proxy30.call(Unknown Source)
	at org.apache.spark.sql.execution.streaming.sources.PythonForeachBatchHelper$.$anonfun$callForeachBatch$1(ForeachBatchSink.scala:53)
	at org.apache.spark.sql.execution.streaming.sources.PythonForeachBatchHelper$.$anonfun$callForeachBatch$1$adapted(ForeachBatchSink.scala:53)
	at org.apache.spark.sql.execution.streaming.sources.ForeachBatchSink.addBatch(ForeachBatchSink.scala:34)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.$anonfun$runBatch$17(MicroBatchExecution.scala:732)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$6(SQLExecution.scala:125)
	at org.apache.spark.sql.execution.SQLExecution$.withSQLConfPropagated(SQLExecution.scala:201)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$1(SQLExecution.scala:108)
	at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:900)
	at org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:66)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.$anonfun$runBatch$16(MicroBatchExecution.scala:729)
	at org.apache.spark.sql.execution.streaming.ProgressReporter.reportTimeTaken(ProgressReporter.scala:427)
	at org.apache.spark.sql.execution.streaming.ProgressReporter.reportTimeTaken$(ProgressReporter.scala:425)
	at org.apache.spark.sql.execution.streaming.StreamExecution.reportTimeTaken(StreamExecution.scala:67)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.runBatch(MicroBatchExecution.scala:729)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.$anonfun$runActivatedStream$2(MicroBatchExecution.scala:286)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at org.apache.spark.sql.execution.streaming.ProgressReporter.reportTimeTaken(ProgressReporter.scala:427)
	at org.apache.spark.sql.execution.streaming.ProgressReporter.reportTimeTaken$(ProgressReporter.scala:425)
	at org.apache.spark.sql.execution.streaming.StreamExecution.reportTimeTaken(StreamExecution.scala:67)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.$anonfun$runActivatedStream$1(MicroBatchExecution.scala:249)
	at org.apache.spark.sql.execution.streaming.SingleBatchExecutor.execute(TriggerExecutor.scala:39)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.runActivatedStream(MicroBatchExecution.scala:239)
	at org.apache.spark.sql.execution.streaming.StreamExecution.$anonfun$runStream$1(StreamExecution.scala:311)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:900)
	at org.apache.spark.sql.execution.streaming.StreamExecution.org$apache$spark$sql$execution$streaming$StreamExecution$$runStream(StreamExecution.scala:289)
	at org.apache.spark.sql.execution.streaming.StreamExecution$$anon$1.$anonfun$run$1(StreamExecution.scala:211)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at org.apache.spark.JobArtifactSet$.withActiveJobArtifactState(JobArtifactSet.scala:94)
	at org.apache.spark.sql.execution.streaming.StreamExecution$$anon$1.run(StreamExecution.scala:211)
Caused by: java.sql.BatchUpdateException: Batch entry 50 INSERT INTO reddit_posts ("post_id","title","author","post_time","upvotes","downvotes","num_comments","score","text","first_level_comments_count","second_level_comments_count","subreddit","hour_of_day","day_of_week","created_at") VALUES ('1he0jj3','After Milan''s 2-1 win against Crvena Zvezda, coach Fonseca had said: "I don''t give a f... about the player''s name, I work hard to give my best, some in the team don''t. If I need to play players from the youth team I will do it." Today 6 youth players trained with the first team','Blodgharm','2024-12-14 10:54:56+00',23,0,2,23,'',1,1,'soccer',10,7,'2024-12-14 19:15:34.53043+00') was aborted: ERROR: duplicate key value violates unique constraint "reddit_posts_pkey"
  Detail: Key (post_id)=(1he0jj3) already exists.  Call getNextException to see other errors in the batch.
	at org.***ql.jdbc.BatchResultHandler.handleError(BatchResultHandler.java:165)
	at org.***ql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2401)
	at org.***ql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2133)
	at org.***ql.core.v3.QueryExecutorImpl.flushIfDeadlockRisk(QueryExecutorImpl.java:1490)
	at org.***ql.core.v3.QueryExecutorImpl.sendQuery(QueryExecutorImpl.java:1515)
	at org.***ql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:559)
	at org.***ql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:896)
	at org.***ql.jdbc.PgStatement.executeBatch(PgStatement.java:919)
	at org.***ql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1677)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.savePartition(JdbcUtils.scala:751)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1(JdbcUtils.scala:902)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1$adapted(JdbcUtils.scala:901)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2(RDD.scala:1036)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2$adapted(RDD.scala:1036)
	at org.apache.spark.SparkContext.$anonfun$runJob$5(SparkContext.scala:2438)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)
	at org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:161)
	at org.apache.spark.scheduler.Task.run(Task.scala:141)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4
[2024-12-14T19:15:36.963+0000] {docker.py:413} INFO - (Executo
[2024-12-14T19:15:36.964+0000] {docker.py:413} INFO - r.scala:620)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.***ql.util.PSQLException: ERROR: duplicate key value violates unique constraint "reddit_posts_pkey"
  Detail: Key (post_id)=(1he0jj3) already exists.
	at org.***ql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2712)
	at org.***ql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2400)
	... 24 more
[2024-12-14T19:15:37.005+0000] {docker.py:413} INFO - 2024-12-14 19:15:36,953 [ERROR] There was an exception while executing the Python Proxy on the Python Side.
Traceback (most recent call last):
  File "/opt/bitnami/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/clientserver.py", line 617, in _call_proxy
    return_value = getattr(self.pool[obj_id], method)(*params)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/bitnami/spark/python/lib/pyspark.zip/pyspark/sql/utils.py", line 120, in call
    raise e
  File "/opt/bitnami/spark/python/lib/pyspark.zip/pyspark/sql/utils.py", line 117, in call
    self.func(DataFrame(jdf, wrapped_session_jdf), batch_id)
  File "/opt/bitnami/spark/spark_streaming.py", line 327, in process_batch
    raise e
  File "/opt/bitnami/spark/spark_streaming.py", line 287, in process_batch
    transformer.save_to_***(posts_df, "reddit_posts")
  File "/opt/bitnami/spark/transformation.py", line 458, in save_to_***
    raise e
  File "/opt/bitnami/spark/transformation.py", line 453, in save_to_***
    .save()
     ^^^^^^
  File "/opt/bitnami/spark/python/lib/pyspark.zip/pyspark/sql/readwriter.py", line 1461, in save
    self._jwrite.save()
  File "/opt/bitnami/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/java_gateway.py", line 1322, in __call__
    return_value = get_return_value(
                   ^^^^^^^^^^^^^^^^^
  File "/opt/bitnami/spark/python/lib/pyspark.zip/pyspark/errors/exceptions/captured.py", line 179, in deco
    return f(*a, **kw)
           ^^^^^^^^^^^
  File "/opt/bitnami/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/protocol.py", line 326, in get_return_value
    raise Py4JJavaError(
py4j.protocol.Py4JJavaError: An error occurred while calling o102.save.
: org.apache.spark.SparkException: Job aborted due to stage failure: Task 0 in stage 10.0 failed 1 times, most recent failure: Lost task 0.0 in stage 10.0 (TID 10) (localhost executor driver): java.sql.BatchUpdateException: Batch entry 50 INSERT INTO reddit_posts ("post_id","title","author","post_time","upvotes","downvotes","num_comments","score","text","first_level_comments_count","second_level_comments_count","subreddit","hour_of_day","day_of_week","created_at") VALUES ('1he0jj3','After Milan''s 2-1 win against Crvena Zvezda, coach Fonseca had said: "I don''t give a f... about the player''s name, I work hard to give my best, some in the team don''t. If I need to play players from the youth team I will do it." Today 6 youth players trained with the first team','Blodgharm','2024-12-14 10:54:56+00',23,0,2,23,'',1,1,'soccer',10,7,'2024-12-14 19:15:34.53043+00') was aborted: ERROR: duplicate key value violates unique constraint "reddit_posts_pkey"
  Detail: Key (post_id)=(1he0jj3) already exists.  Call getNextException to see other errors in the batch.
	at org.***ql.jdbc.BatchResultHandler.handleError(BatchResultHandler.java:165)
	at org.***ql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2401)
	at org.***ql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2133)
	at org.***ql.core.v3.QueryExecutorImpl.flushIfDeadlockRisk(QueryExecutorImpl.java:1490)
	at org.***ql.core.v3.QueryExecutorImpl.sendQuery(QueryExecutorImpl.java:1515)
	at org.***ql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:559)
	at org.***ql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:896)
	at org.***ql.jdbc.PgStatement.executeBatch(PgStatement.java:919)
	at org.***ql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1677)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.savePartition(JdbcUtils.scala:751)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1(JdbcUtils.scala:902)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1$adapted(JdbcUtils.scala:901)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2(RDD.scala:1036)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2$adapted(RDD.scala:1036)
	at org.apache.spark.SparkContext.$anonfun$runJob$5(SparkContext.scala:2438)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)
	at org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:161)
	at org.apache.spark.scheduler.Task.run(Task.scala:141)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.***ql.util.PSQLException: ERROR: duplicate key value violates unique constraint "reddit_posts_pkey"
  Detail: Key (post_id)=(1he0jj3) already exists.
	at org.***ql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2712)
	at org.***ql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2400)
	... 24 more

Driver stacktrace:
	at org.apache.spark.scheduler.DAGScheduler.failJobAndIndependentStages(DAGScheduler.scala:2844)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$abortStage$2(DAGScheduler.scala:2780)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$abortStage$2$adapted(DAGScheduler.scala:2779)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at org.apache.spark.scheduler.DAGScheduler.abortStage(DAGScheduler.scala:2779)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$handleTaskSetFailed$1(DAGScheduler.scala:1242)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$handleTaskSetFailed$1$adapted(DAGScheduler.scala:1242)
	at scala.Option.foreach(Option.scala:407)
	at org.apache.spark.scheduler.DAGScheduler.handleTaskSetFailed(DAGScheduler.scala:1242)
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.doOnReceive(DAGScheduler.scala:3048)
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:2982)
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:2971)
	at org.apache.spark.util.EventLoop$$anon$1.run(EventLoop.scala:49)
	at org.apache.spark.scheduler.DAGScheduler.runJob(DAGScheduler.scala:984)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2398)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2419)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2438)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2463)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$1(RDD.scala:1036)
	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:151)
	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:112)
	at org.apache.spark.rdd.RDD.withScope(RDD.scala:407)
	at org.apache.spark.rdd.RDD.foreachPartition(RDD.scala:1034)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.saveTable(JdbcUtils.scala:901)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcRelationProvider.createRelation(JdbcRelationProvider.scala:70)
	at org.apache.spark.sql.execution.datasources.SaveIntoDataSourceCommand.run(SaveIntoDataSourceCommand.scala:48)
	at org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult$lzycompute(commands.scala:75)
	at org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult(commands.scala:73)
	at org.apache.spark.sql.execution.command.ExecutedCommandExec.executeCollect(commands.scala:84)
	at org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$1.$anonfun$applyOrElse$1(QueryExecution.scala:107)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$6(SQLExecution.scala:125)
	at org.apache.spark.sql.execution.SQLExecution$.withSQLConfPropagated(SQLExecution.scala:201)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$1(SQLExecution.scala:108)
	at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:900)
	at org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:66)
	at org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$1.applyOrElse(QueryExecution.scala:107)
	at org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$1.applyOrElse(QueryExecution.scala:98)
	at org.apache.spark.sql.catalyst.trees.TreeNode.$anonfun$transformDownWithPruning$1(TreeNode.scala:461)
	at org.apache.spark.sql.catalyst.trees.CurrentOrigin$.withOrigin(origin.scala:76)
	at org.apache.spark.sql.catalyst.trees.TreeNode.transformDownWithPruning(TreeNode.scala:461)
	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.org$apache$spark$sql$catalyst$plans$logical$AnalysisHelper$$super$transformDownWithPruning(LogicalPlan.scala:32)
	at org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.transformDownWithPruning(AnalysisHelper.scala:267)
	at org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.transformDownWithPruning$(AnalysisHelper.scala:263)
	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.transformDownWithPruning(LogicalPlan.scala:32)
	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.transformDownWithPruning(LogicalPlan.scala:32)
	at org.apache.spark.sql.catalyst.trees.TreeNode.transformDown(TreeNode.scala:437)
	at org.apache.spark.sql.execution.QueryExecution.eagerlyExecuteCommands(QueryExecution.scala:98)
	at org.apache.spark.sql.execution.QueryExecution.commandExecuted$lzycompute(QueryExecution.scala:85)
	at org.apache.spark.sql.execution.QueryExecution.commandExecuted(QueryExecution.scala:83)
	at org.apache.spark.sql.execution.QueryExecution.assertCommandExecuted(QueryExecution.scala:142)
	at org.apache.spark.sql.DataFrameWriter.runCommand(DataFrameWriter.scala:859)
	at org.apache.spark.sql.DataFrameWriter.saveToV1Source(DataFrameWriter.scala:388)
	at org.apache.spark.sql.DataFrameWriter.saveInternal(DataFrameWriter.scala:361)
	at org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:248)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)
	at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)
	at py4j.Gateway.invoke(Gateway.java:282)
	at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)
	at py4j.commands.CallCommand.execute(CallCommand.java:79)
	at py4j.ClientServerConnection.sendCommand(ClientServerConnection.java:244)
	at py4j.CallbackClient.sendCommand(CallbackClient.java:384)
	at py4j.CallbackClient.sendCommand(CallbackClient.java:356)
	at py4j.reflection.PythonProxyHandler.invoke(PythonProxyHandler.java:106)
	at jdk.proxy3/jdk.proxy3.$Proxy30.call(Unknown Source)
	at org.apache.spark.sql.execution.streaming.sources.PythonForeachBatchHelper$.$anonfun$callForeachBatch$1(ForeachBatchSink.scala:53)
	at org.apache.spark.sql.execution.streaming.sources.PythonForeachBatchHelper$.$anonfun$callForeachBatch$1$adapted(ForeachBatchSink.scala:53)
	at org.apache.spark.sql.execution.streaming.sources.ForeachBatchSink.addBatch(ForeachBatchSink.scala:34)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.$anonfun$runBatch$17(MicroBatchExecution.scala:732)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$6(SQLExecution.scala:125)
	at org.apache.spark.sql.execution.SQLExecution$.withSQLConfPropagated(SQLExecution.scala:201)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$1(SQLExecution.scala:108)
	at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:900)
	at org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:66)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.$anonfun$runBatch$16(MicroBatchExecution.scala:729)
	at org.apache.spark.sql.execution.streaming.ProgressReporter.reportTimeTaken(ProgressReporter.scala:427)
	at org.apache.spark.sql.execution.streaming.ProgressReporter.reportTimeTaken$(ProgressReporter.scala:425)
	at org.apache.spark.sql.execution.streaming.StreamExecution.reportTimeTaken(StreamExecution.scala:67)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.runBatch(MicroBatchExecution.scala:729)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.$anonfun$runActivatedStream$2(MicroBatchExecution.scala:286)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at org.apache.spark.sql.execution.streaming.ProgressReporter.reportTimeTaken(ProgressReporter.scala:427)
	at org.apache.spark.sql.execution.streaming.ProgressReporter.reportTimeTaken$(ProgressReporter.scala:425)
	at org.apache.spark.sql.execution.streaming.StreamExecution.reportTimeTaken(StreamExecution.scala:67)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.$anonfun$runActivatedStream$1(MicroBatchExecution.scala:249)
	at org.apache.spark.sql.execution.streaming.SingleBatchExecutor.execute(TriggerExecutor.scala:39)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.runActivatedStream(MicroBatchExecution.scala:239)
	at org.apache.spark.sql.execution.streaming.StreamExecution.$anonfun$runStream$1(StreamExecution.scala:311)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:900)
	at org.apache.spark.sql.execution.streaming.StreamExecution.org$apache$spark$sql$execution$streaming$StreamExecution$$runStream(StreamExecution.scala:289)
	at org.apache.spark.sql.execution.streaming.StreamExecution$$anon$1.$anonfun$run$1(StreamExecution.scala:211)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at org.apache.spark.JobArtifactSet$.withActiveJobArtifactState(JobArtifactSet.scala:94)
	at org.apache.spark.sql.execution.streaming.StreamExecution$$anon$1.run(StreamExecution.scala:211)
Caused by: java.sql.BatchUpdateException: Batch entry 50 INSERT INTO reddit_posts ("post_id","title","author","post_time","upvotes","downvotes","num_comments","score","text","first_level_comments_count","second_level_comments_count","subreddit","hour_of_day","day_of_week","created_at") VALUES ('1he0jj3','After Milan''s 2-1 win against Crvena Zvezda, coach Fonseca had said: "I don''t give a f... about the player''s name, I work hard to give my best, some in the team don''t. If I need to play players from the youth team I will do it." Today 6 youth players trained with the first team','Blodgharm','2024-12-14 10:54:56+00',23,0,2,23,'',1,1,'soccer',10,7,'2024-12-14 19:15:34.53043+00') was aborted: ERROR: duplicate key value violates unique constraint "reddit_posts_pkey"
  Detail: Key (post_id)=(1he0jj3) already exists.  Call getNextException to see other errors in the batch.
	at org.***ql.jdbc.BatchResultHandler.handleError(BatchResultHandler.java:165)
	at org.***ql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2401)
	at org.***ql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2133)
	at org.***ql.core.v3.QueryExecutorImpl.flushIfDeadlockRisk(QueryExecutorImpl.java:1490)
	at org.***ql.core.v3.QueryExecutorImpl.sendQuery(QueryExecutorImpl.java:1515)
	at org.***ql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:559)
	at org.***ql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:896)
	at org.***ql.jdbc.PgStatement.executeBatch(PgStatement.java:919)
	at org.***ql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1677)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.savePartition(JdbcUtils.scala:751)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1(JdbcUtils.scala:902)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1$adapted(JdbcUtils.scala:901)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2(RDD.scala:1036)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2$adapted(RDD.scala:1036)
	at org.apache.spark.SparkContext.$anonfun$runJob$5(SparkContext.scala:2438)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)
	at org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:161)
	at org.apache.spark.scheduler.Task.run(Task.scala:141)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.***ql.util.PSQLException: ERROR: duplicate key value violates unique constraint "reddit_posts_pkey"
  Detail: Key (post_id)=(1he0jj3) already exists.
	at org.***ql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2712)
	at org.***ql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2400)
	... 24 more
[2024-12-14T19:15:37.061+0000] {docker.py:413} INFO - 24/12/14 19:15:37 ERROR MicroBatchExecution: Query [id = f66ffad1-7143-480f-83e7-41584b2f86df, runId = e4f10132-fdfd-4eb6-8ef6-5a2c2ba04a2e] terminated with error
py4j.Py4JException: An exception was raised by the Python Proxy. Return Message: Traceback (most recent call last):
  File "/opt/bitnami/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/clientserver.py", line 617, in _call_proxy
    return_value = getattr(self.pool[obj_id], method)(*params)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/bitnami/spark/python/lib/pyspark.zip/pyspark/sql/utils.py", line 120, in call
    raise e
  File "/opt/bitnami/spark/python/lib/pyspark.zip/pyspark/sql/utils.py", line 117, in call
    self.func(DataFrame(jdf, wrapped_session_jdf), batch_id)
  File "/opt/bitnami/spark/spark_streaming.py", line 327, in process_batch
    raise e
  File "/opt/bitnami/spark/spark_streaming.py", line 287, in process_batch
    transformer.save_to_***(posts_df, "reddit_posts")
  File "/opt/bitnami/spark/transformation.py", line 458, in save_to_***
    raise e
  File "/opt/bitnami/spark/transformation.py", line 453, in save_to_***
    .save()
     ^^^^^^
  File "/opt/bitnami/spark/python/lib/pyspark.zip/pyspark/sql/readwriter.py", line 1461, in save
    self._jwrite.save()
  File "/opt/bitnami/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/java_gateway.py", line 1322, in __call__
    return_value = get_return_value(
                   ^^^^^^^^^^^^^^^^^
  File "/opt/bitnami/spark/python/lib/pyspark.zip/pyspark/errors/exceptions/captured.py", line 179, in deco
    return f(*a, **kw)
           ^^^^^^^^^^^
  File "/opt/bitnami/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/protocol.py", line 326, in get_return_value
    raise Py4JJavaError(
py4j.protocol.Py4JJavaError: An error occurred while calling o102.save.
: org.apache.spark.SparkException: Job aborted due to stage failure: Task 0 in stage 10.0 failed 1 times, most recent failure: Lost task 0.0 in stage 10.0 (TID 10) (localhost executor driver): java.sql.BatchUpdateException: Batch entry 50 INSERT INTO reddit_posts ("post_id","title","author","post_time","upvotes","downvotes","num_comments","score","text","first_level_comments_count","second_level_comments_count","subreddit","hour_of_day","day_of_week","created_at") VALUES ('1he0jj3','After Milan''s 2-1 win against Crvena Zvezda, coach Fonseca had said: "I don''t give a f... about the player''s name, I work hard to give my best, some in the team don''t. If I need to play players from the youth team I will do it." Today 6 youth players trained with the first team','Blodgharm','2024-12-14 10:54:56+00',23,0,2,23,'',1,1,'soccer',10,7,'2024-12-14 19:15:34.53043+00') was aborted: ERROR: duplicate key value violates unique constraint "reddit_posts_pkey"
  Detail: Key (post_id)=(1he0jj3) already exists.  Call getNextException to see other errors in the batch.
	at org.***ql.jdbc.BatchResultHandler.handleError(BatchResultHandler.java:165)
	at org.***ql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2401)
	at org.***ql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2133)
	at org.***ql.core.v3.QueryExecutorImpl.flushIfDeadlockRisk(QueryExecutorImpl.java:1490)
	at org.***ql.core.v3.QueryExecutorImpl.sendQuery(QueryExecutorImpl.java:1515)
	at org.***ql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:559)
	at org.***ql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:896)
	at org.***ql.jdbc.PgStatement.executeBatch(PgStatement.java:919)
	at org.***ql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1677)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.savePartition(JdbcUtils.scala:751)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1(JdbcUtils.scala:902)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1$adapted(JdbcUtils.scala:901)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2(RDD.scala:1036)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2$adapted(RDD.scala:1036)
	at org.apache.spark.SparkContext.$anonfun$runJob$5(SparkContext.scala:2438)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)
	at org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:161)
	at org.apache.spark.scheduler.Task.run(Task.scala:141)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.***ql.util.PSQLException: ERROR: duplicate key value violates unique constraint "reddit_posts_pkey"
  Detail: Key (post_id)=(1he0jj3) already exists.
	at org.***ql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2712)
	at org.***ql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2400)
	... 24 more

Driver stacktrace:
	at org.apache.spark.scheduler.DAGScheduler.failJobAndIndependentStages(DAGScheduler.scala:2844)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$abortStage$2(DAGScheduler.scala:2780)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$abortStage$2$adapted(DAGScheduler.scala:2779)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at org.apache.spark.scheduler.DAGScheduler.abortStage(DAGScheduler.scala:2779)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$handleTaskSetFailed$1(DAGScheduler.scala:1242)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$handleTaskSetFailed$1$adapted(DAGScheduler.scala:1242)
	at scala.Option.foreach(Option.scala:407)
	at org.apache.spark.scheduler.DAGScheduler.handleTaskSetFailed(DAGScheduler.scala:1242)
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.doOnReceive(DAGScheduler.scala:3048)
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:2982)
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:2971)
	at org.apache.spark.util.EventLoop$$anon$1.run(EventLoop.scala:49)
	at org.apache.spark.scheduler.DAGScheduler.runJob(DAGScheduler.scala:984)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2398)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2419)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2438)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2463)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$1(RDD.scala:1036)
	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:151)
	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:112)
	at org.apache.spark.rdd.RDD.withScope(RDD.scala:407)
	at org.apache.spark.rdd.RDD.foreachPartition(RDD.scala:1034)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.saveTable(JdbcUtils.scala:901)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcRelationProvider.createRelation(JdbcRelationProvider.scala:70)
	at org.apache.spark.sql.execution.datasources.SaveIntoDataSourceCommand.run(SaveIntoDataSourceCommand.scala:48)
	at org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult$lzycompute(commands.scala:75)
	at org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult(commands.scala:73)
	at org.apache.spark.sql.execution.command.ExecutedCommandExec.executeCollect(commands.scala:84)
	at org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$1.$anonfun$applyOrElse$1(QueryExecution.scala:107)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$6(SQLExecution.scala:125)
	at org.apache.spark.sql.execution.SQLExecution$.withSQLConfPropagated(SQLExecution.scala:201)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$1(SQLExecution.scala:108)
	at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:900)
	at org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:66)
	at org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$1.applyOrElse(QueryExecution.scala:107)
	at org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$1.applyOrElse(QueryExecution.scala:98)
	at org.apache.spark.sql.catalyst.trees.TreeNode.$anonfun$transformDownWithPruning$1(TreeNode.scala:461)
	at org.apache.spark.sql.catalyst.trees.CurrentOrigin$.withOrigin(origin.scala:76)
	at org.apache.spark.sql.catalyst.trees.TreeNode.transformDownWithPruning(TreeNode.scala:461)
	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.org$apache$spark$sql$catalyst$plans$logical$AnalysisHelper$$super$transformDownWithPruning(LogicalPlan.scala:32)
	at org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.transformDownWithPruning(AnalysisHelper.scala:267)
	at org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.transformDownWithPruning$(AnalysisHelper.scala:263)
	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.transformDownWithPruning(LogicalPlan.scala:32)
	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.transformDownWithPruning(LogicalPlan.scala:32)
	at org.apache.spark.sql.catalyst.trees.TreeNode.transformDown(TreeNode.scala:437)
	at org.apache.spark.sql.execution.QueryExecution.eagerlyExecuteCommands(QueryExecution.scala:98)
	at org.apache.spark.sql.execution.QueryExecution.commandExecuted$lzycompute(QueryExecution.scala:85)
	at org.apache.spark.sql.execution.QueryExecution.commandExecuted(QueryExecution.scala:83)
	at org.apache.spark.sql.execution.QueryExecution.assertCommandExecuted(QueryExecution.scala:142)
	at org.apache.spark.sql.DataFrameWriter.runCommand(DataFrameWriter.scala:859)
	at org.apache.spark.sql.DataFrameWriter.saveToV1Source(DataFrameWriter.scala:388)
	at org.apache.spark.sql.DataFrameWriter.saveInternal(DataFrameWriter.scala:361)
	at org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:248)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)
	at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)
	at py4j.Gateway.invoke(Gateway.java:282)
	at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)
	at py4j.commands.CallCommand.execute(CallCommand.java:79)
	at py4j.ClientServerConnection.sendCommand(ClientServerConnection.java:244)
	at py4j.CallbackClient.sendCommand(CallbackClient.java:384)
	at py4j.CallbackClient.sendCommand(CallbackClient.java:356)
	at py4j.reflection.PythonProxyHandler.invoke(PythonProxyHandler.java:106)
	at jdk.proxy3/jdk.proxy3.$Proxy30.call(Unknown Source)
	at org.apache.spark.sql.execution.streaming.sources.PythonForeachBatchHelper$.$anonfun$callForeachBatch$1(ForeachBatchSink.scala:53)
	at org.apache.spark.sql.execution.streaming.sources.PythonForeachBatchHelper$.$anonfun$callForeachBatch$1$adapted(ForeachBatchSink.scala:53)
	at org.apache.spark.sql.execution.streaming.sources.ForeachBatchSink.addBatch(ForeachBatchSink.scala:34)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.$anonfun$runBatch$17(MicroBatchExecution.scala:732)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$6(SQLExecution.scala:125)
	at org.apache.spark.sql.execution.SQLExecution$.withSQLConfPropagated(SQLExecution.scala:201)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$1(SQLExecution.scala:108)
	at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:900)
	at org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:66)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.$anonfun$runBatch$16(MicroBatchExecution.scala:729)
	at org.apache.spark.sql.execution.streaming.ProgressReporter.reportTimeTaken(ProgressReporter.scala:427)
	at org.apache.spark.sql.execution.streaming.ProgressReporter.reportTimeTaken$(ProgressReporter.scala:425)
	at org.apache.spark.sql.execution.streaming.StreamExecution.reportTimeTaken(StreamExecution.scala:67)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.runBatch(MicroBatchExecution.scala:729)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.$anonfun$runActivatedStream$2(MicroBatchExecution.scala:286)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at org.apache.spark.sql.execution.streaming.ProgressReporter.reportTimeTaken(ProgressReporter.scala:427)
	at org.apache.spark.sql.execution.streaming.ProgressReporter.reportTimeTaken$(ProgressReporter.scala:425)
	at org.apache.spark.sql.execution.streaming.StreamExecution.reportTimeTaken(StreamExecution.scala:67)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.$anonfun$runActivatedStream$1(MicroBatchExecution.scala:249)
	at org.apache.spark.sql.execution.streaming.SingleBatchExecutor.execute(TriggerExecutor.scala:39)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.runActivatedStream(MicroBatchExecution.scala:239)
	at org.apache.spark.sql.execution.streaming.StreamExecution.$anonfun$runStream$1(StreamExecution.scala:311)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:900)
	at org.apache.spark.sql.execution.streaming.StreamExecution.org$apache$spark$sql$execution$streaming$StreamExecution$$runStream(StreamExecution.scala:289)
	at org.apache.spark.sql.execution.streaming.StreamExecution$$anon$1.$anonfun$run$1(StreamExecution.scala:211)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at org.apache.spark.JobArtifactSet$.withActiveJobArtifactState(JobArtifactSet.scala:94)
	at org.apache.spark.sql.execution.streaming.StreamExecution$$anon$1.run(StreamExecution.scala:211)
Caused by: java.sql.BatchUpdateException: Batch entry 50 INSERT INTO reddit_posts ("post_id","title","author","post_time","upvotes","downvotes","num_comments","score","text","first_level_comments_count","second_level_comments_count","subreddit","hour_of_day","day_of_week","created_at") VALUES ('1he0jj3','After Milan''s 2-1 win against Crvena Zvezda, coach Fonseca had said: "I don''t give a f... about the player''s name, I work hard to give my best, some in the team don''t. If I need to play players from the youth team I will do it." Today 6 youth players trained with the first team','Blodgharm','2024-12-14 10:54:56+00',23,0,2,23,'',1,1,'soccer',10,7,'2024-12-14 19:15:34.53043+00') was aborted: ERROR: duplicate key value violates unique constraint "reddit_posts_pkey"
  Detail: Key (post_id)=(1he0jj3) already exists.  Call getNextException to see other errors in the batch.
	at org.***ql.jdbc.BatchResultHandler.handleError(BatchResultHandler.java:165)
	at org.***ql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2401)
	at org.***ql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2133)
	at org.***ql.core.v3.QueryExecutorImpl.flushIfDeadlockRisk(QueryExecutorImpl.java:1490)
	at org.***ql.core.v3.QueryExecutorImpl.sendQuery(QueryExecutorImpl.java:1515)
	at org.***ql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:559)
	at org.***ql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:896)
	at org.***ql.jdbc.PgStatement.executeBatch(PgStatement.java:919)
	at org.***ql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1677)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.savePartition(JdbcUtils.scala:751)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1(JdbcUtils.scala:902)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1$adapted(JdbcUtils.scala:901)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2(RDD.scala:1036)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2$adapted(RDD.scala:1036)
	at org.apache.spark.SparkContext.$anonfun$runJob$5(SparkContext.scala:2438)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)
	at org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:161)
	at org.apache.spark.scheduler.Task.run(Task.scala:141)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.***ql.util.PSQLException: ERROR: duplicate key value violates unique constraint "reddit_posts_pkey"
  Detail: Key (post_id)=(1he0jj3) already exists.
	at org.***ql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2712)
	at org.***ql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2400)
	... 24 more


	at py4j.Protocol.getReturnValue(Protocol.java:476)
	at py4j.reflection.PythonProxyHandler.invoke(PythonProxyHandler.java:108)
	at jdk.proxy3/jdk.proxy3.$Proxy30.call(Unknown Source)
	at org.apache.spark.sql.execution.streaming.sources.PythonForeachBatchHelper$.$anonfun$callForeachBatch$1(ForeachBatchSink.scala:53)
	at org.apache.spark.sql.execution.streaming.sources.PythonForeachBatchHelper$.$anonfun$callForeachBatch$1$adapted(ForeachBatchSink.scala:53)
	at org.apache.spark.sql.execution.streaming.sources.ForeachBatchSink.addBatch(ForeachBatchSink.scala:34)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.$anonfun$runBatch$17(MicroBatchExecution.scala:732)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$6(SQLExecution.scala:125)
	at org.apache.spark.sql.execution.SQLExecution$.withSQLConfPropagated(SQLExecution.scala:201)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$1(SQLExecution.scala:108)
	at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:900)
	at org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:66)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.$anonfun$runBatch$16(MicroBatchExecution.scala:729)
	at org.apache.spark.sql.execution.streaming.ProgressReporter.reportTimeTaken(ProgressReporter.scala:427)
	at org.apache.spark.sql.execution.streaming.ProgressReporter.reportTimeTaken$(ProgressReporter.scala:425)
	at org.apache.spark.sql.execution.streaming.StreamExecution.reportTimeTaken(StreamExecution.scala:67)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.runBatch(MicroBatchExecution.scala:729)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.$anonfun$runActivatedStream$2(MicroBatchExecution.scala:286)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at org.apache.spark.sql.execution.streaming.ProgressReporter.reportTimeTaken(ProgressReporter.scala:427)
	at org.apache.spark.sql.execution.streaming.ProgressReporter.reportTimeTaken$(ProgressReporter.scala:425)
	at org.apache.spark.sql.execution.streaming.StreamExecution.reportTimeTaken(StreamExecution.scala:67)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.$anonfun$runActivatedStream$1(MicroBatchExecution.scala:249)
	at org.apache.spark.sql.execution.streaming.SingleBatchExecutor.execute(TriggerExecutor.scala:39)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.runActivatedStream(MicroBatchExecution.scala:239)
	at org.apache.spark.sql.execution.streaming.StreamExecution.$anonfun$runStream$1(StreamExecution.scala:311)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:900)
	at org.apache.spark.sql.execution.streaming.StreamExecution.org$apache$spark$sql$execution$streaming$StreamExecution$$runStream(StreamExecution.scala:289)
	at org.apache.spark.sql.execution.streaming.StreamExecution$$anon$1.$anonfun$run$1(StreamExecution.scala:211)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at org.apache.spark.JobArtifactSet$.withActiveJobArtifactState(JobArtifactSet.scala:94)
	at org.apache.spark.sql.execution.streaming.StreamExecution$$anon$1.run(StreamExecution.scala:211)
[2024-12-14T19:15:37.064+0000] {docker.py:413} INFO - 24/12/14 19:15:37 INFO AppInfoParser: App info kafka.admin.client for adminclient-1 unregistered
[2024-12-14T19:15:37.070+0000] {docker.py:413} INFO - 24/12/14 19:15:37 INFO Metrics: Metrics scheduler closed
24/12/14 19:15:37 INFO Metrics: Closing reporter org.apache.kafka.common.metrics.JmxReporter
24/12/14 19:15:37 INFO Metrics: Metrics reporters closed
[2024-12-14T19:15:37.077+0000] {docker.py:413} INFO - 24/12/14 19:15:37 INFO MicroBatchExecution: Async log purge executor pool for query [id = f66ffad1-7143-480f-83e7-41584b2f86df, runId = e4f10132-fdfd-4eb6-8ef6-5a2c2ba04a2e] has been shutdown
[2024-12-14T19:15:37.408+0000] {docker.py:413} INFO - 2024-12-14 19:15:37,386 [ERROR] Error in stream processing: [STREAM_FAILED] Query [id = f66ffad1-7143-480f-83e7-41584b2f86df, runId = e4f10132-fdfd-4eb6-8ef6-5a2c2ba04a2e] terminated with exception: An exception was raised by the Python Proxy. Return Message: Traceback (most recent call last):
  File "/opt/bitnami/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/clientserver.py", line 617, in _call_proxy
    return_value = getattr(self.pool[obj_id], method)(*params)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/bitnami/spark/python/lib/pyspark.zip/pyspark/sql/utils.py", line 120, in call
    raise e
  File "/opt/bitnami/spark/python/lib/pyspark.zip/pyspark/sql/utils.py", line 117, in call
    self.func(DataFrame(jdf, wrapped_session_jdf), batch_id)
  File "/opt/bitnami/spark/spark_streaming.py", line 327, in process_batch
    raise e
  File "/opt/bitnami/spark/spark_streaming.py", line 287, in process_batch
    transformer.save_to_***(posts_df, "reddit_posts")
  File "/opt/bitnami/spark/transformation.py", line 458, in save_to_***
    raise e
  File "/opt/bitnami/spark/transformation.py", line 453, in save_to_***
    .save()
     ^^^^^^
  File "/opt/bitnami/spark/python/lib/pyspark.zip/pyspark/sql/readwriter.py", line 1461, in save
    self._jwrite.save()
  File "/opt/bitnami/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/java_gateway.py", line 1322, in __call__
    return_value = get_return_value(
                   ^^^^^^^^^^^^^^^^^
  File "/opt/bitnami/spark/python/lib/pyspark.zip/pyspark/errors/exceptions/captured.py", line 179, in deco
    return f(*a, **kw)
           ^^^^^^^^^^^
  File "/opt/bitnami/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/protocol.py", line 326, in get_return_value
    raise Py4JJavaError(
py4j.protocol.Py4JJavaError: An error occurred while calling o102.save.
: org.apache.spark.SparkException: Job aborted due to stage failure: Task 0 in stage 10.0 failed 1 times, most recent failure: Lost task 0.0 in stage 10.0 (TID 10) (localhost executor driver): java.sql.BatchUpdateException: Batch entry 50 INSERT INTO reddit_posts ("post_id","title","author","post_time","upvotes","downvotes","num_comments","score","text","first_level_comments_count","second_level_comments_count","subreddit","hour_of_day","day_of_week","created_at") VALUES ('1he0jj3','After Milan''s 2-1 win against Crvena Zvezda, coach Fonseca had said: "I don''t give a f... about the player''s name, I work hard to give my best, some in the team don''t. If I need to play players from the youth team I will do it." Today 6 youth players trained with the first team','Blodgharm','2024-12-14 10:54:56+00',23,0,2,23,'',1,1,'soccer',10,7,'2024-12-14 19:15:34.53043+00') was aborted: ERROR: duplicate key value violates unique constraint "reddit_posts_pkey"
  Detail: Key (post_id)=(1he0jj3) already exists.  Call getNextException to see other errors in the batch.
	at org.***ql.jdbc.BatchResultHandler.handleError(BatchResultHandler.java:165)
	at org.***ql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2401)
	at org.***ql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2133)
	at org.***ql.core.v3.QueryExecutorImpl.flushIfDeadlockRisk(QueryExecutorImpl.java:1490)
	at org.***ql.core.v3.QueryExecutorImpl.sendQuery(QueryExecutorImpl.java:1515)
	at org.***ql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:559)
	at org.***ql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:896)
	at org.***ql.jdbc.PgStatement.executeBatch(PgStatement.java:919)
	at org.***ql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1677)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.savePartition(JdbcUtils.scala:751)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1(JdbcUtils.scala:902)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1$adapted(JdbcUtils.scala:901)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2(RDD.scala:1036)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2$adapted(RDD.scala:1036)
	at org.apache.spark.SparkContext.$anonfun$runJob$5(SparkContext.scala:2438)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)
	at org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:161)
	at org.apache.spark.scheduler.Task.run(Task.scala:141)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.***ql.util.PSQLException: ERROR: duplicate key value violates unique constraint "reddit_posts_pkey"
  Detail: Key (post_id)=(1he0jj3) already exists.
	at org.***ql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2712)
	at org.***ql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2400)
	... 24 more

Driver stacktrace:
	at org.apache.spark.scheduler.DAGScheduler.failJobAndIndependentStages(DAGScheduler.scala:2844)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$abortStage$2(DAGScheduler.scala:2780)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$abortStage$2$adapted(DAGScheduler.scala:2779)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at org.apache.spark.scheduler.DAGScheduler.abortStage(DAGScheduler.scala:2779)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$handleTaskSetFailed$1(DAGScheduler.scala:1242)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$handleTaskSetFailed$1$adapted(DAGScheduler.scala:1242)
	at scala.Option.foreach(Option.scala:407)
	at org.apache.spark.scheduler.DAGScheduler.handleTaskSetFailed(DAGScheduler.scala:1242)
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.doOnReceive(DAGScheduler.scala:3048)
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:2982)
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:2971)
	at org.apache.spark.util.EventLoop$$anon$1.run(EventLoop.scala:49)
	at org.apache.spark.scheduler.DAGScheduler.runJob(DAGScheduler.scala:984)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2398)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2419)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2438)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2463)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$1(RDD.scala:1036)
	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:151)
	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:112)
	at org.apache.spark.rdd.RDD.withScope(RDD.scala:407)
	at org.apache.spark.rdd.RDD.foreachPartition(RDD.scala:1034)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.saveTable(JdbcUtils.scala:901)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcRelationProvider.createRelation(JdbcRelationProvider.scala:70)
	at org.apache.spark.sql.execution.datasources.SaveIntoDataSourceCommand.run(SaveIntoDataSourceCommand.scala:48)
	at org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult$lzycompute(commands.scala:75)
	at org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult(commands.scala:73)
	at org.apache.spark.sql.execution.command.ExecutedCommandExec.executeCollect(commands.scala:84)
	at org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$1.$anonfun$applyOrElse$1(QueryExecution.scala:107)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$6(SQLExecution.scala:125)
	at org.apache.spark.sql.execution.SQLExecution$.withSQLConfPropagated(SQLExecution.scala:201)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$1(SQLExecution.scala:108)
	at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:900)
	at org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:66)
	at org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$1.applyOrElse(QueryExecution.scala:107)
	at org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$1.applyOrElse(QueryExecution.scala:98)
	at org.apache.spark.sql.catalyst.trees.TreeNode.$anonfun$transformDownWithPruning$1(TreeNode.scala:461)
	at org.apache.spark.sql.catalyst.trees.CurrentOrigin$.withOrigin(origin.scala:76)
	at org.apache.spark.sql.catalyst.trees.TreeNode.transformDownWithPruning(TreeNode.scala:461)
	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.org$apache$spark$sql$catalyst$plans$logical$AnalysisHelper$$super$transformDownWithPruning(LogicalPlan.scala:32)
	at org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.transformDownWithPruning(AnalysisHelper.scala:267)
	at org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.transformDownWithPruning$(AnalysisHelper.scala:263)
	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.transformDownWithPruning(LogicalPlan.scala:32)
	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.transformDownWithPruning(LogicalPlan.scala:32)
	at org.apache.spark.sql.catalyst.trees.TreeNode.transformDown(TreeNode.scala:437)
	at org.apache.spark.sql.execution.QueryExecution.eagerlyExecuteCommands(QueryExecution.scala:98)
	at org.apache.spark.sql.execution.QueryExecution.commandExecuted$lzycompute(QueryExecution.scala:85)
	at org.apache.spark.sql.execution.QueryExecution.commandExecuted(QueryExecution.scala:83)
	at org.apache.spark.sql.execution.QueryExecution.assertCommandExecuted(QueryExecution.scala:142)
	at org.apache.spark.sql.DataFrameWriter.runCommand(DataFrameWriter.scala:859)
	at org.apache.spark.sql.DataFrameWriter.saveToV1Source(DataFrameWriter.scala:388)
	at org.apache.spark.sql.DataFrameWriter.saveInternal(DataFrameWriter.scala:361)
	at org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:248)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)
	at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)
	at py4j.Gateway.invoke(Gateway.java:282)
	at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)
	at py4j.commands.CallCommand.execute(CallCommand.java:79)
	at py4j.ClientServerConnection.sendCommand(ClientServerConnection.java:244)
	at py4j.CallbackClient.sendCommand(CallbackClient.java:384)
	at py4j.CallbackClient.sendCommand(CallbackClient.java:356)
	at py4j.reflection.PythonProxyHandler.invoke(PythonProxyHandler.java:106)
	at jdk.proxy3/jdk.proxy3.$Proxy30.call(Unknown Source)
	at org.apache.spark.sql.execution.streaming.sources.PythonForeachBatchHelper$.$anonfun$callForeachBatch$1(ForeachBatchSink.scala:53)
	at org.apache.spark.sql.execution.streaming.sources.PythonForeachBatchHelper$.$anonfun$callForeachBatch$1$adapted(ForeachBatchSink.scala:53)
	at org.apache.spark.sql.execution.streaming.sources.ForeachBatchSink.addBatch(ForeachBatchSink.scala:34)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.$anonfun$runBatch$17(MicroBatchExecution.scala:732)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$6(SQLExecution.scala:125)
	at org.apache.spark.sql.execution.SQLExecution$.withSQLConfPropagated(SQLExecution.scala:201)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$1(SQLExecution.scala:108)
	at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:900)
	at org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:66)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.$anonfun$runBatch$16(MicroBatchExecution.scala:729)
	at org.apache.spark.sql.execution.streaming.ProgressReporter.reportTimeTaken(ProgressReporter.scala:427)
	at org.apache.spark.sql.execution.streaming.ProgressReporter.reportTimeTaken$(ProgressReporter.scala:425)
	at org.apache.spark.sql.execution.streaming.StreamExecution.reportTimeTaken(StreamExecution.scala:67)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.runBatch(MicroBatchExecution.scala:729)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.$anonfun$runActivatedStream$2(MicroBatchExecution.scala:286)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at org.apache.spark.sql.execution.streaming.ProgressReporter.reportTimeTaken(ProgressReporter.scala:427)
	at org.apache.spark.sql.execution.streaming.ProgressReporter.reportTimeTaken$(ProgressReporter.scala:425)
	at org.apache.spark.sql.execution.streaming.StreamExecution.reportTimeTaken(StreamExecution.scala:67)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.$anonfun$runActivatedStream$1(MicroBatchExecution.scala:249)
	at org.apache.spark.sql.execution.streaming.SingleBatchExecutor.execute(TriggerExecutor.scala:39)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.runActivatedStream(MicroBatchExecution.scala:239)
	at org.apache.spark.sql.execution.streaming.StreamExecution.$anonfun$runStream$1(StreamExecution.scala:311)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:900)
	at org.apache.spark.sql.execution.streaming.StreamExecution.org$apache$spark$sql$execution$streaming$StreamExecution$$runStream(StreamExecution.scala:289)
	at org.apache.spark.sql.execution.streaming.StreamExecution$$anon$1.$anonfun$run$1(StreamExecution.scala:211)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at org.apache.spark.JobArtifactSet$.withActiveJobArtifactState(JobArtifactSet.scala:94)
	at org.apache.spark.sql.execution.streaming.StreamExecution$$anon$1.run(StreamExecution.scala:211)
Caused by: java.sql.BatchUpdateException: Batch entry 50 INSERT INTO reddit_posts ("post_id","title","author","post_time","upvotes","downvotes","num_comments","score","text","first_level_comments_count","second_level_comments_count","subreddit","hour_of_day","day_of_week","created_at") VALUES ('1he0jj3','After Milan''s 2-1 win against Crvena Zvezda, coach Fonseca had said: "I don''t give a f... about the player''s name, I work hard to give my best, some in the team don''t. If I need to play players from the youth team I will do it." Today 6 youth players trained with the first team','Blodgharm','2024-12-14 10:54:56+00',23,0,2,23,'',1,1,'soccer',10,7,'2024-12-14 19:15:34.53043+00') was aborted: ERROR: duplicate key value violates unique constraint "reddit_posts_pkey"
  Detail: Key (post_id)=(1he0jj3) already exists.  Call getNextException to see other errors in the batch.
	at org.***ql.jdbc.BatchResultHandler.handleError(BatchResultHandler.java:165)
	at org.***ql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2401)
	at org.***ql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2133)
	at org.***ql.core.v3.QueryExecutorImpl.flushIfDeadlockRisk(QueryExecutorImpl.java:1490)
	at org.***ql.core.v3.QueryExecutorImpl.sendQuery(QueryExecutorImpl.java:1515)
	at org.***ql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:559)
	at org.***ql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:896)
	at org.***ql.jdbc.PgStatement.executeBatch(PgStatement.java:919)
	at org.***ql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1677)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.savePartition(JdbcUtils.scala:751)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1(JdbcUtils.scala:902)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1$adapted(JdbcUtils.scala:901)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2(RDD.scala:1036)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2$adapted(RDD.scala:1036)
	at org.apache.spark.SparkContext.$anonfun$runJob$5(SparkContext.scala:2438)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)
	at org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:161)
	at org.apache.spark.scheduler.Task.run(Task.scala:141)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.***ql.util.PSQLException: ERROR: duplicate key value violates unique constraint "reddit_posts_pkey"
  Detail: Key (post_id)=(1he0jj3) already exists.
	at org.***ql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2712)
	at org.***ql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2400)
	... 24 more

Traceback (most recent call last):
  File "/opt/bitnami/spark/spark_streaming.py", line 340, in process_stream
    query.awaitTermination()
  File "/opt/bitnami/spark/python/lib/pyspark.zip/pyspark/sql/streaming/query.py", line 221, in awaitTermination
    return self._jsq.awaitTermination()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/bitnami/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/java_gateway.py", line 1322, in __call__
    return_value = get_return_value(
                   ^^^^^^^^^^^^^^^^^
  File "/opt/bitnami/spark/python/lib/pyspark.zip/pyspark/errors/exceptions/captured.py", line 185, in deco
    raise converted from None
pyspark.errors.exceptions.captured.StreamingQueryException: [STREAM_FAILED] Query [id = f66ffad1-7143-480f-83e7-41584b2f86df, runId = e4f10132-fdfd-4eb6-8ef6-5a2c2ba04a2e] terminated with exception: An exception was raised by the Python Proxy. Return Message: Traceback (most recent call last):
  File "/opt/bitnami/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/clientserver.py", line 617, in _call_proxy
    return_value = getattr(self.pool[obj_id], method)(*params)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/bitnami/spark/python/lib/pyspark.zip/pyspark/sql/utils.py", line 120, in call
    raise e
  File "/opt/bitnami/spark/python/lib/pyspark.zip/pyspark/sql/utils.py", line 117, in call
    self.func(DataFrame(jdf, wrapped_session_jdf), batch_id)
  File "/opt/bitnami/spark/spark_streaming.py", line 327, in process_batch
    raise e
  File "/opt/bitnami/spark/spark_streaming.py", line 287, in process_batch
    transformer.save_to_***(posts_df, "reddit_posts")
  File "/opt/bitnami/spark/transformation.py", line 458, in save_to_***
    raise e
  File "/opt/bitnami/spark/transformation.py", line 453, in save_to_***
    .save()
     ^^^^^^
  File "/opt/bitnami/spark/python/lib/pyspark.zip/pyspark/sql/readwriter.py", line 1461, in save
    self._jwrite.save()
  File "/opt/bitnami/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/java_gateway.py", line 1322, in __call__
    return_value = get_return_value(
                   ^^^^^^^^^^^^^^^^^
  File "/opt/bitnami/spark/python/lib/pyspark.zip/pyspark/errors/exceptions/captured.py", line 179, in deco
    return f(*a, **kw)
           ^^^^^^^^^^^
  File "/opt/bitnami/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/protocol.py", line 326, in get_return_value
    raise Py4JJavaError(
py4j.protocol.Py4JJavaError: An error occurred while calling o102.save.
: org.apache.spark.SparkException: Job aborted due to stage failure: Task 0 in stage 10.0 failed 1 times, most recent failure: Lost task 0.0 in stage 10.0 (TID 10) (localhost executor driver): java.sql.BatchUpdateException: Batch entry 50 INSERT INTO reddit_posts ("post_id","title","author","post_time","upvotes","downvotes","num_comments","score","text","first_level_comments_count","second_level_comments_count","subreddit","hour_of_day","day_of_week","created_at") VALUES ('1he0jj3','After Milan''s 2-1 win against Crvena Zvezda, coach Fonseca had said: "I don''t give a f... about the player''s name, I work hard to give my best, some in the team don''t. If I need to play players from the youth team I will do it." Today 6 youth players trained with the first team','Blodgharm','2024-12-14 10:54:56+00',23,0,2,23,'',1,1,'soccer',10,7,'2024-12-14 19:15:34.53043+00') was aborted: ERROR: duplicate key value violates unique constraint "reddit_posts_pkey"
  Detail: Key (post_id)=(1he0jj3) already exists.  Call getNextException to see other errors in the batch.
	at org.***ql.jdbc.BatchResultHandler.handleError(BatchResultHandler.java:165)
	at org.***ql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2401)
	at org.***ql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2133)
	at org.***ql.core.v3.QueryExecutorImpl.flushIfDeadlockRisk(QueryExecutorImpl.java:1490)
	at org.***ql.core.v3.QueryExecutorImpl.sendQuery(QueryExecutorImpl.java:1515)
	at org.***ql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:559)
	at org.***ql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:896)
	at org.***ql.jdbc.PgStatement.executeBatch(PgStatement.java:919)
	at org.***ql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1677)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.savePartition(JdbcUtils.scala:751)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1(JdbcUtils.scala:902)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1$adapted(JdbcUtils.scala:901)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2(RDD.scala:1036)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2$adapted(RDD.scala:1036)
	at org.apache.spark.SparkContext.$anonfun$runJob$5(SparkContext.scala:2438)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)
	at org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:161)
	at org.apache.spark.scheduler.Task.run(Task.scala:141)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.***ql.util.PSQLException: ERROR: duplicate key value violates unique constraint "reddit_posts_pkey"
  Detail: Key (post_id)=(1he0jj3) already exists.
	at org.***ql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2712)
	at org.***ql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2400)
	... 24 more

Driver stacktrace:
	at org.apache.spark.scheduler.DAGScheduler.failJobAndIndependentStages(DAGScheduler.scala:2844)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$abortStage$2(DAGScheduler.scala:2780)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$abortStage$2$adapted(DAGScheduler.scala:2779)
	at scala.collection
[2024-12-14T19:15:37.412+0000] {docker.py:413} INFO - .mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at org.apache.spark.scheduler.DAGScheduler.abortStage(DAGScheduler.scala:2779)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$handleTaskSetFailed$1(DAGScheduler.scala:1242)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$handleTaskSetFailed$1$adapted(DAGScheduler.scala:1242)
	at scala.Option.foreach(Option.scala:407)
	at org.apache.spark.scheduler.DAGScheduler.handleTaskSetFailed(DAGScheduler.scala:1242)
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.doOnReceive(DAGScheduler.scala:3048)
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:2982)
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:2971)
	at org.apache.spark.util.EventLoop$$anon$1.run(EventLoop.scala:49)
	at org.apache.spark.scheduler.DAGScheduler.runJob(DAGScheduler.scala:984)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2398)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2419)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2438)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2463)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$1(RDD.scala:1036)
	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:151)
	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:112)
	at org.apache.spark.rdd.RDD.withScope(RDD.scala:407)
	at org.apache.spark.rdd.RDD.foreachPartition(RDD.scala:1034)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.saveTable(JdbcUtils.scala:901)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcRelationProvider.createRelation(JdbcRelationProvider.scala:70)
	at org.apache.spark.sql.execution.datasources.SaveIntoDataSourceCommand.run(SaveIntoDataSourceCommand.scala:48)
	at org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult$lzycompute(commands.scala:75)
	at org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult(commands.scala:73)
	at org.apache.spark.sql.execution.command.ExecutedCommandExec.executeCollect(commands.scala:84)
	at org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$1.$anonfun$applyOrElse$1(QueryExecution.scala:107)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$6(SQLExecution.scala:125)
	at org.apache.spark.sql.execution.SQLExecution$.withSQLConfPropagated(SQLExecution.scala:201)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$1(SQLExecution.scala:108)
	at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:900)
	at org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:66)
	at org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$1.applyOrElse(QueryExecution.scala:107)
	at org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$1.applyOrElse(QueryExecution.scala:98)
	at org.apache.spark.sql.catalyst.trees.TreeNode.$anonfun$transformDownWithPruning$1(TreeNode.scala:461)
	at org.apache.spark.sql.catalyst.trees.CurrentOrigin$.withOrigin(origin.scala:76)
	at org.apache.spark.sql.catalyst.trees.TreeNode.transformDownWithPruning(TreeNode.scala:461)
	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.org$apache$spark$sql$catalyst$plans$logical$AnalysisHelper$$super$transformDownWithPruning(LogicalPlan.scala:32)
	at org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.transformDownWithPruning(AnalysisHelper.scala:267)
	at org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.transformDownWithPruning$(AnalysisHelper.scala:263)
	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.transformDownWithPruning(LogicalPlan.scala:32)
	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.transformDownWithPruning(LogicalPlan.scala:32)
	at org.apache.spark.sql.catalyst.trees.TreeNode.transformDown(TreeNode.scala:437)
	at org.apache.spark.sql.execution.QueryExecution.eagerlyExecuteCommands(QueryExecution.scala:98)
	at org.apache.spark.sql.execution.QueryExecution.commandExecuted$lzycompute(QueryExecution.scala:85)
	at org.apache.spark.sql.execution.QueryExecution.commandExecuted(QueryExecution.scala:83)
	at org.apache.spark.sql.execution.QueryExecution.assertCommandExecuted(QueryExecution.scala:142)
	at org.apache.spark.sql.DataFrameWriter.runCommand(DataFrameWriter.scala:859)
	at org.apache.spark.sql.DataFrameWriter.saveToV1Source(DataFrameWriter.scala:388)
	at org.apache.spark.sql.DataFrameWriter.saveInternal(DataFrameWriter.scala:361)
	at org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:248)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)
	at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)
	at py4j.Gateway.invoke(Gateway.java:282)
	at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)
	at py4j.commands.CallCommand.execute(CallCommand.java:79)
	at py4j.ClientServerConnection.sendCommand(ClientServerConnection.java:244)
	at py4j.CallbackClient.sendCommand(CallbackClient.java:384)
	at py4j.CallbackClient.sendCommand(CallbackClient.java:356)
	at py4j.reflection.PythonProxyHandler.invoke(PythonProxyHandler.java:106)
	at jdk.proxy3/jdk.proxy3.$Proxy30.call(Unknown Source)
	at org.apache.spark.sql.execution.streaming.sources.PythonForeachBatchHelper$.$anonfun$callForeachBatch$1(ForeachBatchSink.scala:53)
	at org.apache.spark.sql.execution.streaming.sources.PythonForeachBatchHelper$.$anonfun$callForeachBatch$1$adapted(ForeachBatchSink.scala:53)
	at org.apache.spark.sql.execution.streaming.sources.ForeachBatchSink.addBatch(ForeachBatchSink.scala:34)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.$anonfun$runBatch$17(MicroBatchExecution.scala:732)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$6(SQLExecution.scala:125)
	at org.apache.spark.sql.execution.SQLExecution$.withSQLConfPropagated(SQLExecution.scala:201)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$1(SQLExecution.scala:108)
	at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:900)
	at org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:66)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.$anonfun$runBatch$16(MicroBatchExecution.scala:729)
	at org.apache.spark.sql.execution.streaming.ProgressReporter.reportTimeTaken(ProgressReporter.scala:427)
	at org.apache.spark.sql.execution.streaming.ProgressReporter.reportTimeTaken$(ProgressReporter.scala:425)
	at org.apache.spark.sql.execution.streaming.StreamExecution.reportTimeTaken(StreamExecution.scala:67)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.runBatch(MicroBatchExecution.scala:729)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.$anonfun$runActivatedStream$2(MicroBatchExecution.scala:286)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at org.apache.spark.sql.execution.streaming.ProgressReporter.reportTimeTaken(ProgressReporter.scala:427)
	at org.apache.spark.sql.execution.streaming.ProgressReporter.reportTimeTaken$(ProgressReporter.scala:425)
	at org.apache.spark.sql.execution.streaming.StreamExecution.reportTimeTaken(StreamExecution.scala:67)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.$anonfun$runActivatedStream$1(MicroBatchExecution.scala:249)
	at org.apache.spark.sql.execution.streaming.SingleBatchExecutor.execute(TriggerExecutor.scala:39)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.runActivatedStream(MicroBatchExecution.scala:239)
	at org.apa
[2024-12-14T19:15:37.414+0000] {docker.py:413} INFO - che.spark.sql.execution.streaming.StreamExecution.$anonfun$runStream$1(StreamExecution.scala:311)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:900)
	at org.apache.spark.sql.execution.streaming.StreamExecution.org$apache$spark$sql$execution$streaming$StreamExecution$$runStream(StreamExecution.scala:289)
	at org.apache.spark.sql.execution.streaming.StreamExecution$$anon$1.$anonfun$run$1(StreamExecution.scala:211)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at org.apache.spark.JobArtifactSet$.withActiveJobArtifactState(JobArtifactSet.scala:94)
	at org.apache.spark.sql.execution.streaming.StreamExecution$$anon$1.run(StreamExecution.scala:211)
Caused by: java.sql.BatchUpdateException: Batch entry 50 INSERT INTO reddit_posts ("post_id","title","author","post_time","upvotes","downvotes","num_comments","score","text","first_level_comments_count","second_level_comments_count","subreddit","hour_of_day","day_of_week","created_at") VALUES ('1he0jj3','After Milan''s 2-1 win against Crvena Zvezda, coach Fonseca had said: "I don''t give a f... about the player''s name, I work hard to give my best, some in the team don''t. If I need to play players from the youth team I will do it." Today 6 youth players trained with the first team','Blodgharm','2024-12-14 10:54:56+00',23,0,2,23,'',1,1,'soccer',10,7,'2024-12-14 19:15:34.53043+00') was aborted: ERROR: duplicate key value violates unique constraint "reddit_posts_pkey"
  Detail: Key (post_id)=(1he0jj3) already exists.  Call getNextException to see other errors in the batch.
	at org.***ql.jdbc.BatchResultHandler.handleError(BatchResultHandler.java:165)
	at org.***ql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2401)
	at org.***ql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2133)
	at org.***ql.core.v3.QueryExecutorImpl.flushIfDeadlockRisk(QueryExecutorImpl.java:1490)
	at org.***ql.core.v3.QueryExecutorImpl.sendQuery(QueryExecutorImpl.java:1515)
	at org.***ql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:559)
	at org.***ql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:896)
	at org.***ql.jdbc.PgStatement.executeBatch(PgStatement.java:919)
	at org.***ql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1677)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.savePartition(JdbcUtils.scala:751)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1(JdbcUtils.scala:902)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1$adapted(JdbcUtils.scala:901)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2(RDD.scala:1036)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2$adapted(RDD.scala:1036)
	at org.apache.spark.SparkContext.$anonfun$runJob$5(SparkContext.scala:2438)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)
	at org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:161)
	at org.apache.spark.scheduler.Task.run(Task.scala:141)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.***ql.util.PSQLException: ERROR: duplicate key value violates unique constraint "reddit_posts_pkey"
  Detail: Key (post_id)=(1he0jj3) already exists.
	at org.***ql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2712)
	at org.***ql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2400)
	... 24 more
[2024-12-14T19:15:37.427+0000] {docker.py:413} INFO - 2024-12-14 19:15:37,412 [ERROR] Critical error in main: [STREAM_FAILED] Query [id = f66ffad1-7143-480f-83e7-41584b2f86df, runId = e4f10132-fdfd-4eb6-8ef6-5a2c2ba04a2e] terminated with exception: An exception was raised by the Python Proxy. Return Message: Traceback (most recent call last):
  File "/opt/bitnami/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/clientserver.py", line 617, in _call_proxy
    return_value = getattr(self.pool[obj_id], method)(*params)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/bitnami/spark/python/lib/pyspark.zip/pyspark/sql/utils.py", line 120, in call
    raise e
  File "/opt/bitnami/spark/python/lib/pyspark.zip/pyspark/sql/utils.py", line 117, in call
    self.func(DataFrame(jdf, wrapped_session_jdf), batch_id)
  File "/opt/bitnami/spark/spark_streaming.py", line 327, in process_batch
    raise e
  File "/opt/bitnami/spark/spark_streaming.py", line 287, in process_batch
    transformer.save_to_***(posts_df, "reddit_posts")
  File "/opt/bitnami/spark/transformation.py", line 458, in save_to_***
    raise e
  File "/opt/bitnami/spark/transformation.py", line 453, in save_to_***
    .save()
     ^^^^^^
  File "/opt/bitnami/spark/python/lib/pyspark.zip/pyspark/sql/readwriter.py", line 1461, in save
    self._jwrite.save()
  File "/opt/bitnami/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/java_gateway.py", line 1322, in __call__
    return_value = get_return_value(
                   ^^^^^^^^^^^^^^^^^
  File "/opt/bitnami/spark/python/lib/pyspark.zip/pyspark/errors/exceptions/captured.py", line 179, in deco
    return f(*a, **kw)
           ^^^^^^^^^^^
  File "/opt/bitnami/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/protocol.py", line 326, in get_return_value
    raise Py4JJavaError(
py4j.protocol.Py4JJavaError: An error occurred while calling o102.save.
: org.apache.spark.SparkException: Job aborted due to stage failure: Task 0 in stage 10.0 failed 1 times, most recent failure: Lost task 0.0 in stage 10.0 (TID 10) (localhost executor driver): java.sql.BatchUpdateException: Batch entry 50 INSERT INTO reddit_posts ("post_id","title","author","post_time","upvotes","downvotes","num_comments","score","text","first_level_comments_count","second_level_comments_count","subreddit","hour_of_day","day_of_week","created_at") VALUES ('1he0jj3','After Milan''s 2-1 win against Crvena Zvezda, coach Fonseca had said: "I don''t give a f... about the player''s name, I work hard to give my best, some in the team don''t. If I need to play players from the youth team I will do it." Today 6 youth players trained with the first team','Blodgharm','2024-12-14 10:54:56+00',23,0,2,23,'',1,1,'soccer',10,7,'2024-12-14 19:15:34.53043+00') was aborted: ERROR: duplicate key value violates unique constraint "reddit_posts_pkey"
  Detail: Key (post_id)=(1he0jj3) already exists.  Call getNextException to see other errors in the batch.
	at org.***ql.jdbc.BatchResultHandler.handleError(BatchResultHandler.java:165)
	at org.***ql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2401)
	at org.***ql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2133)
	at org.***ql.core.v3.QueryExecutorImpl.flushIfDeadlockRisk(QueryExecutorImpl.java:1490)
	at org.***ql.core.v3.QueryExecutorImpl.sendQuery(QueryExecutorImpl.java:1515)
	at org.***ql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:559)
	at org.***ql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:896)
	at org.***ql.jdbc.PgStatement.executeBatch(PgStatement.java:919)
	at org.***ql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1677)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.savePartition(JdbcUtils.scala:751)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1(JdbcUtils.scala:902)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1$adapted(JdbcUtils.scala:901)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2(RDD.scala:1036)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2$adapted(RDD.scala:1036)
	at org.apache.spark.SparkContext.$anonfun$runJob$5(SparkContext.scala:2438)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)
	at org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:161)
	at org.apache.spark.scheduler.Task.run(Task.scala:141)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.***ql.util.PSQLException: ERROR: duplicate key value violates unique constraint "reddit_posts_pkey"
  Detail: Key (post_id)=(1he0jj3) already exists.
	at org.***ql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2712)
	at org.***ql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2400)
	... 24 more

Driver stacktrace:
	at org.apache.spark.scheduler.DAGScheduler.failJobAndIndependentStages(DAGScheduler.scala:2844)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$abortStage$2(DAGScheduler.scala:2780)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$abortStage$2$adapted(DAGScheduler.scala:2779)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at org.apache.spark.scheduler.DAGScheduler.abortStage(DAGScheduler.scala:2779)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$handleTaskSetFailed$1(DAGScheduler.scala:1242)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$handleTaskSetFailed$1$adapted(DAGScheduler.scala:1242)
	at scala.Option.foreach(Option.scala:407)
	at org.apache.spark.scheduler.DAGScheduler.handleTaskSetFailed(DAGScheduler.scala:1242)
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.doOnReceive(DAGScheduler.scala:3048)
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:2982)
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:2971)
	at org.apache.spark.util.EventLoop$$anon$1.run(EventLoop.scala:49)
	at org.apache.spark.scheduler.DAGScheduler.runJob(DAGScheduler.scala:984)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2398)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2419)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2438)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2463)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$1(RDD.scala:1036)
	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:151)
	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:112)
	at org.apache.spark.rdd.RDD.withScope(RDD.scala:407)
	at org.apache.spark.rdd.RDD.foreachPartition(RDD.scala:1034)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.saveTable(JdbcUtils.scala:901)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcRelationProvider.createRelation(JdbcRelationProvider.scala:70)
	at org.apache.spark.sql.execution.datasources.SaveIntoDataSourceCommand.run(SaveIntoDataSourceCommand.scala:48)
	at org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult$lzycompute(commands.scala:75)
	at org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult(commands.scala:73)
	at org.apache.spark.sql.execution.command.ExecutedCommandExec.executeCollect(commands.scala:84)
	at org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$1.$anonfun$applyOrElse$1(QueryExecution.scala:107)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$6(SQLExecution.scala:125)
	at org.apache.spark.sql.execution.SQLExecution$.withSQLConfPropagated(SQLExecution.scala:201)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$1(SQLExecution.scala:108)
	at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:900)
	at org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:66)
	at org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$1.applyOrElse(QueryExecution.scala:107)
	at org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$1.applyOrElse(QueryExecution.scala:98)
	at org.apache.spark.sql.catalyst.trees.TreeNode.$anonfun$transformDownWithPruning$1(TreeNode.scala:461)
	at org.apache.spark.sql.catalyst.trees.CurrentOrigin$.withOrigin(origin.scala:76)
	at org.apache.spark.sql.catalyst.trees.TreeNode.transformDownWithPruning(TreeNode.scala:461)
	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.org$apache$spark$sql$catalyst$plans$logical$AnalysisHelper$$super$transformDownWithPruning(LogicalPlan.scala:32)
	at org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.transformDownWithPruning(AnalysisHelper.scala:267)
	at org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.transformDownWithPruning$(AnalysisHelper.scala:263)
	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.transformDownWithPruning(LogicalPlan.scala:32)
	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.transformDownWithPruning(LogicalPlan.scala:32)
	at org.apache.spark.sql.catalyst.trees.TreeNode.transformDown(TreeNode.scala:437)
	at org.apache.spark.sql.execution.QueryExecution.eagerlyExecuteCommands(QueryExecution.scala:98)
	at org.apache.spark.sql.execution.QueryExecution.commandExecuted$lzycompute(QueryExecution.scala:85)
	at org.apache.spark.sql.execution.QueryExecution.commandExecuted(QueryExecution.scala:83)
	at org.apache.spark.sql.execution.QueryExecution.assertCommandExecuted(QueryExecution.scala:142)
	at org.apache.spark.sql.DataFrameWriter.runCommand(DataFrameWriter.scala:859)
	at org.apache.spark.sql.DataFrameWriter.saveToV1Source(DataFrameWriter.scala:388)
	at org.apache.spark.sql.DataFrameWriter.saveInternal(DataFrameWriter.scala:361)
	at org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:248)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)
	at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)
	at py4j.Gateway.invoke(Gateway.java:282)
	at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)
	at py4j.commands.CallCommand.execute(CallCommand.java:79)
	at py4j.ClientServerConnection.sendCommand(ClientServerConnection.java:244)
	at py4j.CallbackClient.sendCommand(CallbackClient.java:384)
	at py4j.CallbackClient.sendCommand(CallbackClient.java:356)
	at py4j.reflection.PythonProxyHandler.invoke(PythonProxyHandler.java:106)
	at jdk.proxy3/jdk.proxy3.$Proxy30.call(Unknown Source)
	at org.apache.spark.sql.execution.streaming.sources.PythonForeachBatchHelper$.$anonfun$callForeachBatch$1(ForeachBatchSink.scala:53)
	at org.apache.spark.sql.execution.streaming.sources.PythonForeachBatchHelper$.$anonfun$callForeachBatch$1$adapted(ForeachBatchSink.scala:53)
	at org.apache.spark.sql.execution.streaming.sources.ForeachBatchSink.addBatch(ForeachBatchSink.scala:34)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.$anonfun$runBatch$17(MicroBatchExecution.scala:732)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$6(SQLExecution.scala:125)
	at org.apache.spark.sql.execution.SQLExecution$.withSQLConfPropagated(SQLExecution.scala:201)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$1(SQLExecution.scala:108)
	at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:900)
	at org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:66)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.$anonfun$runBatch$16(MicroBatchExecution.scala:729)
	at org.apache.spark.sql.execution.streaming.ProgressReporter.reportTimeTaken(ProgressReporter.scala:427)
	at org.apache.spark.sql.execution.streaming.ProgressReporter.reportTimeTaken$(ProgressReporter.scala:425)
	at org.apache.spark.sql.execution.streaming.StreamExecution.reportTimeTaken(StreamExecution.scala:67)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.runBatch(MicroBatchExecution.scala:729)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.$anonfun$runActivatedStream$2(MicroBatchExecution.scala:286)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at org.apache.spark.sql.execution.streaming.ProgressReporter.reportTimeTaken(ProgressReporter.scala:427)
	at org.apache.spark.sql.execution.streaming.ProgressReporter.reportTimeTaken$(ProgressReporter.scala:425)
	at org.apache.spark.sql.execution.streaming.StreamExecution.reportTimeTaken(StreamExecution.scala:67)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.$anonfun$runActivatedStream$1(MicroBatchExecution.scala:249)
	at org.apache.spark.sql.execution.streaming.SingleBatchExecutor.execute(TriggerExecutor.scala:39)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.runActivatedStream(MicroBatchExecution.scala:239)
	at org.apache.spark.sql.execution.streaming.StreamExecution.$anonfun$runStream$1(StreamExecution.scala:311)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:900)
	at org.apache.spark.sql.execution.streaming.StreamExecution.org$apache$spark$sql$execution$streaming$StreamExecution$$runStream(StreamExecution.scala:289)
	at org.apache.spark.sql.execution.streaming.StreamExecution$$anon$1.$anonfun$run$1(StreamExecution.scala:211)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at org.apache.spark.JobArtifactSet$.withActiveJobArtifactState(JobArtifactSet.scala:94)
	at org.apache.spark.sql.execution.streaming.StreamExecution$$anon$1.run(StreamExecution.scala:211)
Caused by: java.sql.BatchUpdateException: Batch entry 50 INSERT INTO reddit_posts ("post_id","title","author","post_time","upvotes","downvotes","num_comments","score","text","first_level_comments_count","second_level_comments_count","subreddit","hour_of_day","day_of_week","created_at") VALUES ('1he0jj3','After Milan''s 2-1 win against Crvena Zvezda, coach Fonseca had said: "I don''t give a f... about the player''s name, I work hard to give my best, some in the team don''t. If I need to play players from the youth team I will do it." Today 6 youth players trained with the first team','Blodgharm','2024-12-14 10:54:56+00',23,0,2,23,'',1,1,'soccer',10,7,'2024-12-14 19:15:34.53043+00') was aborted: ERROR: duplicate key value violates unique constraint "reddit_posts_pkey"
  Detail: Key (post_id)=(1he0jj3) already exists.  Call getNextException to see other errors in the batch.
	at org.***ql.jdbc.BatchResultHandler.handleError(BatchResultHandler.java:165)
	at org.***ql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2401)
	at org.***ql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2133)
	at org.***ql.core.v3.QueryExecutorImpl.flushIfDeadlockRisk(QueryExecutorImpl.java:1490)
	at org.***ql.core.v3.QueryExecutorImpl.sendQuery(QueryExecutorImpl.java:1515)
	at org.***ql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:559)
	at org.***ql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:896)
	at org.***ql.jdbc.PgStatement.executeBatch(PgStatement.java:919)
	at org.***ql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1677)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.savePartition(JdbcUtils.scala:751)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1(JdbcUtils.scala:902)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1$adapted(JdbcUtils.scala:901)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2(RDD.scala:1036)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2$adapted(RDD.scala:1036)
	at org.apache.spark.SparkContext.$anonfun$runJob$5(SparkContext.scala:2438)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)
	at org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:161)
	at org.apache.spark.scheduler.Task.run(Task.scala:141)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.***ql.util.PSQLException: ERROR: duplicate key value violates unique constraint "reddit_posts_pkey"
  Detail: Key (post_id)=(1he0jj3) already exists.
	at org.***ql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2712)
	at org.***ql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2400)
	... 24 more

Traceback (most recent call last):
  File "/opt/bitnami/spark/spark_streaming.py", line 353, in main
    process_stream()
  File "/opt/bitnami/spark/spark_streaming.py", line 345, in process_stream
    raise e
  File "/opt/bitnami/spark/spark_streaming.py", line 340, in process_stream
    query.awaitTermination()
  File "/opt/bitnami/spark/python/lib/pyspark.zip/pyspark/sql/streaming/query.py", line 221, in awaitTermination
    return self._jsq.awaitTermination()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/bitnami/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/java_gateway.py", line 1322, in __call__
    return_value = get_return_value(
                   ^^^^^^^^^^^^^^^^^
  File "/opt/bitnami/spark/python/lib/pyspark.zip/pyspark/errors/exceptions/captured.py", line 185, in deco
    raise converted from None
pyspark.errors.exceptions.captured.StreamingQueryException: [STREAM_FAILED] Query [id = f66ffad1-7143-480f-83e7-41584b2f86df, runId = e4f10132-fdfd-4eb6-8ef6-5a2c2ba04a2e] terminated with exception: An exception was raised by the Python Proxy. Return Message: Traceback (most recent call last):
  File "/opt/bitnami/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/clientserver.py", line 617, in _call_proxy
    return_value = getattr(self.pool[obj_id], method)(*params)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/bitnami/spark/python/lib/pyspark.zip/pyspark/sql/utils.py", line 120, in call
    raise e
  File "/opt/bitnami/spark/python/lib/pyspark.zip/pyspark/sql/utils.py", line 117, in call
    self.func(DataFrame(jdf, wrapped_session_jdf), batch_id)
  File "/opt/bitnami/spark/spark_streaming.py", line 327, in process_batch
    raise e
  File "/opt/bitnami/spark/spark_streaming.py", line 287, in process_batch
    transformer.save_to_***(posts_df, "reddit_posts")
  File "/opt/bitnami/spark/transformation.py", line 458, in save_to_***
    raise e
  File "/opt/bitnami/spark/transformation.py", line 453, in save_to_***
    .save()
     ^^^^^^
  File "/opt/bitnami/spark/python/lib/pyspark.zip/pyspark/sql/readwriter.py", line 1461, in save
    self._jwrite.save()
  File "/opt/bitnami/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/java_gateway.py", line 1322, in __call__
    return_value = get_return_value(
                   ^^^^^^^^^^^^^^^^^
  File "/opt/bitnami/spark/python/lib/pyspark.zip/pyspark/errors/exceptions/captured.py", line 179, in deco
    return f(*a, **kw)
           ^^^^^^^^^^^
  File "/opt/bitnami/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/protocol.py", line 326, in get_return_value
    raise Py4JJavaError(
py4j.protocol.Py4JJavaError: An error occurred while calling o102.save.
: org.apache.spark.SparkException: Job aborted due to stage failure: Task 0 in stage 10.0 failed 1 times, most recent failure: Lost task 0.0 in stage 10.0 (TID 10) (localhost executor driver): java.sql.BatchUpdateException: Batch entry 50 INSERT INTO reddit_posts ("post_id","title","author","post_time","upvotes","downvotes","num_comments","score","text","first_level_comments_count","second_level_comments_count","subreddit","hour_of_day","day_of_week","created_at") VALUES ('1he0jj3','After Milan''s 2-1 win against Crvena Zvezda, coach Fonseca had said: "I don''t give a f... about the player''s name, I work hard to give my best, some in the team don''t. If I need to play players from the youth team I will do it." Today 6 youth players trained with the first team','Blodgharm','2024-12-14 10:54:56+00',23,0,2,23,'',1,1,'soccer',10,7,'2024-12-14 19:15:34.53043+00') was aborted: ERROR: duplicate key value violates unique constraint "reddit_posts_pkey"
  Detail: Key (post_id)=(1he0jj3) already exists.  Call getNextException to see other errors in the batch.
	at org.***ql.jdbc.BatchResultHandler.handleError(BatchResultHandler.java:165)
	at org.***ql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2401)
	at org.***ql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2133)
	at org.***ql.core.v3.QueryExecutorImpl.flushIfDeadlockRisk(QueryExecutorImpl.java:1490)
	at org.***ql.core.v3.QueryExecutorImpl.sendQuery(QueryExecutorImpl.java:1515)
	at org.***ql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:559)
	at org.***ql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:896)
	at org.***ql.jdbc.PgStatement.executeBatch(PgStatement.java:919)
	at org.***ql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1677)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.savePartition(JdbcUtils.scala:751)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1(JdbcUtils.scala:902)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1$adapted(JdbcUtils.scala:901)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2(RDD.scala:1036)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2$adapted(RDD.scala:1036)
	at org.apache.spark.SparkContext.$anonfun$runJob$5(SparkContext.scala:2438)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)
	at org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:161)
	at org.apache.spark.scheduler.Task.run(Task.scala:141)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.***ql.util.PSQLException: ERROR: duplicate key value violates unique constraint "reddit_posts_pkey"
  Detail: Key (post_id)=(1he0jj3) already exists.
	at org.***ql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2712)
	at org.***ql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2400)
	... 24 more

Driver stacktrace:
	at org.apache.spark.scheduler.DAGScheduler.failJobAndIndependentStages(DAGScheduler.scala:2844)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$abortStage$2(DAGScheduler.scala:2780)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$abortStage$2$adapted(DAGScheduler.scala:2779)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at org.apache.spark.scheduler.DAGScheduler.abortStage(DAGScheduler.scala:2779)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$handleTaskSetFailed$1(DAGScheduler.scala:1242)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$handleTaskSetFailed$1$adapted(DAGScheduler.scala:1242)
	at scala.Option.foreach(Option.scala:407)
	at org.apache.spark.scheduler.DAGScheduler.handleTaskSetFailed(DAGScheduler.scala:1242)
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.doOnReceive(DAGScheduler.scala:3048)
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:2982)
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:2971)
	at org.apache.spark.util.EventLoop$$anon$1.run(EventLoop.scala:49)
	at org.apache.spark.scheduler.DAGScheduler.runJob(DAGScheduler.scala:984)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2398)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2419)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2438)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2463)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$1(RDD.scala:1036)
	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:151)
	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:112)
	at org.apache.spark.rdd.RDD.withScope(RDD.scala:407)
	at org.apache.spark.rdd.RDD.foreachPartition(RDD.scala:1034)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.saveTable(JdbcUtils.scala:901)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcRelationProvider.createRelation(JdbcRelationProvider.scala:70)
	at org.apache.spark.sql.execution.datasources.SaveIntoDataSourceCommand.run(SaveIntoDataSourceCommand.scala:48)
	at org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult$lzycompute(commands.scala:75)
	at org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult(commands.scala:73)
	at org.apache.spark.sql.execution.command.ExecutedCommandExec.executeCollect(commands.scala:84)
	at org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$1.$anonfun$applyOrElse$1(QueryExecution.scala:107)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$6(SQLExecution.scala:125)
	at org.apache.spark.sql.execution.SQLExecution$.withSQLConfPropagated(SQLExecution.scala:201)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$1(SQLExecution.scala:108)
	at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:900)
	at org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:66)
	at org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$1.applyOrElse(QueryExecution.scala:107)
	at org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$1.applyOrElse(QueryExecution.scala:98)
	at org.apache.spark.sql.catalyst.trees.TreeNode.$anonfun$transformDownWithPruning$1(TreeNode.scala:461)
	at org.apache.spark.sql.catalyst.trees.CurrentOrigin$.withOrigin(origin.scala:76)
	at org.apache.spark.sql.catalyst.trees.TreeNode.transformDownWithPruning(TreeNode.scala:461)
	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.org$apache$spark$sql$catalyst$plans$logical$AnalysisHelper$$super$transformDownWithPruning(LogicalPlan.scala:32)
	at org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.transformDownWithPruning(AnalysisHelper.scala:267)
	at org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.transformDownWithPruning$(AnalysisHelper.scala:263)
	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.transformDownWithPruning(LogicalPlan.scala:32)
	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.transformDownWithPruning(LogicalPlan.scala:32)
	at org.apache.spark.sql.catalyst.trees.TreeNode.transformDown(TreeNode.scala:437)
	at org.apache.spark.sql.execution.QueryExecution.eagerlyExecuteCommands(QueryExecution.scala:98)
	at org.apache.spark.sql.execution.QueryExecution.commandExecuted$lzycompute(QueryExecution.scala:85)
	at org.apache.spark.sql.execution.QueryExecution.commandExecuted(QueryExecution.scala:83)
	at org.apache.spark.sql.execution.QueryExecution.assertCommandExecuted(QueryExecution.scala:142)
	at org.apache.spark.sql.DataFrameWriter.runCommand(DataFrameWriter.scala:859)
	at org.apache.spark.sql.DataFrameWriter.saveToV1Source(DataFrameWriter.scala:388)
	at org.apache.spark.sql.DataFrameWriter.saveInternal(DataFrameWriter.scala:361)
	at org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:248)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)
	at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)
	at py4j.Gateway.invoke(Gateway.java:282)
	at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)
	at py4j.commands.CallCommand.execute(CallCommand.java:79)
	at py4j.ClientServerConnection.sendCommand(ClientServerConnection.java:244)
	at py4j.CallbackClient.sendCommand(CallbackClient.java:384)
	at py4j.CallbackClient.sendCommand(CallbackClient.java:356)
	at py4j.reflection.PythonProxyHandler.invoke(PythonProxyHandler.java:106)
	at jdk.proxy3/jdk.proxy3.$Proxy30.call(Unknown Source)
	at org.apache.spark.sql.execution.streaming.sources.PythonForeachBatchHelper$.$anonfun$callForeachBatch$1(ForeachBatchSink.scala:53)
	at org.apache.spark.sql.execution.streaming.sources.PythonForeachBatchHelper$.$anonfun$callForeachBatch$1$adapted(ForeachBatchSink.scala:53)
	at org.apache.spark.sql.execution.streaming.sources.ForeachBatchSink.addBatch(ForeachBatchSink.scala:34)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.$anonfun$runBatch$17(MicroBatchExecution.scala:732)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$6(SQLExecution.scala:125)
	at org.apache.spark.sql.execution.SQLExecution$.withSQLConfPropagated(SQLExecution.scala:201)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$1(SQLExecution.scala:108)
	at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:900)
	at org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:66)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.$anonfun$runBatch$16(MicroBatchExecution.scala:729)
	at org.apache.spark.sql.execution.streaming.ProgressReporter.reportTimeTaken(ProgressReporter.scala:427)
	at org.apache.spark.sql.execution.streaming.ProgressReporter.reportTimeTaken$(ProgressReporter.scala:425)
	at org.apache.spark.sql.execution.streaming.StreamExecution.reportTimeTaken(StreamExecution.scala:67)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.runBatch(MicroBatchExecution.scala:729)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.$anonfun$runActivatedStream$2(MicroBatchExecution.scala:286)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at org.apache.spark.sql.execution.streaming.ProgressReporter.reportTimeTaken(ProgressReporter.scala:427)
	at org.apache.spark.sql.execution.streaming.ProgressReporter.reportTimeTaken$(ProgressReporter.scala:425)
	at org.apache.spark.sql.execution.streaming.StreamExecution.reportTimeTaken(StreamExecution.scala:67)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.$anonfun$runActivatedStream$1(MicroBatchExecution.scala:249)
	at org.apache.spark.sql.execution.streaming.SingleBat
[2024-12-14T19:15:37.432+0000] {docker.py:413} INFO - chExecutor.execute(TriggerExecutor.scala:39)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.runActivatedStream(MicroBatchExecution.scala:239)
	at org.apache.spark.sql.execution.streaming.StreamExecution.$anonfun$runStream$1(StreamExecution.scala:311)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:900)
	at org.apache.spark.sql.execution.streaming.StreamExecution.org$apache$spark$sql$execution$streaming$StreamExecution$$runStream(StreamExecution.scala:289)
	at org.apache.spark.sql.execution.streaming.StreamExecution$$anon$1.$anonfun$run$1(StreamExecution.scala:211)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at org.apache.spark.JobArtifactSet$.withActiveJobArtifactState(JobArtifactSet.scala:94)
	at org.apache.spark.sql.execution.streaming.StreamExecution$$anon$1.run(StreamExecution.scala:211)
Caused by: java.sql.BatchUpdateException: Batch entry 50 INSERT INTO reddit_posts ("post_id","title","author","post_time","upvotes","downvotes","num_comments","score","text","first_level_comments_count","second_level_comments_count","subreddit","hour_of_day","day_of_week","created_at") VALUES ('1he0jj3','After Milan''s 2-1 win against Crvena Zvezda, coach Fonseca had said: "I don''t give a f... about the player''s name, I work hard to give my best, some in the team don''t. If I need to play players from the youth team I will do it." Today 6 youth players trained with the first team','Blodgharm','2024-12-14 10:54:56+00',23,0,2,23,'',1,1,'soccer',10,7,'2024-12-14 19:15:34.53043+00') was aborted: ERROR: duplicate key value violates unique constraint "reddit_posts_pkey"
  Detail: Key (post_id)=(1he0jj3) already exists.  Call getNextException to see other errors in the batch.
	at org.***ql.jdbc.BatchResultHandler.handleError(BatchResultHandler.java:165)
	at org.***ql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2401)
	at org.***ql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2133)
	at org.***ql.core.v3.QueryExecutorImpl.flushIfDeadlockRisk(QueryExecutorImpl.java:1490)
	at org.***ql.core.v3.QueryExecutorImpl.sendQuery(QueryExecutorImpl.java:1515)
	at org.***ql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:559)
	at org.***ql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:896)
	at org.***ql.jdbc.PgStatement.executeBatch(PgStatement.java:919)
	at org.***ql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1677)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.savePartition(JdbcUtils.scala:751)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1(JdbcUtils.scala:902)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1$adapted(JdbcUtils.scala:901)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2(RDD.scala:1036)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2$adapted(RDD.scala:1036)
	at org.apache.spark.SparkContext.$anonfun$runJob$5(SparkContext.scala:2438)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)
	at org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:161)
	at org.apache.spark.scheduler.Task.run(Task.scala:141)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.***ql.util.PSQLException: ERROR: duplicate key value violates unique constraint "reddit_posts_pkey"
  Detail: Key (post_id)=(1he0jj3) already exists.
	at org.***ql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2712)
	at org.***ql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2400)
	... 24 more


2024-12-14 19:15:37,424 [INFO] Cleaning up resources...
Traceback (most recent call last):
  File "/opt/bitnami/spark/spark_streaming.py", line 363, in <module>
[2024-12-14T19:15:37.434+0000] {docker.py:413} INFO - main()
  File "/opt/bitnami/spark/spark_streaming.py", line 358, in main
[2024-12-14T19:15:37.435+0000] {docker.py:413} INFO - raise e
  File "/opt/bitnami/spark/spark_streaming.py", line 353, in main
[2024-12-14T19:15:37.436+0000] {docker.py:413} INFO - process_stream()
  File "/opt/bitnami/spark/spark_streaming.py", line 345, in process_stream
[2024-12-14T19:15:37.437+0000] {docker.py:413} INFO - raise e
  File "/opt/bitnami/spark/spark_streaming.py", line 340, in process_stream
[2024-12-14T19:15:37.438+0000] {docker.py:413} INFO - query.awaitTermination()
  File "/opt/bitnami/spark/python/lib/pyspark.zip/pyspark/sql/streaming/query.py", line 221, in awaitTermination
[2024-12-14T19:15:37.439+0000] {docker.py:413} INFO - File "/opt/bitnami/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/java_gateway.py", line 1322, in __call__
[2024-12-14T19:15:37.440+0000] {docker.py:413} INFO - File "/opt/bitnami/spark/python/lib/pyspark.zip/pyspark/errors/exceptions/captured.py", line 185, in deco
[2024-12-14T19:15:37.441+0000] {docker.py:413} INFO - pyspark.errors.exceptions.captured.StreamingQueryException
[2024-12-14T19:15:37.442+0000] {docker.py:413} INFO - : [STREAM_FAILED] Query [id = f66ffad1-7143-480f-83e7-41584b2f86df, runId = e4f10132-fdfd-4eb6-8ef6-5a2c2ba04a2e] terminated with exception: An exception was raised by the Python Proxy. Return Message: Traceback (most recent call last):
  File "/opt/bitnami/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/clientserver.py", line 617, in _call_proxy
    return_value = getattr(self.pool[obj_id], method)(*params)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/bitnami/spark/python/lib/pyspark.zip/pyspark/sql/utils.py", line 120, in call
    raise e
  File "/opt/bitnami/spark/python/lib/pyspark.zip/pyspark/sql/utils.py", line 117, in call
    self.func(DataFrame(jdf, wrapped_session_jdf), batch_id)
  File "/opt/bitnami/spark/spark_streaming.py", line 327, in process_batch
    raise e
  File "/opt/bitnami/spark/spark_streaming.py", line 287, in process_batch
    transformer.save_to_***(posts_df, "reddit_posts")
  File "/opt/bitnami/spark/transformation.py", line 458, in save_to_***
    raise e
  File "/opt/bitnami/spark/transformation.py", line 453, in save_to_***
    .save()
     ^^^^^^
  File "/opt/bitnami/spark/python/lib/pyspark.zip/pyspark/sql/readwriter.py", line 1461, in save
    self._jwrite.save()
  File "/opt/bitnami/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/java_gateway.py", line 1322, in __call__
    return_value = get_return_value(
                   ^^^^^^^^^^^^^^^^^
  File "/opt/bitnami/spark/python/lib/pyspark.zip/pyspark/errors/exceptions/captured.py", line 179, in deco
    return f(*a, **kw)
           ^^^^^^^^^^^
  File "/opt/bitnami/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/protocol.py", line 326, in get_return_value
    raise Py4JJavaError(
py4j.protocol.Py4JJavaError: An error occurred while calling o102.save.
: org.apache.spark.SparkException: Job aborted due to stage failure: Task 0 in stage 10.0 failed 1 times, most recent failure: Lost task 0.0 in stage 10.0 (TID 10) (localhost executor driver): java.sql.BatchUpdateException: Batch entry 50 INSERT INTO reddit_posts ("post_id","title","author","post_time","upvotes","downvotes","num_comments","score","text","first_level_comments_count","second_level_comments_count","subreddit","hour_of_day","day_of_week","created_at") VALUES ('1he0jj3','After Milan''s 2-1 win against Crvena Zvezda, coach Fonseca had said: "I don''t give a f... about the player''s name, I work hard to give my best, some in the team don''t. If I need to play players from the youth team I will do it." Today 6 youth players trained with the first team','Blodgharm','2024-12-14 10:54:56+00',23,0,2,23,'',1,1,'soccer',10,7,'2024-12-14 19:15:34.53043+00') was aborted: ERROR: duplicate key value violates unique constraint "reddit_posts_pkey"
  Detail: Key (post_id)=(1he0jj3) already exists.  Call getNextException to see other errors in the batch.
	at org.***ql.jdbc.BatchResultHandler.handleError(BatchResultHandler.java:165)
	at org.***ql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2401)
	at org.***ql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2133)
	at org.***ql.core.v3.QueryExecutorImpl.flushIfDeadlockRisk(QueryExecutorImpl.java:1490)
	at org.***ql.core.v3.QueryExecutorImpl.sendQuery(QueryExecutorImpl.java:1515)
	at org.***ql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:559)
	at org.***ql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:896)
	at org.***ql.jdbc.PgStatement.executeBatch(PgStatement.java:919)
	at org.***ql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1677)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.savePartition(JdbcUtils.scala:751)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1(JdbcUtils.scala:902)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1$adapted(JdbcUtils.scala:901)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2(RDD.scala:1036)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2$adapted(RDD.scala:1036)
	at org.apache.spark.SparkContext.$anonfun$runJob$5(SparkContext.scala:2438)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)
	at org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:161)
	at org.apache.spark.scheduler.Task.run(Task.scala:141)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.***ql.util.PSQLException: ERROR: duplicate key value violates unique constraint "reddit_posts_pkey"
  Detail: Key (post_id)=(1he0jj3) already exists.
	at org.***ql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2712)
	at org.***ql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2400)
	... 24 more

Driver stacktrace:
	at org.apache.spark.scheduler.DAGScheduler.failJobAndIndependentStages(DAGScheduler.scala:2844)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$abortStage$2(DAGScheduler.scala:2780)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$abortStage$2$adapted(DAGScheduler.scala:2779)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at org.apache.spark.scheduler.DAGScheduler.abortStage(DAGScheduler.scala:2779)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$handleTaskSetFailed$1(DAGScheduler.scala:1242)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$handleTaskSetFailed$1$adapted(DAGScheduler.scala:1242)
	at scala.Option.foreach(Option.scala:407)
	at org.apache.spark.scheduler.DAGScheduler.handleTaskSetFailed(DAGScheduler.scala:1242)
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.doOnReceive(DAGScheduler.scala:3048)
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:2982)
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:2971)
	at org.apache.spark.util.EventLoop$$anon$1.run(EventLoop.scala:49)
	at org.apache.spark.scheduler.DAGScheduler.runJob(DAGScheduler.scala:984)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2398)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2419)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2438)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2463)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$1(RDD.scala:1036)
	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:151)
	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:112)
	at org.apache.spark.rdd.RDD.withScope(RDD.scala:407)
	at org.apache.spark.rdd.RDD.foreachPartition(RDD.scala:1034)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.saveTable(JdbcUtils.scala:901)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcRelationProvider.createRelation(JdbcRelationProvider.scala:70)
	at org.apache.spark.sql.execution.datasources.SaveIntoDataSourceCommand.run(SaveIntoDataSourceCommand.scala:48)
	at org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult$lzycompute(commands.scala:75)
	at org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult(commands.scala:73)
	at org.apache.spark.sql.execution.command.ExecutedCommandExec.executeCollect(commands.scala:84)
	at org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$1.$anonfun$applyOrElse$1(QueryExecution.scala:107)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$6(SQLExecution.scala:125)
	at org.apache.spark.sql.execution.SQLExecution$.withSQLConfPropagated(SQLExecution.scala:201)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$1(SQLExecution.scala:108)
	at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:900)
	at org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:66)
	at org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$1.applyOrElse(QueryExecution.scala:107)
	at org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$1.applyOrElse(QueryExecution.scala:98)
	at org.apache.spark.sql.catalyst.trees.TreeNode.$anonfun$transformDownWithPruning$1(TreeNode.scala:461)
	at org.apache.spark.sql.catalyst.trees.CurrentOrigin$.withOrigin(origin.scala:76)
	at org.apache.spark.sql.catalyst.trees.TreeNode.transformDownWithPruning(TreeNode.scala:461)
	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.org$apache$spark$sql$catalyst$plans$logical$AnalysisHelper$$super$transformDownWithPruning(LogicalPlan.scala:32)
	at org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.transformDownWithPruning(AnalysisHelper.scala:267)
	at org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.transformDownWithPruning$(AnalysisHelper.scala:263)
	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.transformDownWithPruning(LogicalPlan.scala:32)
	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.transformDownWithPruning(LogicalPlan.scala:32)
	at org.apache.spark.sql.catalyst.trees.TreeNode.transformDown(TreeNode.scala:437)
	at org.apache.spark.sql.execution.QueryExecution.eagerlyExecuteCommands(QueryExecution.scala:98)
	at org.apache.spark.sql.execution.QueryExecution.commandExecuted$lzycompute(QueryExecution.scala:85)
	at org.apache.spark.sql.execution.QueryExecution.commandExecuted(QueryExecution.scala:83)
	at org.apache.spark.sql.execution.QueryExecution.assertCommandExecuted(QueryExecution.scala:142)
	at org.apache.spark.sql.DataFrameWriter.runCommand(DataFrameWriter.scala:859)
	at org.apache.spark.sql.DataFrameWriter.saveToV1Source(DataFrameWriter.scala:388)
	at org.apache.spark.sql.DataFrameWriter.saveInternal(DataFrameWriter.scala:361)
	at org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:248)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)
	at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)
	at py4j.Gateway.invoke(Gateway.java:282)
	at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)
	at py4j.commands.CallCommand.execute(CallCommand.java:79)
	at py4j.ClientServerConnection.sendCommand(ClientServerConnection.java:244)
	at py4j.CallbackClient.sendCommand(CallbackClient.java:384)
	at py4j.CallbackClient.sendCommand(CallbackClient.java:356)
	at py4j.reflection.PythonProxyHandler.invoke(PythonProxyHandler.java:106)
	at jdk.proxy3/jdk.proxy3.$Proxy30.call(Unknown Source)
	at org.apache.spark.sql.execution.streaming.sources.PythonForeachBatchHelper$.$anonfun$callForeachBatch$1(ForeachBatchSink.scala:53)
	at org.apache.spark.sql.execution.streaming.sources.PythonForeachBatchHelper$.$anonfun$callForeachBatch$1$adapted(ForeachBatchSink.scala:53)
	at org.apache.spark.sql.execution.streaming.sources.ForeachBatchSink.addBatch(ForeachBatchSink.scala:34)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.$anonfun$runBatch$17(MicroBatchExecution.scala:732)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$6(SQLExecution.scala:125)
	at org.apache.spark.sql.execution.SQLExecution$.withSQLConfPropagated(SQLExecution.scala:201)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$1(SQLExecution.scala:108)
	at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:900)
	at org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:66)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.$anonfun$runBatch$16(MicroBatchExecution.scala:729)
	at org.apache.spark.sql.execution.streaming.ProgressReporter.reportTimeTaken(ProgressReporter.scala:427)
	at org.apache.spark.sql.execution.streaming.ProgressReporter.reportTimeTaken$(ProgressReporter.scala:425)
	at org.apache.spark.sql.execution.streaming.StreamExecution.reportTimeTaken(StreamExecution.scala:67)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.runBatch(MicroBatchExecution.scala:729)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.$anonfun$runActivatedStream$2(MicroBatchExecution.scala:286)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at org.apache.spark.sql.execution.streaming.ProgressReporter.reportTimeTaken(ProgressReporter.scala:427)
	at org.apache.spark.sql.execution.streaming.ProgressReporter.reportTimeTaken$(ProgressReporter.scala:425)
	at org.apache.spark.sql.execution.streaming.StreamExecution.reportTimeTaken(StreamExecution.scala:67)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.$anonfun$runActivatedStream$1(MicroBatchExecution.scala:249)
	at org.apache.spark.sql.execution.streaming.SingleBatchExecutor.execute(TriggerExecutor.scala:39)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.runActivatedStream(MicroBatchExecution.scala:239)
	at org.apache.spark.sql.execution.streaming.StreamExecution.$anonfun$runStream$1(StreamExecution.scala:311)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:900)
	at org.apache.spark.sql.execution.streaming.StreamExecution.org$apache$spark$sql$execution$streaming$StreamExecution$$runStream(StreamExecution.scala:289)
	at org.apache.spark.sql.execution.streaming.StreamExecution$$anon$1.$anonfun$run$1(StreamExecution.scala:211)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at org.apache.spark.JobArtifactSet$.withActiveJobArtifactState(JobArtifactSet.scala:94)
	at org.apache.spark.sql.execution.streaming.StreamExecution$$anon$1.run(StreamExecution.scala:211)
Caused by: java.sql.BatchUpdateException: Batch entry 50 INSERT INTO reddit_posts ("post_id","title","author","post_time","upvotes","downvotes","num_comments","score","text","first_level_comments_count","second_level_comments_count","subreddit","hour_of_day","day_of_week","created_at") VALUES ('1he0jj3','After Milan''s 2-1 win against Crvena Zvezda, coach Fonseca had said: "I don''t give a f... about the player''s name, I work hard to give my best, some in the team don''t. If I need to play players from the youth team I will do it." Today 6 youth players trained with the first team','Blodgharm','2024-12-14 10:54:56+00',23,0,2,23,'',1,1,'soccer',10,7,'2024-12-14 19:15:34.53043+00') was aborted: ERROR: duplicate key value violates unique constraint "reddit_posts_pkey"
  Detail: Key (post_id)=(1he0jj3) already exists.  Call getNextException to see other errors in the batch.
	at org.***ql.jdbc.BatchResultHandler.handleError(BatchResultHandler.java:165)
	at org.***ql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2401)
	at org.***ql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2133)
	at org.***ql.core.v3.QueryExecutorImpl.flushIfDeadlockRisk(QueryExecutorImpl.java:1490)
	at org.***ql.core.v3.QueryExecutorImpl.sendQuery(QueryExecutorImpl.java:1515)
	at org.***ql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:559)
	at org.***ql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:896)
	at org.***ql.jdbc.PgStatement.executeBatch(PgStatement.java:919)
	at org.***ql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1677)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.savePartition(JdbcUtils.scala:751)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1(JdbcUtils.scala:902)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1$adapted(JdbcUtils.scala:901)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2(RDD.scala:1036)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2$adapted(RDD.scala:1036)
	at org.apache.spark.SparkContext.$anonfun$runJob$5(SparkContext.scala:2438)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)
	at org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:161)
	at org.apache.spark.scheduler.Task.run(Task.scala:141)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.***ql.util.PSQLException: ERROR: duplicate key value violates unique constraint "reddit_posts_pkey"
  Detail: Key (post_id)=(1he0jj3) already exists.
	at org.***ql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2712)
	at org.***ql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2400)
	... 24 more
[2024-12-14T19:15:37.444+0000] {docker.py:413} INFO - 2024-12-14 19:15:37,438 [INFO] Closing down clientserver connection
[2024-12-14T19:15:38.105+0000] {docker.py:413} INFO - 24/12/14 19:15:38 INFO ConsumerCoordinator: [Consumer clientId=consumer-reddit_processor_group-1, groupId=reddit_processor_group] Resetting generation and member id due to: consumer pro-actively leaving the group
24/12/14 19:15:38 INFO ConsumerCoordinator: [Consumer clientId=consumer-reddit_processor_group-1, groupId=reddit_processor_group] Request joining group due to: consumer pro-actively leaving the group
[2024-12-14T19:15:38.124+0000] {docker.py:413} INFO - 24/12/14 19:15:38 INFO Metrics: Metrics scheduler closed
[2024-12-14T19:15:38.127+0000] {docker.py:413} INFO - 24/12/14 19:15:38 INFO Metrics: Closing reporter org.apache.kafka.common.metrics.JmxReporter
24/12/14 19:15:38 INFO Metrics: Metrics reporters closed
[2024-12-14T19:15:38.138+0000] {docker.py:413} INFO - 24/12/14 19:15:38 INFO AppInfoParser: App info kafka.consumer for consumer-reddit_processor_group-1 unregistered
[2024-12-14T19:15:38.143+0000] {docker.py:413} INFO - 24/12/14 19:15:38 INFO SparkContext: Invoking stop() from shutdown hook
[2024-12-14T19:15:38.146+0000] {docker.py:413} INFO - 24/12/14 19:15:38 INFO SparkContext: SparkContext is stopping with exitCode 0.
[2024-12-14T19:15:38.205+0000] {docker.py:413} INFO - 24/12/14 19:15:38 INFO SparkUI: Stopped Spark web UI at http://localhost:4040
[2024-12-14T19:15:38.235+0000] {docker.py:413} INFO - 24/12/14 19:15:38 INFO MapOutputTrackerMasterEndpoint: MapOutputTrackerMasterEndpoint stopped!
[2024-12-14T19:15:38.272+0000] {docker.py:413} INFO - 24/12/14 19:15:38 INFO MemoryStore: MemoryStore cleared
[2024-12-14T19:15:38.274+0000] {docker.py:413} INFO - 24/12/14 19:15:38 INFO BlockManager: BlockManager stopped
[2024-12-14T19:15:38.288+0000] {docker.py:413} INFO - 24/12/14 19:15:38 INFO BlockManagerMaster: BlockManagerMaster stopped
[2024-12-14T19:15:38.305+0000] {docker.py:413} INFO - 24/12/14 19:15:38 INFO OutputCommitCoordinator$OutputCommitCoordinatorEndpoint: OutputCommitCoordinator stopped!
[2024-12-14T19:15:38.326+0000] {docker.py:413} INFO - 24/12/14 19:15:38 INFO SparkContext: Successfully stopped SparkContext
[2024-12-14T19:15:38.328+0000] {docker.py:413} INFO - 24/12/14 19:15:38 INFO ShutdownHookManager: Shutdown hook called
[2024-12-14T19:15:38.330+0000] {docker.py:413} INFO - 24/12/14 19:15:38 INFO ShutdownHookManager: Deleting directory /tmp/spark-da3c9925-f814-4f78-b2ea-f0a61890cac5
[2024-12-14T19:15:38.338+0000] {docker.py:413} INFO - 24/12/14 19:15:38 INFO ShutdownHookManager: Deleting directory /tmp/spark-af6a2c99-decd-474f-b608-ac32561a9395/pyspark-21ed662a-67f3-491d-9e04-7975d202eca5
[2024-12-14T19:15:38.345+0000] {docker.py:413} INFO - 24/12/14 19:15:38 INFO ShutdownHookManager: Deleting directory /tmp/spark-af6a2c99-decd-474f-b608-ac32561a9395
[2024-12-14T19:15:38.844+0000] {taskinstance.py:1937} ERROR - Task failed with exception
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.8/site-packages/docker/api/client.py", line 268, in _raise_for_status
    response.raise_for_status()
  File "/home/airflow/.local/lib/python3.8/site-packages/requests/models.py", line 1021, in raise_for_status
    raise HTTPError(http_error_msg, response=self)
requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: http://docker-proxy:2375/v1.47/containers/create

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/providers/docker/operators/docker.py", line 348, in _run_image
    return self._run_image_with_mounts([*self.mounts, tmp_mount], add_tmp_variable=True)
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/providers/docker/operators/docker.py", line 375, in _run_image_with_mounts
    self.container = self.cli.create_container(
  File "/home/airflow/.local/lib/python3.8/site-packages/docker/api/container.py", line 431, in create_container
    return self.create_container_from_config(config, name, platform)
  File "/home/airflow/.local/lib/python3.8/site-packages/docker/api/container.py", line 448, in create_container_from_config
    return self._result(res, True)
  File "/home/airflow/.local/lib/python3.8/site-packages/docker/api/client.py", line 274, in _result
    self._raise_for_status(response)
  File "/home/airflow/.local/lib/python3.8/site-packages/docker/api/client.py", line 270, in _raise_for_status
    raise create_api_error_from_http_exception(e) from e
  File "/home/airflow/.local/lib/python3.8/site-packages/docker/errors.py", line 39, in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation) from e
docker.errors.APIError: 400 Client Error for http://docker-proxy:2375/v1.47/containers/create: Bad Request ("invalid mount config for type "bind": bind source path does not exist: /tmp/airflowtmp_qv_tfku")

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/providers/docker/operators/docker.py", line 486, in execute
    return self._run_image()
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/providers/docker/operators/docker.py", line 357, in _run_image
    return self._run_image_with_mounts(self.mounts, add_tmp_variable=False)
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/providers/docker/operators/docker.py", line 421, in _run_image_with_mounts
    raise DockerContainerFailedException(f"Docker container failed: {result!r}", logs=log_lines)
airflow.providers.docker.exceptions.DockerContainerFailedException: Docker container failed: {'StatusCode': 1}
[2024-12-14T19:15:38.855+0000] {taskinstance.py:1400} INFO - Marking task as FAILED. dag_id=kafka_spark_dag, task_id=pyspark_consumer, execution_date=20241214T191017, start_date=20241214T191323, end_date=20241214T191538
[2024-12-14T19:15:38.895+0000] {standard_task_runner.py:104} ERROR - Failed to execute job 5 for task pyspark_consumer (Docker container failed: {'StatusCode': 1}; 2255)
[2024-12-14T19:15:38.940+0000] {local_task_job_runner.py:228} INFO - Task exited with return code 1
[2024-12-14T19:15:39.008+0000] {taskinstance.py:2778} INFO - 0 downstream tasks scheduled from follow-on schedule check
