[2024-12-14T18:05:08.783+0000] {taskinstance.py:1159} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: kafka_spark_dag.pyspark_consumer manual__2024-12-14T18:04:15.009053+00:00 [queued]>
[2024-12-14T18:05:08.820+0000] {taskinstance.py:1159} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: kafka_spark_dag.pyspark_consumer manual__2024-12-14T18:04:15.009053+00:00 [queued]>
[2024-12-14T18:05:08.822+0000] {taskinstance.py:1361} INFO - Starting attempt 1 of 2
[2024-12-14T18:05:08.858+0000] {taskinstance.py:1382} INFO - Executing <Task(DockerOperator): pyspark_consumer> on 2024-12-14 18:04:15.009053+00:00
[2024-12-14T18:05:08.870+0000] {standard_task_runner.py:57} INFO - Started process 1180 to run task
[2024-12-14T18:05:08.882+0000] {standard_task_runner.py:84} INFO - Running: ['airflow', 'tasks', 'run', 'kafka_spark_dag', 'pyspark_consumer', 'manual__2024-12-14T18:04:15.009053+00:00', '--job-id', '4', '--raw', '--subdir', 'DAGS_FOLDER/dag_kafka_spark.py', '--cfg-path', '/tmp/tmpehzkqswd']
[2024-12-14T18:05:08.890+0000] {standard_task_runner.py:85} INFO - Job 4: Subtask pyspark_consumer
[2024-12-14T18:05:09.060+0000] {task_command.py:416} INFO - Running <TaskInstance: kafka_spark_dag.pyspark_consumer manual__2024-12-14T18:04:15.009053+00:00 [running]> on host 4d0ad2ea9c0d
[2024-12-14T18:05:09.315+0000] {taskinstance.py:1662} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='airflow' AIRFLOW_CTX_DAG_ID='kafka_spark_dag' AIRFLOW_CTX_TASK_ID='pyspark_consumer' AIRFLOW_CTX_EXECUTION_DATE='2024-12-14T18:04:15.009053+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='manual__2024-12-14T18:04:15.009053+00:00'
[2024-12-14T18:05:09.488+0000] {docker.py:343} INFO - Starting docker container from image reddit-consumer/spark:latest
[2024-12-14T18:05:09.556+0000] {docker.py:351} WARNING - Using remote engine or docker-in-docker and mounting temporary volume from host is not supported. Falling back to `mount_tmp_dir=False` mode. You can set `mount_tmp_dir` parameter to False to disable mounting and remove the warning
[2024-12-14T18:05:10.376+0000] {docker.py:413} INFO - [38;5;6mspark [38;5;5m18:05:10.37 [0m[38;5;2mINFO [0m ==>
[2024-12-14T18:05:10.382+0000] {docker.py:413} INFO - [38;5;6mspark [38;5;5m18:05:10.37 [0m[38;5;2mINFO [0m ==> [1mWelcome to the Bitnami spark container[0m
[2024-12-14T18:05:10.392+0000] {docker.py:413} INFO - [38;5;6mspark [38;5;5m18:05:10.38 [0m[38;5;2mINFO [0m ==> Subscribe to project updates by watching [1mhttps://github.com/bitnami/containers[0m
[2024-12-14T18:05:10.400+0000] {docker.py:413} INFO - [38;5;6mspark [38;5;5m18:05:10.39 [0m[38;5;2mINFO [0m ==> Submit issues and feature requests at [1mhttps://github.com/bitnami/containers/issues[0m
[2024-12-14T18:05:10.408+0000] {docker.py:413} INFO - [38;5;6mspark [38;5;5m18:05:10.40 [0m[38;5;2mINFO [0m ==>
[2024-12-14T18:05:10.420+0000] {docker.py:413} INFO - 
[2024-12-14T18:05:15.051+0000] {docker.py:413} INFO - :: loading settings :: url = jar:file:/opt/bitnami/spark/jars/ivy-2.5.1.jar!/org/apache/ivy/core/settings/ivysettings.xml
[2024-12-14T18:05:15.153+0000] {docker.py:413} INFO - Ivy Default Cache set to: /root/.ivy2/cache
The jars for the packages stored in: /root/.ivy2/jars
[2024-12-14T18:05:15.160+0000] {docker.py:413} INFO - org.***ql#***ql added as a dependency
org.apache.spark#spark-sql-kafka-0-10_2.12 added as a dependency
[2024-12-14T18:05:15.163+0000] {docker.py:413} INFO - :: resolving dependencies :: org.apache.spark#spark-submit-parent-6e504c67-b2ed-4b0f-9cca-6fbd6718c505;1.0
	confs: [default]
[2024-12-14T18:05:22.342+0000] {docker.py:413} INFO - found org.***ql#***ql;42.5.4 in central
[2024-12-14T18:05:22.987+0000] {docker.py:413} INFO - found org.checkerframework#checker-qual;3.5.0 in central
[2024-12-14T18:05:28.189+0000] {docker.py:413} INFO - found org.apache.spark#spark-sql-kafka-0-10_2.12;3.5.0 in central
[2024-12-14T18:05:29.090+0000] {docker.py:413} INFO - found org.apache.spark#spark-token-provider-kafka-0-10_2.12;3.5.0 in central
[2024-12-14T18:05:29.737+0000] {docker.py:413} INFO - found org.apache.kafka#kafka-clients;3.4.1 in central
[2024-12-14T18:05:30.361+0000] {docker.py:413} INFO - found org.lz4#lz4-java;1.8.0 in central
[2024-12-14T18:05:30.965+0000] {docker.py:413} INFO - found org.xerial.snappy#snappy-java;1.1.10.3 in central
[2024-12-14T18:05:33.111+0000] {docker.py:413} INFO - found org.slf4j#slf4j-api;2.0.7 in central
[2024-12-14T18:05:37.333+0000] {docker.py:413} INFO - found org.apache.hadoop#hadoop-client-runtime;3.3.4 in central
[2024-12-14T18:05:37.985+0000] {docker.py:413} INFO - found org.apache.hadoop#hadoop-client-api;3.3.4 in central
[2024-12-14T18:05:41.666+0000] {docker.py:413} INFO - found commons-logging#commons-logging;1.1.3 in central
[2024-12-14T18:05:42.227+0000] {docker.py:413} INFO - found com.google.code.findbugs#jsr305;3.0.0 in central
[2024-12-14T18:05:47.085+0000] {docker.py:413} INFO - found org.apache.commons#commons-pool2;2.11.1 in central
[2024-12-14T18:05:47.336+0000] {docker.py:413} INFO - downloading https://repo1.maven.org/maven2/org/***ql/***ql/42.5.4/***ql-42.5.4.jar ...
[2024-12-14T18:05:50.829+0000] {docker.py:413} INFO - [SUCCESSFUL ] org.***ql#***ql;42.5.4!***ql.jar (3727ms)
[2024-12-14T18:05:51.125+0000] {docker.py:413} INFO - downloading https://repo1.maven.org/maven2/org/apache/spark/spark-sql-kafka-0-10_2.12/3.5.0/spark-sql-kafka-0-10_2.12-3.5.0.jar ...
[2024-12-14T18:05:53.162+0000] {docker.py:413} INFO - [SUCCESSFUL ] org.apache.spark#spark-sql-kafka-0-10_2.12;3.5.0!spark-sql-kafka-0-10_2.12.jar (2332ms)
[2024-12-14T18:05:53.459+0000] {docker.py:413} INFO - downloading https://repo1.maven.org/maven2/org/checkerframework/checker-qual/3.5.0/checker-qual-3.5.0.jar ...
[2024-12-14T18:05:55.015+0000] {docker.py:413} INFO - [SUCCESSFUL ] org.checkerframework#checker-qual;3.5.0!checker-qual.jar (1852ms)
[2024-12-14T18:05:55.319+0000] {docker.py:413} INFO - downloading https://repo1.maven.org/maven2/org/apache/spark/spark-token-provider-kafka-0-10_2.12/3.5.0/spark-token-provider-kafka-0-10_2.12-3.5.0.jar ...
[2024-12-14T18:05:55.682+0000] {docker.py:413} INFO - [SUCCESSFUL ] org.apache.spark#spark-token-provider-kafka-0-10_2.12;3.5.0!spark-token-provider-kafka-0-10_2.12.jar (664ms)
[2024-12-14T18:05:55.932+0000] {docker.py:413} INFO - downloading https://repo1.maven.org/maven2/org/apache/kafka/kafka-clients/3.4.1/kafka-clients-3.4.1.jar ...
[2024-12-14T18:06:05.591+0000] {docker.py:413} INFO - [SUCCESSFUL ] org.apache.kafka#kafka-clients;3.4.1!kafka-clients.jar (9908ms)
[2024-12-14T18:06:05.869+0000] {docker.py:413} INFO - downloading https://repo1.maven.org/maven2/com/google/code/findbugs/jsr305/3.0.0/jsr305-3.0.0.jar ...
[2024-12-14T18:06:06.180+0000] {docker.py:413} INFO - [SUCCESSFUL ] com.google.code.findbugs#jsr305;3.0.0!jsr305.jar (587ms)
[2024-12-14T18:06:06.483+0000] {docker.py:413} INFO - downloading https://repo1.maven.org/maven2/org/apache/commons/commons-pool2/2.11.1/commons-pool2-2.11.1.jar ...
[2024-12-14T18:06:07.532+0000] {docker.py:413} INFO - [SUCCESSFUL ] org.apache.commons#commons-pool2;2.11.1!commons-pool2.jar (1350ms)
[2024-12-14T18:06:07.862+0000] {docker.py:413} INFO - downloading https://repo1.maven.org/maven2/org/apache/hadoop/hadoop-client-runtime/3.3.4/hadoop-client-runtime-3.3.4.jar ...
[2024-12-14T18:06:26.586+0000] {docker.py:413} INFO - [SUCCESSFUL ] org.apache.hadoop#hadoop-client-runtime;3.3.4!hadoop-client-runtime.jar (19052ms)
[2024-12-14T18:06:26.857+0000] {docker.py:413} INFO - downloading https://repo1.maven.org/maven2/org/lz4/lz4-java/1.8.0/lz4-java-1.8.0.jar ...
[2024-12-14T18:06:39.561+0000] {docker.py:413} INFO - [SUCCESSFUL ] org.lz4#lz4-java;1.8.0!lz4-java.jar (12973ms)
[2024-12-14T18:06:39.864+0000] {docker.py:413} INFO - downloading https://repo1.maven.org/maven2/org/xerial/snappy/snappy-java/1.1.10.3/snappy-java-1.1.10.3.jar ...
[2024-12-14T18:06:40.871+0000] {docker.py:413} INFO - [SUCCESSFUL ] org.xerial.snappy#snappy-java;1.1.10.3!snappy-java.jar(bundle) (1309ms)
[2024-12-14T18:06:41.194+0000] {docker.py:413} INFO - downloading https://repo1.maven.org/maven2/org/slf4j/slf4j-api/2.0.7/slf4j-api-2.0.7.jar ...
[2024-12-14T18:06:43.865+0000] {docker.py:413} INFO - [SUCCESSFUL ] org.slf4j#slf4j-api;2.0.7!slf4j-api.jar (2992ms)
[2024-12-14T18:06:44.164+0000] {docker.py:413} INFO - downloading https://repo1.maven.org/maven2/org/apache/hadoop/hadoop-client-api/3.3.4/hadoop-client-api-3.3.4.jar ...
[2024-12-14T18:06:54.453+0000] {docker.py:413} INFO - [SUCCESSFUL ] org.apache.hadoop#hadoop-client-api;3.3.4!hadoop-client-api.jar (10587ms)
[2024-12-14T18:06:54.711+0000] {docker.py:413} INFO - downloading https://repo1.maven.org/maven2/commons-logging/commons-logging/1.1.3/commons-logging-1.1.3.jar ...
[2024-12-14T18:06:56.862+0000] {docker.py:413} INFO - [SUCCESSFUL ] commons-logging#commons-logging;1.1.3!commons-logging.jar (2407ms)
[2024-12-14T18:06:56.865+0000] {docker.py:413} INFO - :: resolution report :: resolve 31935ms :: artifacts dl 69764ms
	:: modules in use:
[2024-12-14T18:06:56.867+0000] {docker.py:413} INFO - com.google.code.findbugs#jsr305;3.0.0 from central in [default]
	commons-logging#commons-logging;1.1.3 from central in [default]
	org.apache.commons#commons-pool2;2.11.1 from central in [default]
	org.apache.hadoop#hadoop-client-api;3.3.4 from central in [default]
	org.apache.hadoop#hadoop-client-runtime;3.3.4 from central in [default]
	org.apache.kafka#kafka-clients;3.4.1 from central in [default]
	org.apache.spark#spark-sql-kafka-0-10_2.12;3.5.0 from central in [default]
	org.apache.spark#spark-token-provider-kafka-0-10_2.12;3.5.0 from central in [default]
	org.checkerframework#checker-qual;3.5.0 from central in [default]
[2024-12-14T18:06:56.868+0000] {docker.py:413} INFO - org.lz4#lz4-java;1.8.0 from central in [default]
	org.***ql#***ql;42.5.4 from central in [default]
	org.slf4j#slf4j-api;2.0.7 from central in [default]
	org.xerial.snappy#snappy-java;1.1.10.3 from central in [default]
[2024-12-14T18:06:56.870+0000] {docker.py:413} INFO - ---------------------------------------------------------------------
	|                  |            modules            ||   artifacts   |
	|       conf       | number| search|dwnlded|evicted|| number|dwnlded|
	---------------------------------------------------------------------
[2024-12-14T18:06:56.871+0000] {docker.py:413} INFO - |      default     |   13  |   13  |   13  |   0   ||   13  |   13  |
	---------------------------------------------------------------------
[2024-12-14T18:06:56.874+0000] {docker.py:413} INFO - :: retrieving :: org.apache.spark#spark-submit-parent-6e504c67-b2ed-4b0f-9cca-6fbd6718c505
	confs: [default]
[2024-12-14T18:06:56.983+0000] {docker.py:413} INFO - 13 artifacts copied, 0 already retrieved (58001kB/107ms)
[2024-12-14T18:06:57.567+0000] {docker.py:413} INFO - 24/12/14 18:06:57 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
[2024-12-14T18:07:03.576+0000] {docker.py:413} INFO - 2024-12-14 18:07:03,573 [INFO] Starting Spark Streaming job
2024-12-14 18:07:03,574 [INFO] Starting stream processing...
2024-12-14 18:07:03,574 [INFO] Creating Spark session...
[2024-12-14T18:07:03.755+0000] {docker.py:413} INFO - 24/12/14 18:07:03 INFO SparkContext: Running Spark version 3.5.0
[2024-12-14T18:07:03.756+0000] {docker.py:413} INFO - 24/12/14 18:07:03 INFO SparkContext: OS info Linux, 6.10.11-linuxkit, amd64
[2024-12-14T18:07:03.757+0000] {docker.py:413} INFO - 24/12/14 18:07:03 INFO SparkContext: Java version 17.0.10
[2024-12-14T18:07:03.801+0000] {docker.py:413} INFO - 24/12/14 18:07:03 INFO ResourceUtils: ==============================================================
[2024-12-14T18:07:03.803+0000] {docker.py:413} INFO - 24/12/14 18:07:03 INFO ResourceUtils: No custom resources configured for spark.driver.
[2024-12-14T18:07:03.804+0000] {docker.py:413} INFO - 24/12/14 18:07:03 INFO ResourceUtils: ==============================================================
[2024-12-14T18:07:03.807+0000] {docker.py:413} INFO - 24/12/14 18:07:03 INFO SparkContext: Submitted application: RedditSoccerAnalysis
[2024-12-14T18:07:03.890+0000] {docker.py:413} INFO - 24/12/14 18:07:03 INFO ResourceProfile: Default ResourceProfile created, executor resources: Map(cores -> name: cores, amount: 1, script: , vendor: , memory -> name: memory, amount: 1024, script: , vendor: , offHeap -> name: offHeap, amount: 0, script: , vendor: ), task resources: Map(cpus -> name: cpus, amount: 1.0)
[2024-12-14T18:07:03.916+0000] {docker.py:413} INFO - 24/12/14 18:07:03 INFO ResourceProfile: Limiting resource is cpu
[2024-12-14T18:07:03.918+0000] {docker.py:413} INFO - 24/12/14 18:07:03 INFO ResourceProfileManager: Added ResourceProfile id: 0
[2024-12-14T18:07:04.058+0000] {docker.py:413} INFO - 24/12/14 18:07:04 INFO SecurityManager: Changing view acls to: root,spark
[2024-12-14T18:07:04.060+0000] {docker.py:413} INFO - 24/12/14 18:07:04 INFO SecurityManager: Changing modify acls to: root,spark
[2024-12-14T18:07:04.061+0000] {docker.py:413} INFO - 24/12/14 18:07:04 INFO SecurityManager: Changing view acls groups to:
[2024-12-14T18:07:04.062+0000] {docker.py:413} INFO - 24/12/14 18:07:04 INFO SecurityManager: Changing modify acls groups to:
[2024-12-14T18:07:04.063+0000] {docker.py:413} INFO - 24/12/14 18:07:04 INFO SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users with view permissions: root, spark; groups with view permissions: EMPTY; users with modify permissions: root, spark; groups with modify permissions: EMPTY
[2024-12-14T18:07:04.730+0000] {docker.py:413} INFO - 24/12/14 18:07:04 INFO Utils: Successfully started service 'sparkDriver' on port 40773.
[2024-12-14T18:07:04.840+0000] {docker.py:413} INFO - 24/12/14 18:07:04 INFO SparkEnv: Registering MapOutputTracker
[2024-12-14T18:07:04.969+0000] {docker.py:413} INFO - 24/12/14 18:07:04 INFO SparkEnv: Registering BlockManagerMaster
[2024-12-14T18:07:05.018+0000] {docker.py:413} INFO - 24/12/14 18:07:05 INFO BlockManagerMasterEndpoint: Using org.apache.spark.storage.DefaultTopologyMapper for getting topology information
[2024-12-14T18:07:05.020+0000] {docker.py:413} INFO - 24/12/14 18:07:05 INFO BlockManagerMasterEndpoint: BlockManagerMasterEndpoint up
[2024-12-14T18:07:05.036+0000] {docker.py:413} INFO - 24/12/14 18:07:05 INFO SparkEnv: Registering BlockManagerMasterHeartbeat
[2024-12-14T18:07:05.125+0000] {docker.py:413} INFO - 24/12/14 18:07:05 INFO DiskBlockManager: Created local directory at /tmp/blockmgr-6f3efe6f-1a44-43b0-97b4-365fd9b60ef0
[2024-12-14T18:07:05.176+0000] {docker.py:413} INFO - 24/12/14 18:07:05 INFO MemoryStore: MemoryStore started with capacity 434.4 MiB
[2024-12-14T18:07:05.217+0000] {docker.py:413} INFO - 24/12/14 18:07:05 INFO SparkEnv: Registering OutputCommitCoordinator
[2024-12-14T18:07:05.561+0000] {docker.py:413} INFO - 24/12/14 18:07:05 INFO JettyUtils: Start Jetty 0.0.0.0:4040 for SparkUI
[2024-12-14T18:07:05.709+0000] {docker.py:413} INFO - 24/12/14 18:07:05 INFO Utils: Successfully started service 'SparkUI' on port 4040.
[2024-12-14T18:07:05.776+0000] {docker.py:413} INFO - 24/12/14 18:07:05 INFO SparkContext: Added JAR file:///root/.ivy2/jars/org.***ql_***ql-42.5.4.jar at spark://localhost:40773/jars/org.***ql_***ql-42.5.4.jar with timestamp 1734199623738
[2024-12-14T18:07:05.778+0000] {docker.py:413} INFO - 24/12/14 18:07:05 INFO SparkContext: Added JAR file:///root/.ivy2/jars/org.apache.spark_spark-sql-kafka-0-10_2.12-3.5.0.jar at spark://localhost:40773/jars/org.apache.spark_spark-sql-kafka-0-10_2.12-3.5.0.jar with timestamp 1734199623738
[2024-12-14T18:07:05.779+0000] {docker.py:413} INFO - 24/12/14 18:07:05 INFO SparkContext: Added JAR file:///root/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar at spark://localhost:40773/jars/org.checkerframework_checker-qual-3.5.0.jar with timestamp 1734199623738
[2024-12-14T18:07:05.780+0000] {docker.py:413} INFO - 24/12/14 18:07:05 INFO SparkContext: Added JAR file:///root/.ivy2/jars/org.apache.spark_spark-token-provider-kafka-0-10_2.12-3.5.0.jar at spark://localhost:40773/jars/org.apache.spark_spark-token-provider-kafka-0-10_2.12-3.5.0.jar with timestamp 1734199623738
[2024-12-14T18:07:05.781+0000] {docker.py:413} INFO - 24/12/14 18:07:05 INFO SparkContext: Added JAR file:///root/.ivy2/jars/org.apache.kafka_kafka-clients-3.4.1.jar at spark://localhost:40773/jars/org.apache.kafka_kafka-clients-3.4.1.jar with timestamp 1734199623738
[2024-12-14T18:07:05.783+0000] {docker.py:413} INFO - 24/12/14 18:07:05 INFO SparkContext: Added JAR file:///root/.ivy2/jars/com.google.code.findbugs_jsr305-3.0.0.jar at spark://localhost:40773/jars/com.google.code.findbugs_jsr305-3.0.0.jar with timestamp 1734199623738
[2024-12-14T18:07:05.784+0000] {docker.py:413} INFO - 24/12/14 18:07:05 INFO SparkContext: Added JAR file:///root/.ivy2/jars/org.apache.commons_commons-pool2-2.11.1.jar at spark://localhost:40773/jars/org.apache.commons_commons-pool2-2.11.1.jar with timestamp 1734199623738
[2024-12-14T18:07:05.785+0000] {docker.py:413} INFO - 24/12/14 18:07:05 INFO SparkContext: Added JAR file:///root/.ivy2/jars/org.apache.hadoop_hadoop-client-runtime-3.3.4.jar at spark://localhost:40773/jars/org.apache.hadoop_hadoop-client-runtime-3.3.4.jar with timestamp 1734199623738
[2024-12-14T18:07:05.786+0000] {docker.py:413} INFO - 24/12/14 18:07:05 INFO SparkContext: Added JAR file:///root/.ivy2/jars/org.lz4_lz4-java-1.8.0.jar at spark://localhost:40773/jars/org.lz4_lz4-java-1.8.0.jar with timestamp 1734199623738
[2024-12-14T18:07:05.787+0000] {docker.py:413} INFO - 24/12/14 18:07:05 INFO SparkContext: Added JAR file:///root/.ivy2/jars/org.xerial.snappy_snappy-java-1.1.10.3.jar at spark://localhost:40773/jars/org.xerial.snappy_snappy-java-1.1.10.3.jar with timestamp 1734199623738
[2024-12-14T18:07:05.788+0000] {docker.py:413} INFO - 24/12/14 18:07:05 INFO SparkContext: Added JAR file:///root/.ivy2/jars/org.slf4j_slf4j-api-2.0.7.jar at spark://localhost:40773/jars/org.slf4j_slf4j-api-2.0.7.jar with timestamp 1734199623738
[2024-12-14T18:07:05.789+0000] {docker.py:413} INFO - 24/12/14 18:07:05 INFO SparkContext: Added JAR file:///root/.ivy2/jars/org.apache.hadoop_hadoop-client-api-3.3.4.jar at spark://localhost:40773/jars/org.apache.hadoop_hadoop-client-api-3.3.4.jar with timestamp 1734199623738
[2024-12-14T18:07:05.790+0000] {docker.py:413} INFO - 24/12/14 18:07:05 INFO SparkContext: Added JAR file:///root/.ivy2/jars/commons-logging_commons-logging-1.1.3.jar at spark://localhost:40773/jars/commons-logging_commons-logging-1.1.3.jar with timestamp 1734199623738
[2024-12-14T18:07:05.793+0000] {docker.py:413} INFO - 24/12/14 18:07:05 INFO SparkContext: Added file file:///root/.ivy2/jars/org.***ql_***ql-42.5.4.jar at file:///root/.ivy2/jars/org.***ql_***ql-42.5.4.jar with timestamp 1734199623738
[2024-12-14T18:07:05.798+0000] {docker.py:413} INFO - 24/12/14 18:07:05 INFO Utils: Copying /root/.ivy2/jars/org.***ql_***ql-42.5.4.jar to /tmp/spark-fd534d19-1ac7-42cd-9364-e6250063a16e/userFiles-768c35c9-d2ee-4e49-90c8-b2d5fadcc6a5/org.***ql_***ql-42.5.4.jar
[2024-12-14T18:07:05.824+0000] {docker.py:413} INFO - 24/12/14 18:07:05 INFO SparkContext: Added file file:///root/.ivy2/jars/org.apache.spark_spark-sql-kafka-0-10_2.12-3.5.0.jar at file:///root/.ivy2/jars/org.apache.spark_spark-sql-kafka-0-10_2.12-3.5.0.jar with timestamp 1734199623738
24/12/14 18:07:05 INFO Utils: Copying /root/.ivy2/jars/org.apache.spark_spark-sql-kafka-0-10_2.12-3.5.0.jar to /tmp/spark-fd534d19-1ac7-42cd-9364-e6250063a16e/userFiles-768c35c9-d2ee-4e49-90c8-b2d5fadcc6a5/org.apache.spark_spark-sql-kafka-0-10_2.12-3.5.0.jar
[2024-12-14T18:07:05.832+0000] {docker.py:413} INFO - 24/12/14 18:07:05 INFO SparkContext: Added file file:///root/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar at file:///root/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar with timestamp 1734199623738
24/12/14 18:07:05 INFO Utils: Copying /root/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar to /tmp/spark-fd534d19-1ac7-42cd-9364-e6250063a16e/userFiles-768c35c9-d2ee-4e49-90c8-b2d5fadcc6a5/org.checkerframework_checker-qual-3.5.0.jar
[2024-12-14T18:07:05.838+0000] {docker.py:413} INFO - 24/12/14 18:07:05 INFO SparkContext: Added file file:///root/.ivy2/jars/org.apache.spark_spark-token-provider-kafka-0-10_2.12-3.5.0.jar at file:///root/.ivy2/jars/org.apache.spark_spark-token-provider-kafka-0-10_2.12-3.5.0.jar with timestamp 1734199623738
[2024-12-14T18:07:05.840+0000] {docker.py:413} INFO - 24/12/14 18:07:05 INFO Utils: Copying /root/.ivy2/jars/org.apache.spark_spark-token-provider-kafka-0-10_2.12-3.5.0.jar to /tmp/spark-fd534d19-1ac7-42cd-9364-e6250063a16e/userFiles-768c35c9-d2ee-4e49-90c8-b2d5fadcc6a5/org.apache.spark_spark-token-provider-kafka-0-10_2.12-3.5.0.jar
[2024-12-14T18:07:05.844+0000] {docker.py:413} INFO - 24/12/14 18:07:05 INFO SparkContext: Added file file:///root/.ivy2/jars/org.apache.kafka_kafka-clients-3.4.1.jar at file:///root/.ivy2/jars/org.apache.kafka_kafka-clients-3.4.1.jar with timestamp 1734199623738
[2024-12-14T18:07:05.845+0000] {docker.py:413} INFO - 24/12/14 18:07:05 INFO Utils: Copying /root/.ivy2/jars/org.apache.kafka_kafka-clients-3.4.1.jar to /tmp/spark-fd534d19-1ac7-42cd-9364-e6250063a16e/userFiles-768c35c9-d2ee-4e49-90c8-b2d5fadcc6a5/org.apache.kafka_kafka-clients-3.4.1.jar
[2024-12-14T18:07:05.856+0000] {docker.py:413} INFO - 24/12/14 18:07:05 INFO SparkContext: Added file file:///root/.ivy2/jars/com.google.code.findbugs_jsr305-3.0.0.jar at file:///root/.ivy2/jars/com.google.code.findbugs_jsr305-3.0.0.jar with timestamp 1734199623738
24/12/14 18:07:05 INFO Utils: Copying /root/.ivy2/jars/com.google.code.findbugs_jsr305-3.0.0.jar to /tmp/spark-fd534d19-1ac7-42cd-9364-e6250063a16e/userFiles-768c35c9-d2ee-4e49-90c8-b2d5fadcc6a5/com.google.code.findbugs_jsr305-3.0.0.jar
[2024-12-14T18:07:05.862+0000] {docker.py:413} INFO - 24/12/14 18:07:05 INFO SparkContext: Added file file:///root/.ivy2/jars/org.apache.commons_commons-pool2-2.11.1.jar at file:///root/.ivy2/jars/org.apache.commons_commons-pool2-2.11.1.jar with timestamp 1734199623738
[2024-12-14T18:07:05.863+0000] {docker.py:413} INFO - 24/12/14 18:07:05 INFO Utils: Copying /root/.ivy2/jars/org.apache.commons_commons-pool2-2.11.1.jar to /tmp/spark-fd534d19-1ac7-42cd-9364-e6250063a16e/userFiles-768c35c9-d2ee-4e49-90c8-b2d5fadcc6a5/org.apache.commons_commons-pool2-2.11.1.jar
[2024-12-14T18:07:05.869+0000] {docker.py:413} INFO - 24/12/14 18:07:05 INFO SparkContext: Added file file:///root/.ivy2/jars/org.apache.hadoop_hadoop-client-runtime-3.3.4.jar at file:///root/.ivy2/jars/org.apache.hadoop_hadoop-client-runtime-3.3.4.jar with timestamp 1734199623738
[2024-12-14T18:07:05.871+0000] {docker.py:413} INFO - 24/12/14 18:07:05 INFO Utils: Copying /root/.ivy2/jars/org.apache.hadoop_hadoop-client-runtime-3.3.4.jar to /tmp/spark-fd534d19-1ac7-42cd-9364-e6250063a16e/userFiles-768c35c9-d2ee-4e49-90c8-b2d5fadcc6a5/org.apache.hadoop_hadoop-client-runtime-3.3.4.jar
[2024-12-14T18:07:05.902+0000] {docker.py:413} INFO - 24/12/14 18:07:05 INFO SparkContext: Added file file:///root/.ivy2/jars/org.lz4_lz4-java-1.8.0.jar at file:///root/.ivy2/jars/org.lz4_lz4-java-1.8.0.jar with timestamp 1734199623738
[2024-12-14T18:07:05.903+0000] {docker.py:413} INFO - 24/12/14 18:07:05 INFO Utils: Copying /root/.ivy2/jars/org.lz4_lz4-java-1.8.0.jar to /tmp/spark-fd534d19-1ac7-42cd-9364-e6250063a16e/userFiles-768c35c9-d2ee-4e49-90c8-b2d5fadcc6a5/org.lz4_lz4-java-1.8.0.jar
[2024-12-14T18:07:05.908+0000] {docker.py:413} INFO - 24/12/14 18:07:05 INFO SparkContext: Added file file:///root/.ivy2/jars/org.xerial.snappy_snappy-java-1.1.10.3.jar at file:///root/.ivy2/jars/org.xerial.snappy_snappy-java-1.1.10.3.jar with timestamp 1734199623738
[2024-12-14T18:07:05.909+0000] {docker.py:413} INFO - 24/12/14 18:07:05 INFO Utils: Copying /root/.ivy2/jars/org.xerial.snappy_snappy-java-1.1.10.3.jar to /tmp/spark-fd534d19-1ac7-42cd-9364-e6250063a16e/userFiles-768c35c9-d2ee-4e49-90c8-b2d5fadcc6a5/org.xerial.snappy_snappy-java-1.1.10.3.jar
[2024-12-14T18:07:05.916+0000] {docker.py:413} INFO - 24/12/14 18:07:05 INFO SparkContext: Added file file:///root/.ivy2/jars/org.slf4j_slf4j-api-2.0.7.jar at file:///root/.ivy2/jars/org.slf4j_slf4j-api-2.0.7.jar with timestamp 1734199623738
[2024-12-14T18:07:05.917+0000] {docker.py:413} INFO - 24/12/14 18:07:05 INFO Utils: Copying /root/.ivy2/jars/org.slf4j_slf4j-api-2.0.7.jar to /tmp/spark-fd534d19-1ac7-42cd-9364-e6250063a16e/userFiles-768c35c9-d2ee-4e49-90c8-b2d5fadcc6a5/org.slf4j_slf4j-api-2.0.7.jar
[2024-12-14T18:07:05.924+0000] {docker.py:413} INFO - 24/12/14 18:07:05 INFO SparkContext: Added file file:///root/.ivy2/jars/org.apache.hadoop_hadoop-client-api-3.3.4.jar at file:///root/.ivy2/jars/org.apache.hadoop_hadoop-client-api-3.3.4.jar with timestamp 1734199623738
[2024-12-14T18:07:05.926+0000] {docker.py:413} INFO - 24/12/14 18:07:05 INFO Utils: Copying /root/.ivy2/jars/org.apache.hadoop_hadoop-client-api-3.3.4.jar to /tmp/spark-fd534d19-1ac7-42cd-9364-e6250063a16e/userFiles-768c35c9-d2ee-4e49-90c8-b2d5fadcc6a5/org.apache.hadoop_hadoop-client-api-3.3.4.jar
[2024-12-14T18:07:05.947+0000] {docker.py:413} INFO - 24/12/14 18:07:05 INFO SparkContext: Added file file:///root/.ivy2/jars/commons-logging_commons-logging-1.1.3.jar at file:///root/.ivy2/jars/commons-logging_commons-logging-1.1.3.jar with timestamp 1734199623738
24/12/14 18:07:05 INFO Utils: Copying /root/.ivy2/jars/commons-logging_commons-logging-1.1.3.jar to /tmp/spark-fd534d19-1ac7-42cd-9364-e6250063a16e/userFiles-768c35c9-d2ee-4e49-90c8-b2d5fadcc6a5/commons-logging_commons-logging-1.1.3.jar
[2024-12-14T18:07:06.083+0000] {docker.py:413} INFO - 24/12/14 18:07:06 INFO Executor: Starting executor ID driver on host localhost
[2024-12-14T18:07:06.084+0000] {docker.py:413} INFO - 24/12/14 18:07:06 INFO Executor: OS info Linux, 6.10.11-linuxkit, amd64
[2024-12-14T18:07:06.086+0000] {docker.py:413} INFO - 24/12/14 18:07:06 INFO Executor: Java version 17.0.10
[2024-12-14T18:07:06.098+0000] {docker.py:413} INFO - 24/12/14 18:07:06 INFO Executor: Starting executor with user classpath (userClassPathFirst = false): ''
[2024-12-14T18:07:06.099+0000] {docker.py:413} INFO - 24/12/14 18:07:06 INFO Executor: Created or updated repl class loader org.apache.spark.util.MutableURLClassLoader@6ca31720 for default.
[2024-12-14T18:07:06.134+0000] {docker.py:413} INFO - 24/12/14 18:07:06 INFO Executor: Fetching file:///root/.ivy2/jars/org.apache.spark_spark-sql-kafka-0-10_2.12-3.5.0.jar with timestamp 1734199623738
[2024-12-14T18:07:06.186+0000] {docker.py:413} INFO - 24/12/14 18:07:06 INFO Utils: /root/.ivy2/jars/org.apache.spark_spark-sql-kafka-0-10_2.12-3.5.0.jar has been previously copied to /tmp/spark-fd534d19-1ac7-42cd-9364-e6250063a16e/userFiles-768c35c9-d2ee-4e49-90c8-b2d5fadcc6a5/org.apache.spark_spark-sql-kafka-0-10_2.12-3.5.0.jar
[2024-12-14T18:07:06.192+0000] {docker.py:413} INFO - 24/12/14 18:07:06 INFO Executor: Fetching file:///root/.ivy2/jars/org.***ql_***ql-42.5.4.jar with timestamp 1734199623738
[2024-12-14T18:07:06.197+0000] {docker.py:413} INFO - 24/12/14 18:07:06 INFO Utils: /root/.ivy2/jars/org.***ql_***ql-42.5.4.jar has been previously copied to /tmp/spark-fd534d19-1ac7-42cd-9364-e6250063a16e/userFiles-768c35c9-d2ee-4e49-90c8-b2d5fadcc6a5/org.***ql_***ql-42.5.4.jar
[2024-12-14T18:07:06.202+0000] {docker.py:413} INFO - 24/12/14 18:07:06 INFO Executor: Fetching file:///root/.ivy2/jars/org.apache.hadoop_hadoop-client-api-3.3.4.jar with timestamp 1734199623738
[2024-12-14T18:07:06.237+0000] {docker.py:413} INFO - 24/12/14 18:07:06 INFO Utils: /root/.ivy2/jars/org.apache.hadoop_hadoop-client-api-3.3.4.jar has been previously copied to /tmp/spark-fd534d19-1ac7-42cd-9364-e6250063a16e/userFiles-768c35c9-d2ee-4e49-90c8-b2d5fadcc6a5/org.apache.hadoop_hadoop-client-api-3.3.4.jar
[2024-12-14T18:07:06.243+0000] {docker.py:413} INFO - 24/12/14 18:07:06 INFO Executor: Fetching file:///root/.ivy2/jars/com.google.code.findbugs_jsr305-3.0.0.jar with timestamp 1734199623738
[2024-12-14T18:07:06.245+0000] {docker.py:413} INFO - 24/12/14 18:07:06 INFO Utils: /root/.ivy2/jars/com.google.code.findbugs_jsr305-3.0.0.jar has been previously copied to /tmp/spark-fd534d19-1ac7-42cd-9364-e6250063a16e/userFiles-768c35c9-d2ee-4e49-90c8-b2d5fadcc6a5/com.google.code.findbugs_jsr305-3.0.0.jar
[2024-12-14T18:07:06.252+0000] {docker.py:413} INFO - 24/12/14 18:07:06 INFO Executor: Fetching file:///root/.ivy2/jars/org.apache.hadoop_hadoop-client-runtime-3.3.4.jar with timestamp 1734199623738
[2024-12-14T18:07:06.312+0000] {docker.py:413} INFO - 24/12/14 18:07:06 INFO Utils: /root/.ivy2/jars/org.apache.hadoop_hadoop-client-runtime-3.3.4.jar has been previously copied to /tmp/spark-fd534d19-1ac7-42cd-9364-e6250063a16e/userFiles-768c35c9-d2ee-4e49-90c8-b2d5fadcc6a5/org.apache.hadoop_hadoop-client-runtime-3.3.4.jar
[2024-12-14T18:07:06.316+0000] {docker.py:413} INFO - 24/12/14 18:07:06 INFO Executor: Fetching file:///root/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar with timestamp 1734199623738
[2024-12-14T18:07:06.317+0000] {docker.py:413} INFO - 24/12/14 18:07:06 INFO Utils: /root/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar has been previously copied to /tmp/spark-fd534d19-1ac7-42cd-9364-e6250063a16e/userFiles-768c35c9-d2ee-4e49-90c8-b2d5fadcc6a5/org.checkerframework_checker-qual-3.5.0.jar
[2024-12-14T18:07:06.323+0000] {docker.py:413} INFO - 24/12/14 18:07:06 INFO Executor: Fetching file:///root/.ivy2/jars/org.xerial.snappy_snappy-java-1.1.10.3.jar with timestamp 1734199623738
[2024-12-14T18:07:06.327+0000] {docker.py:413} INFO - 24/12/14 18:07:06 INFO Utils: /root/.ivy2/jars/org.xerial.snappy_snappy-java-1.1.10.3.jar has been previously copied to /tmp/spark-fd534d19-1ac7-42cd-9364-e6250063a16e/userFiles-768c35c9-d2ee-4e49-90c8-b2d5fadcc6a5/org.xerial.snappy_snappy-java-1.1.10.3.jar
[2024-12-14T18:07:06.334+0000] {docker.py:413} INFO - 24/12/14 18:07:06 INFO Executor: Fetching file:///root/.ivy2/jars/org.apache.spark_spark-token-provider-kafka-0-10_2.12-3.5.0.jar with timestamp 1734199623738
[2024-12-14T18:07:06.335+0000] {docker.py:413} INFO - 24/12/14 18:07:06 INFO Utils: /root/.ivy2/jars/org.apache.spark_spark-token-provider-kafka-0-10_2.12-3.5.0.jar has been previously copied to /tmp/spark-fd534d19-1ac7-42cd-9364-e6250063a16e/userFiles-768c35c9-d2ee-4e49-90c8-b2d5fadcc6a5/org.apache.spark_spark-token-provider-kafka-0-10_2.12-3.5.0.jar
[2024-12-14T18:07:06.341+0000] {docker.py:413} INFO - 24/12/14 18:07:06 INFO Executor: Fetching file:///root/.ivy2/jars/org.slf4j_slf4j-api-2.0.7.jar with timestamp 1734199623738
[2024-12-14T18:07:06.343+0000] {docker.py:413} INFO - 24/12/14 18:07:06 INFO Utils: /root/.ivy2/jars/org.slf4j_slf4j-api-2.0.7.jar has been previously copied to /tmp/spark-fd534d19-1ac7-42cd-9364-e6250063a16e/userFiles-768c35c9-d2ee-4e49-90c8-b2d5fadcc6a5/org.slf4j_slf4j-api-2.0.7.jar
[2024-12-14T18:07:06.349+0000] {docker.py:413} INFO - 24/12/14 18:07:06 INFO Executor: Fetching file:///root/.ivy2/jars/org.apache.commons_commons-pool2-2.11.1.jar with timestamp 1734199623738
[2024-12-14T18:07:06.351+0000] {docker.py:413} INFO - 24/12/14 18:07:06 INFO Utils: /root/.ivy2/jars/org.apache.commons_commons-pool2-2.11.1.jar has been previously copied to /tmp/spark-fd534d19-1ac7-42cd-9364-e6250063a16e/userFiles-768c35c9-d2ee-4e49-90c8-b2d5fadcc6a5/org.apache.commons_commons-pool2-2.11.1.jar
[2024-12-14T18:07:06.357+0000] {docker.py:413} INFO - 24/12/14 18:07:06 INFO Executor: Fetching file:///root/.ivy2/jars/commons-logging_commons-logging-1.1.3.jar with timestamp 1734199623738
[2024-12-14T18:07:06.359+0000] {docker.py:413} INFO - 24/12/14 18:07:06 INFO Utils: /root/.ivy2/jars/commons-logging_commons-logging-1.1.3.jar has been previously copied to /tmp/spark-fd534d19-1ac7-42cd-9364-e6250063a16e/userFiles-768c35c9-d2ee-4e49-90c8-b2d5fadcc6a5/commons-logging_commons-logging-1.1.3.jar
[2024-12-14T18:07:06.366+0000] {docker.py:413} INFO - 24/12/14 18:07:06 INFO Executor: Fetching file:///root/.ivy2/jars/org.lz4_lz4-java-1.8.0.jar with timestamp 1734199623738
[2024-12-14T18:07:06.368+0000] {docker.py:413} INFO - 24/12/14 18:07:06 INFO Utils: /root/.ivy2/jars/org.lz4_lz4-java-1.8.0.jar has been previously copied to /tmp/spark-fd534d19-1ac7-42cd-9364-e6250063a16e/userFiles-768c35c9-d2ee-4e49-90c8-b2d5fadcc6a5/org.lz4_lz4-java-1.8.0.jar
[2024-12-14T18:07:06.373+0000] {docker.py:413} INFO - 24/12/14 18:07:06 INFO Executor: Fetching file:///root/.ivy2/jars/org.apache.kafka_kafka-clients-3.4.1.jar with timestamp 1734199623738
[2024-12-14T18:07:06.381+0000] {docker.py:413} INFO - 24/12/14 18:07:06 INFO Utils: /root/.ivy2/jars/org.apache.kafka_kafka-clients-3.4.1.jar has been previously copied to /tmp/spark-fd534d19-1ac7-42cd-9364-e6250063a16e/userFiles-768c35c9-d2ee-4e49-90c8-b2d5fadcc6a5/org.apache.kafka_kafka-clients-3.4.1.jar
[2024-12-14T18:07:06.392+0000] {docker.py:413} INFO - 24/12/14 18:07:06 INFO Executor: Fetching spark://localhost:40773/jars/org.slf4j_slf4j-api-2.0.7.jar with timestamp 1734199623738
[2024-12-14T18:07:06.480+0000] {docker.py:413} INFO - 24/12/14 18:07:06 INFO TransportClientFactory: Successfully created connection to localhost/127.0.0.1:40773 after 61 ms (0 ms spent in bootstraps)
[2024-12-14T18:07:06.494+0000] {docker.py:413} INFO - 24/12/14 18:07:06 INFO Utils: Fetching spark://localhost:40773/jars/org.slf4j_slf4j-api-2.0.7.jar to /tmp/spark-fd534d19-1ac7-42cd-9364-e6250063a16e/userFiles-768c35c9-d2ee-4e49-90c8-b2d5fadcc6a5/fetchFileTemp8266313255861753405.tmp
[2024-12-14T18:07:06.554+0000] {docker.py:413} INFO - 24/12/14 18:07:06 INFO Utils: /tmp/spark-fd534d19-1ac7-42cd-9364-e6250063a16e/userFiles-768c35c9-d2ee-4e49-90c8-b2d5fadcc6a5/fetchFileTemp8266313255861753405.tmp has been previously copied to /tmp/spark-fd534d19-1ac7-42cd-9364-e6250063a16e/userFiles-768c35c9-d2ee-4e49-90c8-b2d5fadcc6a5/org.slf4j_slf4j-api-2.0.7.jar
[2024-12-14T18:07:06.561+0000] {docker.py:413} INFO - 24/12/14 18:07:06 INFO Executor: Adding file:/tmp/spark-fd534d19-1ac7-42cd-9364-e6250063a16e/userFiles-768c35c9-d2ee-4e49-90c8-b2d5fadcc6a5/org.slf4j_slf4j-api-2.0.7.jar to class loader default
[2024-12-14T18:07:06.563+0000] {docker.py:413} INFO - 24/12/14 18:07:06 INFO Executor: Fetching spark://localhost:40773/jars/org.apache.spark_spark-token-provider-kafka-0-10_2.12-3.5.0.jar with timestamp 1734199623738
[2024-12-14T18:07:06.565+0000] {docker.py:413} INFO - 24/12/14 18:07:06 INFO Utils: Fetching spark://localhost:40773/jars/org.apache.spark_spark-token-provider-kafka-0-10_2.12-3.5.0.jar to /tmp/spark-fd534d19-1ac7-42cd-9364-e6250063a16e/userFiles-768c35c9-d2ee-4e49-90c8-b2d5fadcc6a5/fetchFileTemp4237784368422581844.tmp
[2024-12-14T18:07:06.568+0000] {docker.py:413} INFO - 24/12/14 18:07:06 INFO Utils: /tmp/spark-fd534d19-1ac7-42cd-9364-e6250063a16e/userFiles-768c35c9-d2ee-4e49-90c8-b2d5fadcc6a5/fetchFileTemp4237784368422581844.tmp has been previously copied to /tmp/spark-fd534d19-1ac7-42cd-9364-e6250063a16e/userFiles-768c35c9-d2ee-4e49-90c8-b2d5fadcc6a5/org.apache.spark_spark-token-provider-kafka-0-10_2.12-3.5.0.jar
[2024-12-14T18:07:06.575+0000] {docker.py:413} INFO - 24/12/14 18:07:06 INFO Executor: Adding file:/tmp/spark-fd534d19-1ac7-42cd-9364-e6250063a16e/userFiles-768c35c9-d2ee-4e49-90c8-b2d5fadcc6a5/org.apache.spark_spark-token-provider-kafka-0-10_2.12-3.5.0.jar to class loader default
[2024-12-14T18:07:06.576+0000] {docker.py:413} INFO - 24/12/14 18:07:06 INFO Executor: Fetching spark://localhost:40773/jars/org.apache.spark_spark-sql-kafka-0-10_2.12-3.5.0.jar with timestamp 1734199623738
[2024-12-14T18:07:06.578+0000] {docker.py:413} INFO - 24/12/14 18:07:06 INFO Utils: Fetching spark://localhost:40773/jars/org.apache.spark_spark-sql-kafka-0-10_2.12-3.5.0.jar to /tmp/spark-fd534d19-1ac7-42cd-9364-e6250063a16e/userFiles-768c35c9-d2ee-4e49-90c8-b2d5fadcc6a5/fetchFileTemp13485563666345121096.tmp
[2024-12-14T18:07:06.586+0000] {docker.py:413} INFO - 24/12/14 18:07:06 INFO Utils: /tmp/spark-fd534d19-1ac7-42cd-9364-e6250063a16e/userFiles-768c35c9-d2ee-4e49-90c8-b2d5fadcc6a5/fetchFileTemp13485563666345121096.tmp has been previously copied to /tmp/spark-fd534d19-1ac7-42cd-9364-e6250063a16e/userFiles-768c35c9-d2ee-4e49-90c8-b2d5fadcc6a5/org.apache.spark_spark-sql-kafka-0-10_2.12-3.5.0.jar
[2024-12-14T18:07:06.592+0000] {docker.py:413} INFO - 24/12/14 18:07:06 INFO Executor: Adding file:/tmp/spark-fd534d19-1ac7-42cd-9364-e6250063a16e/userFiles-768c35c9-d2ee-4e49-90c8-b2d5fadcc6a5/org.apache.spark_spark-sql-kafka-0-10_2.12-3.5.0.jar to class loader default
[2024-12-14T18:07:06.594+0000] {docker.py:413} INFO - 24/12/14 18:07:06 INFO Executor: Fetching spark://localhost:40773/jars/com.google.code.findbugs_jsr305-3.0.0.jar with timestamp 1734199623738
[2024-12-14T18:07:06.596+0000] {docker.py:413} INFO - 24/12/14 18:07:06 INFO Utils: Fetching spark://localhost:40773/jars/com.google.code.findbugs_jsr305-3.0.0.jar to /tmp/spark-fd534d19-1ac7-42cd-9364-e6250063a16e/userFiles-768c35c9-d2ee-4e49-90c8-b2d5fadcc6a5/fetchFileTemp16802715688850215815.tmp
[2024-12-14T18:07:06.605+0000] {docker.py:413} INFO - 24/12/14 18:07:06 INFO Utils: /tmp/spark-fd534d19-1ac7-42cd-9364-e6250063a16e/userFiles-768c35c9-d2ee-4e49-90c8-b2d5fadcc6a5/fetchFileTemp16802715688850215815.tmp has been previously copied to /tmp/spark-fd534d19-1ac7-42cd-9364-e6250063a16e/userFiles-768c35c9-d2ee-4e49-90c8-b2d5fadcc6a5/com.google.code.findbugs_jsr305-3.0.0.jar
[2024-12-14T18:07:06.611+0000] {docker.py:413} INFO - 24/12/14 18:07:06 INFO Executor: Adding file:/tmp/spark-fd534d19-1ac7-42cd-9364-e6250063a16e/userFiles-768c35c9-d2ee-4e49-90c8-b2d5fadcc6a5/com.google.code.findbugs_jsr305-3.0.0.jar to class loader default
[2024-12-14T18:07:06.612+0000] {docker.py:413} INFO - 24/12/14 18:07:06 INFO Executor: Fetching spark://localhost:40773/jars/org.***ql_***ql-42.5.4.jar with timestamp 1734199623738
[2024-12-14T18:07:06.614+0000] {docker.py:413} INFO - 24/12/14 18:07:06 INFO Utils: Fetching spark://localhost:40773/jars/org.***ql_***ql-42.5.4.jar to /tmp/spark-fd534d19-1ac7-42cd-9364-e6250063a16e/userFiles-768c35c9-d2ee-4e49-90c8-b2d5fadcc6a5/fetchFileTemp9864663691969459248.tmp
[2024-12-14T18:07:06.628+0000] {docker.py:413} INFO - 24/12/14 18:07:06 INFO Utils: /tmp/spark-fd534d19-1ac7-42cd-9364-e6250063a16e/userFiles-768c35c9-d2ee-4e49-90c8-b2d5fadcc6a5/fetchFileTemp9864663691969459248.tmp has been previously copied to /tmp/spark-fd534d19-1ac7-42cd-9364-e6250063a16e/userFiles-768c35c9-d2ee-4e49-90c8-b2d5fadcc6a5/org.***ql_***ql-42.5.4.jar
[2024-12-14T18:07:06.635+0000] {docker.py:413} INFO - 24/12/14 18:07:06 INFO Executor: Adding file:/tmp/spark-fd534d19-1ac7-42cd-9364-e6250063a16e/userFiles-768c35c9-d2ee-4e49-90c8-b2d5fadcc6a5/org.***ql_***ql-42.5.4.jar to class loader default
[2024-12-14T18:07:06.637+0000] {docker.py:413} INFO - 24/12/14 18:07:06 INFO Executor: Fetching spark://localhost:40773/jars/org.lz4_lz4-java-1.8.0.jar with timestamp 1734199623738
[2024-12-14T18:07:06.639+0000] {docker.py:413} INFO - 24/12/14 18:07:06 INFO Utils: Fetching spark://localhost:40773/jars/org.lz4_lz4-java-1.8.0.jar to /tmp/spark-fd534d19-1ac7-42cd-9364-e6250063a16e/userFiles-768c35c9-d2ee-4e49-90c8-b2d5fadcc6a5/fetchFileTemp2197665825892090990.tmp
[2024-12-14T18:07:06.647+0000] {docker.py:413} INFO - 24/12/14 18:07:06 INFO Utils: /tmp/spark-fd534d19-1ac7-42cd-9364-e6250063a16e/userFiles-768c35c9-d2ee-4e49-90c8-b2d5fadcc6a5/fetchFileTemp2197665825892090990.tmp has been previously copied to /tmp/spark-fd534d19-1ac7-42cd-9364-e6250063a16e/userFiles-768c35c9-d2ee-4e49-90c8-b2d5fadcc6a5/org.lz4_lz4-java-1.8.0.jar
[2024-12-14T18:07:06.655+0000] {docker.py:413} INFO - 24/12/14 18:07:06 INFO Executor: Adding file:/tmp/spark-fd534d19-1ac7-42cd-9364-e6250063a16e/userFiles-768c35c9-d2ee-4e49-90c8-b2d5fadcc6a5/org.lz4_lz4-java-1.8.0.jar to class loader default
[2024-12-14T18:07:06.657+0000] {docker.py:413} INFO - 24/12/14 18:07:06 INFO Executor: Fetching spark://localhost:40773/jars/org.apache.commons_commons-pool2-2.11.1.jar with timestamp 1734199623738
[2024-12-14T18:07:06.659+0000] {docker.py:413} INFO - 24/12/14 18:07:06 INFO Utils: Fetching spark://localhost:40773/jars/org.apache.commons_commons-pool2-2.11.1.jar to /tmp/spark-fd534d19-1ac7-42cd-9364-e6250063a16e/userFiles-768c35c9-d2ee-4e49-90c8-b2d5fadcc6a5/fetchFileTemp10912241657490538974.tmp
[2024-12-14T18:07:06.664+0000] {docker.py:413} INFO - 24/12/14 18:07:06 INFO Utils: /tmp/spark-fd534d19-1ac7-42cd-9364-e6250063a16e/userFiles-768c35c9-d2ee-4e49-90c8-b2d5fadcc6a5/fetchFileTemp10912241657490538974.tmp has been previously copied to /tmp/spark-fd534d19-1ac7-42cd-9364-e6250063a16e/userFiles-768c35c9-d2ee-4e49-90c8-b2d5fadcc6a5/org.apache.commons_commons-pool2-2.11.1.jar
[2024-12-14T18:07:06.670+0000] {docker.py:413} INFO - 24/12/14 18:07:06 INFO Executor: Adding file:/tmp/spark-fd534d19-1ac7-42cd-9364-e6250063a16e/userFiles-768c35c9-d2ee-4e49-90c8-b2d5fadcc6a5/org.apache.commons_commons-pool2-2.11.1.jar to class loader default
[2024-12-14T18:07:06.672+0000] {docker.py:413} INFO - 24/12/14 18:07:06 INFO Executor: Fetching spark://localhost:40773/jars/org.apache.hadoop_hadoop-client-runtime-3.3.4.jar with timestamp 1734199623738
[2024-12-14T18:07:06.674+0000] {docker.py:413} INFO - 24/12/14 18:07:06 INFO Utils: Fetching spark://localhost:40773/jars/org.apache.hadoop_hadoop-client-runtime-3.3.4.jar to /tmp/spark-fd534d19-1ac7-42cd-9364-e6250063a16e/userFiles-768c35c9-d2ee-4e49-90c8-b2d5fadcc6a5/fetchFileTemp4669977978759367852.tmp
[2024-12-14T18:07:06.933+0000] {docker.py:413} INFO - 24/12/14 18:07:06 INFO Utils: /tmp/spark-fd534d19-1ac7-42cd-9364-e6250063a16e/userFiles-768c35c9-d2ee-4e49-90c8-b2d5fadcc6a5/fetchFileTemp4669977978759367852.tmp has been previously copied to /tmp/spark-fd534d19-1ac7-42cd-9364-e6250063a16e/userFiles-768c35c9-d2ee-4e49-90c8-b2d5fadcc6a5/org.apache.hadoop_hadoop-client-runtime-3.3.4.jar
[2024-12-14T18:07:06.946+0000] {docker.py:413} INFO - 24/12/14 18:07:06 INFO Executor: Adding file:/tmp/spark-fd534d19-1ac7-42cd-9364-e6250063a16e/userFiles-768c35c9-d2ee-4e49-90c8-b2d5fadcc6a5/org.apache.hadoop_hadoop-client-runtime-3.3.4.jar to class loader default
[2024-12-14T18:07:06.948+0000] {docker.py:413} INFO - 24/12/14 18:07:06 INFO Executor: Fetching spark://localhost:40773/jars/commons-logging_commons-logging-1.1.3.jar with timestamp 1734199623738
[2024-12-14T18:07:06.949+0000] {docker.py:413} INFO - 24/12/14 18:07:06 INFO Utils: Fetching spark://localhost:40773/jars/commons-logging_commons-logging-1.1.3.jar to /tmp/spark-fd534d19-1ac7-42cd-9364-e6250063a16e/userFiles-768c35c9-d2ee-4e49-90c8-b2d5fadcc6a5/fetchFileTemp3502588361470221702.tmp
[2024-12-14T18:07:06.953+0000] {docker.py:413} INFO - 24/12/14 18:07:06 INFO Utils: /tmp/spark-fd534d19-1ac7-42cd-9364-e6250063a16e/userFiles-768c35c9-d2ee-4e49-90c8-b2d5fadcc6a5/fetchFileTemp3502588361470221702.tmp has been previously copied to /tmp/spark-fd534d19-1ac7-42cd-9364-e6250063a16e/userFiles-768c35c9-d2ee-4e49-90c8-b2d5fadcc6a5/commons-logging_commons-logging-1.1.3.jar
[2024-12-14T18:07:06.962+0000] {docker.py:413} INFO - 24/12/14 18:07:06 INFO Executor: Adding file:/tmp/spark-fd534d19-1ac7-42cd-9364-e6250063a16e/userFiles-768c35c9-d2ee-4e49-90c8-b2d5fadcc6a5/commons-logging_commons-logging-1.1.3.jar to class loader default
[2024-12-14T18:07:06.963+0000] {docker.py:413} INFO - 24/12/14 18:07:06 INFO Executor: Fetching spark://localhost:40773/jars/org.xerial.snappy_snappy-java-1.1.10.3.jar with timestamp 1734199623738
[2024-12-14T18:07:06.967+0000] {docker.py:413} INFO - 24/12/14 18:07:06 INFO Utils: Fetching spark://localhost:40773/jars/org.xerial.snappy_snappy-java-1.1.10.3.jar to /tmp/spark-fd534d19-1ac7-42cd-9364-e6250063a16e/userFiles-768c35c9-d2ee-4e49-90c8-b2d5fadcc6a5/fetchFileTemp13845901259615020936.tmp
[2024-12-14T18:07:06.992+0000] {docker.py:413} INFO - 24/12/14 18:07:06 INFO Utils: /tmp/spark-fd534d19-1ac7-42cd-9364-e6250063a16e/userFiles-768c35c9-d2ee-4e49-90c8-b2d5fadcc6a5/fetchFileTemp13845901259615020936.tmp has been previously copied to /tmp/spark-fd534d19-1ac7-42cd-9364-e6250063a16e/userFiles-768c35c9-d2ee-4e49-90c8-b2d5fadcc6a5/org.xerial.snappy_snappy-java-1.1.10.3.jar
[2024-12-14T18:07:06.999+0000] {docker.py:413} INFO - 24/12/14 18:07:06 INFO Executor: Adding file:/tmp/spark-fd534d19-1ac7-42cd-9364-e6250063a16e/userFiles-768c35c9-d2ee-4e49-90c8-b2d5fadcc6a5/org.xerial.snappy_snappy-java-1.1.10.3.jar to class loader default
[2024-12-14T18:07:07.000+0000] {docker.py:413} INFO - 24/12/14 18:07:06 INFO Executor: Fetching spark://localhost:40773/jars/org.apache.kafka_kafka-clients-3.4.1.jar with timestamp 1734199623738
[2024-12-14T18:07:07.001+0000] {docker.py:413} INFO - 24/12/14 18:07:06 INFO Utils: Fetching spark://localhost:40773/jars/org.apache.kafka_kafka-clients-3.4.1.jar to /tmp/spark-fd534d19-1ac7-42cd-9364-e6250063a16e/userFiles-768c35c9-d2ee-4e49-90c8-b2d5fadcc6a5/fetchFileTemp8700182057781770647.tmp
[2024-12-14T18:07:07.035+0000] {docker.py:413} INFO - 24/12/14 18:07:07 INFO Utils: /tmp/spark-fd534d19-1ac7-42cd-9364-e6250063a16e/userFiles-768c35c9-d2ee-4e49-90c8-b2d5fadcc6a5/fetchFileTemp8700182057781770647.tmp has been previously copied to /tmp/spark-fd534d19-1ac7-42cd-9364-e6250063a16e/userFiles-768c35c9-d2ee-4e49-90c8-b2d5fadcc6a5/org.apache.kafka_kafka-clients-3.4.1.jar
[2024-12-14T18:07:07.044+0000] {docker.py:413} INFO - 24/12/14 18:07:07 INFO Executor: Adding file:/tmp/spark-fd534d19-1ac7-42cd-9364-e6250063a16e/userFiles-768c35c9-d2ee-4e49-90c8-b2d5fadcc6a5/org.apache.kafka_kafka-clients-3.4.1.jar to class loader default
[2024-12-14T18:07:07.046+0000] {docker.py:413} INFO - 24/12/14 18:07:07 INFO Executor: Fetching spark://localhost:40773/jars/org.checkerframework_checker-qual-3.5.0.jar with timestamp 1734199623738
[2024-12-14T18:07:07.048+0000] {docker.py:413} INFO - 24/12/14 18:07:07 INFO Utils: Fetching spark://localhost:40773/jars/org.checkerframework_checker-qual-3.5.0.jar to /tmp/spark-fd534d19-1ac7-42cd-9364-e6250063a16e/userFiles-768c35c9-d2ee-4e49-90c8-b2d5fadcc6a5/fetchFileTemp5942772559453651823.tmp
[2024-12-14T18:07:07.051+0000] {docker.py:413} INFO - 24/12/14 18:07:07 INFO Utils: /tmp/spark-fd534d19-1ac7-42cd-9364-e6250063a16e/userFiles-768c35c9-d2ee-4e49-90c8-b2d5fadcc6a5/fetchFileTemp5942772559453651823.tmp has been previously copied to /tmp/spark-fd534d19-1ac7-42cd-9364-e6250063a16e/userFiles-768c35c9-d2ee-4e49-90c8-b2d5fadcc6a5/org.checkerframework_checker-qual-3.5.0.jar
[2024-12-14T18:07:07.060+0000] {docker.py:413} INFO - 24/12/14 18:07:07 INFO Executor: Adding file:/tmp/spark-fd534d19-1ac7-42cd-9364-e6250063a16e/userFiles-768c35c9-d2ee-4e49-90c8-b2d5fadcc6a5/org.checkerframework_checker-qual-3.5.0.jar to class loader default
[2024-12-14T18:07:07.062+0000] {docker.py:413} INFO - 24/12/14 18:07:07 INFO Executor: Fetching spark://localhost:40773/jars/org.apache.hadoop_hadoop-client-api-3.3.4.jar with timestamp 1734199623738
[2024-12-14T18:07:07.063+0000] {docker.py:413} INFO - 24/12/14 18:07:07 INFO Utils: Fetching spark://localhost:40773/jars/org.apache.hadoop_hadoop-client-api-3.3.4.jar to /tmp/spark-fd534d19-1ac7-42cd-9364-e6250063a16e/userFiles-768c35c9-d2ee-4e49-90c8-b2d5fadcc6a5/fetchFileTemp16772202016482747133.tmp
[2024-12-14T18:07:07.201+0000] {docker.py:413} INFO - 24/12/14 18:07:07 INFO Utils: /tmp/spark-fd534d19-1ac7-42cd-9364-e6250063a16e/userFiles-768c35c9-d2ee-4e49-90c8-b2d5fadcc6a5/fetchFileTemp16772202016482747133.tmp has been previously copied to /tmp/spark-fd534d19-1ac7-42cd-9364-e6250063a16e/userFiles-768c35c9-d2ee-4e49-90c8-b2d5fadcc6a5/org.apache.hadoop_hadoop-client-api-3.3.4.jar
[2024-12-14T18:07:07.212+0000] {docker.py:413} INFO - 24/12/14 18:07:07 INFO Executor: Adding file:/tmp/spark-fd534d19-1ac7-42cd-9364-e6250063a16e/userFiles-768c35c9-d2ee-4e49-90c8-b2d5fadcc6a5/org.apache.hadoop_hadoop-client-api-3.3.4.jar to class loader default
[2024-12-14T18:07:07.235+0000] {docker.py:413} INFO - 24/12/14 18:07:07 INFO Utils: Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port 45741.
24/12/14 18:07:07 INFO NettyBlockTransferService: Server created on localhost:45741
[2024-12-14T18:07:07.240+0000] {docker.py:413} INFO - 24/12/14 18:07:07 INFO BlockManager: Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy
[2024-12-14T18:07:07.259+0000] {docker.py:413} INFO - 24/12/14 18:07:07 INFO BlockManagerMaster: Registering BlockManager BlockManagerId(driver, localhost, 45741, None)
[2024-12-14T18:07:07.268+0000] {docker.py:413} INFO - 24/12/14 18:07:07 INFO BlockManagerMasterEndpoint: Registering block manager localhost:45741 with 434.4 MiB RAM, BlockManagerId(driver, localhost, 45741, None)
[2024-12-14T18:07:07.276+0000] {docker.py:413} INFO - 24/12/14 18:07:07 INFO BlockManagerMaster: Registered BlockManager BlockManagerId(driver, localhost, 45741, None)
[2024-12-14T18:07:07.280+0000] {docker.py:413} INFO - 24/12/14 18:07:07 INFO BlockManager: Initialized BlockManager: BlockManagerId(driver, localhost, 45741, None)
[2024-12-14T18:07:08.260+0000] {docker.py:413} INFO - 2024-12-14 18:07:08,256 [INFO] Successfully created Spark session
2024-12-14 18:07:08,257 [INFO] Initializing RedditTransformer...
2024-12-14 18:07:08,257 [INFO] Loading spaCy model...
[2024-12-14T18:07:10.007+0000] {docker.py:413} INFO - 2024-12-14 18:07:10,005 [INFO] Successfully loaded spaCy model
2024-12-14 18:07:10,005 [INFO] Initialized database configuration with host: host.docker.internal
2024-12-14 18:07:10,005 [INFO] Schema initialized
2024-12-14 18:07:10,005 [INFO] Expected schema: StructType([StructField('id', StringType(), True), StructField('title', StringType(), True), StructField('author', StringType(), True), StructField('post_time', FloatType(), True), StructField('upvotes', IntegerType(), True), StructField('downvotes', IntegerType(), True), StructField('num_comments', IntegerType(), True), StructField('score', IntegerType(), True), StructField('selftext', StringType(), True), StructField('first_level_comments_count', IntegerType(), True), StructField('second_level_comments_count', IntegerType(), True), StructField('text', StringType(), True), StructField('subreddit', StringType(), True), StructField('processing_timestamp', StringType(), True)])
2024-12-14 18:07:10,005 [INFO] Database config: jdbc:***ql://host.docker.internal:5432/reddit-data
2024-12-14 18:07:10,006 [INFO] Setting up Kafka stream reader with broker: kafka:9092
[2024-12-14T18:07:10.025+0000] {docker.py:413} INFO - 24/12/14 18:07:10 INFO SharedState: Setting hive.metastore.warehouse.dir ('null') to the value of spark.sql.warehouse.dir.
[2024-12-14T18:07:10.030+0000] {docker.py:413} INFO - 24/12/14 18:07:10 INFO SharedState: Warehouse path is 'file:/opt/bitnami/spark/spark-warehouse'.
[2024-12-14T18:07:12.860+0000] {docker.py:413} INFO - 2024-12-14 18:07:12,857 [INFO] Kafka reader configuration:
2024-12-14 18:07:12,858 [INFO] Raw Kafka schema:
[2024-12-14T18:07:12.905+0000] {docker.py:413} INFO - root
 |-- key: binary (nullable = true)
 |-- value: binary (nullable = true)
 |-- topic: string (nullable = true)
 |-- partition: integer (nullable = true)
 |-- offset: long (nullable = true)
 |-- timestamp: timestamp (nullable = true)
 |-- timestampType: integer (nullable = true)

2024-12-14 18:07:12,902 [INFO] Setting up JSON parsing...
[2024-12-14T18:07:13.351+0000] {docker.py:413} INFO - 2024-12-14 18:07:13,348 [INFO] Starting streaming query...
[2024-12-14T18:07:13.393+0000] {docker.py:413} INFO - 2024-12-14 18:07:13,390 [INFO] Callback Server Starting
2024-12-14 18:07:13,390 [INFO] Socket listening on ('127.0.0.1', 36401)
[2024-12-14T18:07:13.443+0000] {docker.py:413} INFO - 24/12/14 18:07:13 INFO StateStoreCoordinatorRef: Registered StateStoreCoordinator endpoint
[2024-12-14T18:07:13.519+0000] {docker.py:413} INFO - 24/12/14 18:07:13 WARN ResolveWriteToStream: Temporary checkpoint location created which is deleted normally when the query didn't fail: /tmp/temporary-0cb2ec5f-1d98-42f4-88bf-d46ed202f1bf. If it's required to delete it under any circumstances, please set spark.sql.streaming.forceDeleteTempCheckpointLocation to true. Important to know deleting temp checkpoint folder is best effort.
[2024-12-14T18:07:13.570+0000] {docker.py:413} INFO - 24/12/14 18:07:13 INFO ResolveWriteToStream: Checkpoint root file:///tmp/temporary-0cb2ec5f-1d98-42f4-88bf-d46ed202f1bf resolved to file:/tmp/temporary-0cb2ec5f-1d98-42f4-88bf-d46ed202f1bf.
[2024-12-14T18:07:13.572+0000] {docker.py:413} INFO - 24/12/14 18:07:13 WARN ResolveWriteToStream: spark.sql.adaptive.enabled is not supported in streaming DataFrames/Datasets and will be disabled.
[2024-12-14T18:07:13.725+0000] {docker.py:413} INFO - 24/12/14 18:07:13 INFO CheckpointFileManager: Writing atomically to file:/tmp/temporary-0cb2ec5f-1d98-42f4-88bf-d46ed202f1bf/metadata using temp file file:/tmp/temporary-0cb2ec5f-1d98-42f4-88bf-d46ed202f1bf/.metadata.f9d17078-1a1b-4014-b9ee-8776e6c76383.tmp
[2024-12-14T18:07:13.850+0000] {docker.py:413} INFO - 24/12/14 18:07:13 INFO CheckpointFileManager: Renamed temp file file:/tmp/temporary-0cb2ec5f-1d98-42f4-88bf-d46ed202f1bf/.metadata.f9d17078-1a1b-4014-b9ee-8776e6c76383.tmp to file:/tmp/temporary-0cb2ec5f-1d98-42f4-88bf-d46ed202f1bf/metadata
[2024-12-14T18:07:13.909+0000] {docker.py:413} INFO - 24/12/14 18:07:13 INFO MicroBatchExecution: Starting [id = 2f4fb056-b9a8-4f6c-9ae8-6c0892f7084e, runId = 720e5be1-7578-4a45-a12a-05ded77934e0]. Use file:/tmp/temporary-0cb2ec5f-1d98-42f4-88bf-d46ed202f1bf to store the query checkpoint.
[2024-12-14T18:07:13.918+0000] {docker.py:413} INFO - 2024-12-14 18:07:13,915 [INFO] Waiting for streaming query to complete...
[2024-12-14T18:07:13.929+0000] {docker.py:413} INFO - 24/12/14 18:07:13 INFO MicroBatchExecution: Reading table [org.apache.spark.sql.kafka010.KafkaSourceProvider$KafkaTable@6f6c4e42] from DataSourceV2 named 'kafka' [org.apache.spark.sql.kafka010.KafkaSourceProvider@45f8b0e1]
[2024-12-14T18:07:13.996+0000] {docker.py:413} INFO - 24/12/14 18:07:13 INFO OffsetSeqLog: BatchIds found from listing:
[2024-12-14T18:07:14.000+0000] {docker.py:413} INFO - 24/12/14 18:07:13 INFO OffsetSeqLog: BatchIds found from listing:
[2024-12-14T18:07:14.001+0000] {docker.py:413} INFO - 24/12/14 18:07:13 INFO MicroBatchExecution: Starting new streaming query.
[2024-12-14T18:07:14.010+0000] {docker.py:413} INFO - 24/12/14 18:07:14 INFO MicroBatchExecution: Stream started from {}
[2024-12-14T18:07:14.674+0000] {docker.py:413} INFO - 24/12/14 18:07:14 INFO AdminClientConfig: AdminClientConfig values: 
	auto.include.jmx.reporter = true
	bootstrap.servers = [kafka:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
[2024-12-14T18:07:14.881+0000] {docker.py:413} INFO - 24/12/14 18:07:14 INFO AdminClientConfig: These configurations '[key.deserializer, value.deserializer, enable.auto.commit, max.poll.records, auto.offset.reset]' were supplied but are not used yet.
[2024-12-14T18:07:14.886+0000] {docker.py:413} INFO - 24/12/14 18:07:14 INFO AppInfoParser: Kafka version: 3.5.0
24/12/14 18:07:14 INFO AppInfoParser: Kafka commitId: c97b88d5db4de28d
[2024-12-14T18:07:14.890+0000] {docker.py:413} INFO - 24/12/14 18:07:14 INFO AppInfoParser: Kafka startTimeMs: 1734199634879
[2024-12-14T18:07:15.610+0000] {docker.py:413} INFO - 24/12/14 18:07:15 INFO CheckpointFileManager: Writing atomically to file:/tmp/temporary-0cb2ec5f-1d98-42f4-88bf-d46ed202f1bf/sources/0/0 using temp file file:/tmp/temporary-0cb2ec5f-1d98-42f4-88bf-d46ed202f1bf/sources/0/.0.87f7bcdf-ecc1-4c2c-8089-b2ba77678a50.tmp
[2024-12-14T18:07:15.650+0000] {docker.py:413} INFO - 24/12/14 18:07:15 INFO CheckpointFileManager: Renamed temp file file:/tmp/temporary-0cb2ec5f-1d98-42f4-88bf-d46ed202f1bf/sources/0/.0.87f7bcdf-ecc1-4c2c-8089-b2ba77678a50.tmp to file:/tmp/temporary-0cb2ec5f-1d98-42f4-88bf-d46ed202f1bf/sources/0/0
[2024-12-14T18:07:15.651+0000] {docker.py:413} INFO - 24/12/14 18:07:15 INFO KafkaMicroBatchStream: Initial offsets: {"reddit_data":{"0":0}}
[2024-12-14T18:07:15.693+0000] {docker.py:413} INFO - 24/12/14 18:07:15 INFO CheckpointFileManager: Writing atomically to file:/tmp/temporary-0cb2ec5f-1d98-42f4-88bf-d46ed202f1bf/offsets/0 using temp file file:/tmp/temporary-0cb2ec5f-1d98-42f4-88bf-d46ed202f1bf/offsets/.0.c29e409c-7093-416a-b4bd-f54bb76527ac.tmp
[2024-12-14T18:07:15.751+0000] {docker.py:413} INFO - 24/12/14 18:07:15 INFO CheckpointFileManager: Renamed temp file file:/tmp/temporary-0cb2ec5f-1d98-42f4-88bf-d46ed202f1bf/offsets/.0.c29e409c-7093-416a-b4bd-f54bb76527ac.tmp to file:/tmp/temporary-0cb2ec5f-1d98-42f4-88bf-d46ed202f1bf/offsets/0
[2024-12-14T18:07:15.753+0000] {docker.py:413} INFO - 24/12/14 18:07:15 INFO MicroBatchExecution: Committed offsets for batch 0. Metadata OffsetSeqMetadata(0,1734199635676,Map(spark.sql.streaming.stateStore.providerClass -> org.apache.spark.sql.execution.streaming.state.HDFSBackedStateStoreProvider, spark.sql.streaming.join.stateFormatVersion -> 2, spark.sql.streaming.stateStore.compression.codec -> lz4, spark.sql.streaming.stateStore.rocksdb.formatVersion -> 5, spark.sql.streaming.statefulOperator.useStrictDistribution -> true, spark.sql.streaming.flatMapGroupsWithState.stateFormatVersion -> 2, spark.sql.streaming.multipleWatermarkPolicy -> min, spark.sql.streaming.aggregation.stateFormatVersion -> 2, spark.sql.shuffle.partitions -> 200))
[2024-12-14T18:07:16.486+0000] {docker.py:413} INFO - 24/12/14 18:07:16 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-12-14T18:07:16.590+0000] {docker.py:413} INFO - 24/12/14 18:07:16 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-12-14T18:07:16.683+0000] {docker.py:413} INFO - 24/12/14 18:07:16 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-12-14T18:07:16.686+0000] {docker.py:413} INFO - 24/12/14 18:07:16 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-12-14T18:07:17.386+0000] {docker.py:413} INFO - 24/12/14 18:07:17 INFO CodeGenerator: Code generated in 377.617328 ms
[2024-12-14T18:07:17.668+0000] {docker.py:413} INFO - 2024-12-14 18:07:17,664 [INFO] Python Server ready to receive messages
2024-12-14 18:07:17,665 [INFO] Received command c on object id p0
[2024-12-14T18:07:18.142+0000] {docker.py:413} INFO - 24/12/14 18:07:18 INFO CodeGenerator: Code generated in 33.293036 ms
[2024-12-14T18:07:18.182+0000] {docker.py:413} INFO - 24/12/14 18:07:18 INFO CodeGenerator: Code generated in 20.179442 ms
[2024-12-14T18:07:18.524+0000] {docker.py:413} INFO - 24/12/14 18:07:18 INFO SparkContext: Starting job: start at NativeMethodAccessorImpl.java:0
[2024-12-14T18:07:18.579+0000] {docker.py:413} INFO - 24/12/14 18:07:18 INFO DAGScheduler: Registering RDD 6 (start at NativeMethodAccessorImpl.java:0) as input to shuffle 0
[2024-12-14T18:07:18.607+0000] {docker.py:413} INFO - 24/12/14 18:07:18 INFO DAGScheduler: Got job 0 (start at NativeMethodAccessorImpl.java:0) with 1 output partitions
[2024-12-14T18:07:18.609+0000] {docker.py:413} INFO - 24/12/14 18:07:18 INFO DAGScheduler: Final stage: ResultStage 1 (start at NativeMethodAccessorImpl.java:0)
[2024-12-14T18:07:18.611+0000] {docker.py:413} INFO - 24/12/14 18:07:18 INFO DAGScheduler: Parents of final stage: List(ShuffleMapStage 0)
[2024-12-14T18:07:18.617+0000] {docker.py:413} INFO - 24/12/14 18:07:18 INFO DAGScheduler: Missing parents: List(ShuffleMapStage 0)
[2024-12-14T18:07:18.629+0000] {docker.py:413} INFO - 24/12/14 18:07:18 INFO DAGScheduler: Submitting ShuffleMapStage 0 (MapPartitionsRDD[6] at start at NativeMethodAccessorImpl.java:0), which has no missing parents
[2024-12-14T18:07:18.874+0000] {docker.py:413} INFO - 24/12/14 18:07:18 INFO MemoryStore: Block broadcast_0 stored as values in memory (estimated size 39.5 KiB, free 434.4 MiB)
[2024-12-14T18:07:18.933+0000] {docker.py:413} INFO - 24/12/14 18:07:18 INFO MemoryStore: Block broadcast_0_piece0 stored as bytes in memory (estimated size 16.0 KiB, free 434.3 MiB)
[2024-12-14T18:07:18.940+0000] {docker.py:413} INFO - 24/12/14 18:07:18 INFO BlockManagerInfo: Added broadcast_0_piece0 in memory on localhost:45741 (size: 16.0 KiB, free: 434.4 MiB)
[2024-12-14T18:07:18.950+0000] {docker.py:413} INFO - 24/12/14 18:07:18 INFO SparkContext: Created broadcast 0 from broadcast at DAGScheduler.scala:1580
[2024-12-14T18:07:18.987+0000] {docker.py:413} INFO - 24/12/14 18:07:18 INFO DAGScheduler: Submitting 1 missing tasks from ShuffleMapStage 0 (MapPartitionsRDD[6] at start at NativeMethodAccessorImpl.java:0) (first 15 tasks are for partitions Vector(0))
[2024-12-14T18:07:18.989+0000] {docker.py:413} INFO - 24/12/14 18:07:18 INFO TaskSchedulerImpl: Adding task set 0.0 with 1 tasks resource profile 0
[2024-12-14T18:07:19.078+0000] {docker.py:413} INFO - 24/12/14 18:07:19 INFO TaskSetManager: Starting task 0.0 in stage 0.0 (TID 0) (localhost, executor driver, partition 0, PROCESS_LOCAL, 10892 bytes)
[2024-12-14T18:07:19.126+0000] {docker.py:413} INFO - 24/12/14 18:07:19 INFO Executor: Running task 0.0 in stage 0.0 (TID 0)
[2024-12-14T18:07:19.484+0000] {docker.py:413} INFO - 24/12/14 18:07:19 INFO CodeGenerator: Code generated in 64.120128 ms
[2024-12-14T18:07:19.522+0000] {docker.py:413} INFO - 24/12/14 18:07:19 INFO CodeGenerator: Code generated in 34.809915 ms
[2024-12-14T18:07:19.547+0000] {docker.py:413} INFO - 24/12/14 18:07:19 INFO CodeGenerator: Code generated in 18.653849 ms
[2024-12-14T18:07:19.567+0000] {docker.py:413} INFO - 24/12/14 18:07:19 INFO KafkaBatchReaderFactory: Creating Kafka reader topicPartition=reddit_data-0 fromOffset=0 untilOffset=500, for query queryId=2f4fb056-b9a8-4f6c-9ae8-6c0892f7084e batchId=0 taskId=0 partitionId=0
[2024-12-14T18:07:19.689+0000] {docker.py:413} INFO - 24/12/14 18:07:19 INFO CodeGenerator: Code generated in 32.047435 ms
[2024-12-14T18:07:19.735+0000] {docker.py:413} INFO - 24/12/14 18:07:19 INFO CodeGenerator: Code generated in 27.753448 ms
[2024-12-14T18:07:19.776+0000] {docker.py:413} INFO - 24/12/14 18:07:19 INFO ConsumerConfig: ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = none
	bootstrap.servers = [kafka:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-spark-kafka-source-c0615079-5755-4c8f-aae6-88e6fa01b989--2054774507-executor-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = spark-kafka-source-c0615079-5755-4c8f-aae6-88e6fa01b989--2054774507-executor
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.ByteArrayDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.ByteArrayDeserializer
[2024-12-14T18:07:19.883+0000] {docker.py:413} INFO - 24/12/14 18:07:19 INFO AppInfoParser: Kafka version: 3.5.0
24/12/14 18:07:19 INFO AppInfoParser: Kafka commitId: c97b88d5db4de28d
[2024-12-14T18:07:19.884+0000] {docker.py:413} INFO - 24/12/14 18:07:19 INFO AppInfoParser: Kafka startTimeMs: 1734199639879
[2024-12-14T18:07:19.888+0000] {docker.py:413} INFO - 24/12/14 18:07:19 INFO KafkaConsumer: [Consumer clientId=consumer-spark-kafka-source-c0615079-5755-4c8f-aae6-88e6fa01b989--2054774507-executor-1, groupId=spark-kafka-source-c0615079-5755-4c8f-aae6-88e6fa01b989--2054774507-executor] Assigned to partition(s): reddit_data-0
[2024-12-14T18:07:19.912+0000] {docker.py:413} INFO - 24/12/14 18:07:19 INFO KafkaConsumer: [Consumer clientId=consumer-spark-kafka-source-c0615079-5755-4c8f-aae6-88e6fa01b989--2054774507-executor-1, groupId=spark-kafka-source-c0615079-5755-4c8f-aae6-88e6fa01b989--2054774507-executor] Seeking to offset 0 for partition reddit_data-0
[2024-12-14T18:07:19.932+0000] {docker.py:413} INFO - 24/12/14 18:07:19 INFO Metadata: [Consumer clientId=consumer-spark-kafka-source-c0615079-5755-4c8f-aae6-88e6fa01b989--2054774507-executor-1, groupId=spark-kafka-source-c0615079-5755-4c8f-aae6-88e6fa01b989--2054774507-executor] Cluster ID: y_jx5SImQsqTV8y5Et3GdQ
[2024-12-14T18:07:20.152+0000] {docker.py:413} INFO - 24/12/14 18:07:20 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-c0615079-5755-4c8f-aae6-88e6fa01b989--2054774507-executor-1, groupId=spark-kafka-source-c0615079-5755-4c8f-aae6-88e6fa01b989--2054774507-executor] Seeking to earliest offset of partition reddit_data-0
[2024-12-14T18:07:20.165+0000] {docker.py:413} INFO - 24/12/14 18:07:20 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-c0615079-5755-4c8f-aae6-88e6fa01b989--2054774507-executor-1, groupId=spark-kafka-source-c0615079-5755-4c8f-aae6-88e6fa01b989--2054774507-executor] Resetting offset for partition reddit_data-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=26}}.
[2024-12-14T18:07:20.167+0000] {docker.py:413} INFO - 24/12/14 18:07:20 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-c0615079-5755-4c8f-aae6-88e6fa01b989--2054774507-executor-1, groupId=spark-kafka-source-c0615079-5755-4c8f-aae6-88e6fa01b989--2054774507-executor] Seeking to latest offset of partition reddit_data-0
[2024-12-14T18:07:20.170+0000] {docker.py:413} INFO - 24/12/14 18:07:20 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-c0615079-5755-4c8f-aae6-88e6fa01b989--2054774507-executor-1, groupId=spark-kafka-source-c0615079-5755-4c8f-aae6-88e6fa01b989--2054774507-executor] Resetting offset for partition reddit_data-0 to position FetchPosition{offset=500, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=26}}.
[2024-12-14T18:07:20.637+0000] {docker.py:413} INFO - 24/12/14 18:07:20 INFO KafkaDataConsumer: From Kafka topicPartition=reddit_data-0 groupId=spark-kafka-source-c0615079-5755-4c8f-aae6-88e6fa01b989--2054774507-executor read 500 records through 1 polls (polled  out 500 records), taking 260442627 nanos, during time span of 735643120 nanos.
[2024-12-14T18:07:20.669+0000] {docker.py:413} INFO - 24/12/14 18:07:20 INFO Executor: Finished task 0.0 in stage 0.0 (TID 0). 2383 bytes result sent to driver
[2024-12-14T18:07:20.693+0000] {docker.py:413} INFO - 24/12/14 18:07:20 INFO TaskSetManager: Finished task 0.0 in stage 0.0 (TID 0) in 1639 ms on localhost (executor driver) (1/1)
[2024-12-14T18:07:20.697+0000] {docker.py:413} INFO - 24/12/14 18:07:20 INFO TaskSchedulerImpl: Removed TaskSet 0.0, whose tasks have all completed, from pool
[2024-12-14T18:07:20.709+0000] {docker.py:413} INFO - 24/12/14 18:07:20 INFO DAGScheduler: ShuffleMapStage 0 (start at NativeMethodAccessorImpl.java:0) finished in 2.047 s
[2024-12-14T18:07:20.711+0000] {docker.py:413} INFO - 24/12/14 18:07:20 INFO DAGScheduler: looking for newly runnable stages
[2024-12-14T18:07:20.714+0000] {docker.py:413} INFO - 24/12/14 18:07:20 INFO DAGScheduler: running: Set()
[2024-12-14T18:07:20.715+0000] {docker.py:413} INFO - 24/12/14 18:07:20 INFO DAGScheduler: waiting: Set(ResultStage 1)
[2024-12-14T18:07:20.717+0000] {docker.py:413} INFO - 24/12/14 18:07:20 INFO DAGScheduler: failed: Set()
[2024-12-14T18:07:20.719+0000] {docker.py:413} INFO - 24/12/14 18:07:20 INFO DAGScheduler: Submitting ResultStage 1 (MapPartitionsRDD[9] at start at NativeMethodAccessorImpl.java:0), which has no missing parents
[2024-12-14T18:07:20.744+0000] {docker.py:413} INFO - 24/12/14 18:07:20 INFO MemoryStore: Block broadcast_1 stored as values in memory (estimated size 12.5 KiB, free 434.3 MiB)
[2024-12-14T18:07:20.747+0000] {docker.py:413} INFO - 24/12/14 18:07:20 INFO MemoryStore: Block broadcast_1_piece0 stored as bytes in memory (estimated size 5.9 KiB, free 434.3 MiB)
[2024-12-14T18:07:20.752+0000] {docker.py:413} INFO - 24/12/14 18:07:20 INFO BlockManagerInfo: Added broadcast_1_piece0 in memory on localhost:45741 (size: 5.9 KiB, free: 434.4 MiB)
[2024-12-14T18:07:20.753+0000] {docker.py:413} INFO - 24/12/14 18:07:20 INFO SparkContext: Created broadcast 1 from broadcast at DAGScheduler.scala:1580
[2024-12-14T18:07:20.757+0000] {docker.py:413} INFO - 24/12/14 18:07:20 INFO DAGScheduler: Submitting 1 missing tasks from ResultStage 1 (MapPartitionsRDD[9] at start at NativeMethodAccessorImpl.java:0) (first 15 tasks are for partitions Vector(0))
[2024-12-14T18:07:20.759+0000] {docker.py:413} INFO - 24/12/14 18:07:20 INFO TaskSchedulerImpl: Adding task set 1.0 with 1 tasks resource profile 0
[2024-12-14T18:07:20.779+0000] {docker.py:413} INFO - 24/12/14 18:07:20 INFO TaskSetManager: Starting task 0.0 in stage 1.0 (TID 1) (localhost, executor driver, partition 0, NODE_LOCAL, 9963 bytes)
[2024-12-14T18:07:20.784+0000] {docker.py:413} INFO - 24/12/14 18:07:20 INFO Executor: Running task 0.0 in stage 1.0 (TID 1)
[2024-12-14T18:07:20.887+0000] {docker.py:413} INFO - 24/12/14 18:07:20 INFO ShuffleBlockFetcherIterator: Getting 1 (60.0 B) non-empty blocks including 1 (60.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) push-merged-local and 0 (0.0 B) remote blocks
[2024-12-14T18:07:20.892+0000] {docker.py:413} INFO - 24/12/14 18:07:20 INFO ShuffleBlockFetcherIterator: Started 0 remote fetches in 26 ms
[2024-12-14T18:07:20.929+0000] {docker.py:413} INFO - 24/12/14 18:07:20 INFO CodeGenerator: Code generated in 25.916192 ms
[2024-12-14T18:07:20.966+0000] {docker.py:413} INFO - 24/12/14 18:07:20 INFO Executor: Finished task 0.0 in stage 1.0 (TID 1). 4038 bytes result sent to driver
[2024-12-14T18:07:20.973+0000] {docker.py:413} INFO - 24/12/14 18:07:20 INFO TaskSetManager: Finished task 0.0 in stage 1.0 (TID 1) in 202 ms on localhost (executor driver) (1/1)
[2024-12-14T18:07:20.974+0000] {docker.py:413} INFO - 24/12/14 18:07:20 INFO TaskSchedulerImpl: Removed TaskSet 1.0, whose tasks have all completed, from pool
[2024-12-14T18:07:20.978+0000] {docker.py:413} INFO - 24/12/14 18:07:20 INFO DAGScheduler: ResultStage 1 (start at NativeMethodAccessorImpl.java:0) finished in 0.238 s
[2024-12-14T18:07:20.989+0000] {docker.py:413} INFO - 24/12/14 18:07:20 INFO DAGScheduler: Job 0 is finished. Cancelling potential speculative or zombie tasks for this job
[2024-12-14T18:07:20.991+0000] {docker.py:413} INFO - 24/12/14 18:07:20 INFO TaskSchedulerImpl: Killing all running tasks in stage 1: Stage finished
[2024-12-14T18:07:20.996+0000] {docker.py:413} INFO - 24/12/14 18:07:20 INFO DAGScheduler: Job 0 finished: start at NativeMethodAccessorImpl.java:0, took 2.471815 s
[2024-12-14T18:07:21.014+0000] {docker.py:413} INFO - 2024-12-14 18:07:21,010 [INFO] Starting to process batch 0 with 500 records
2024-12-14 18:07:21,010 [INFO] Sample data from batch 0:
[2024-12-14T18:07:21.197+0000] {docker.py:413} INFO - 24/12/14 18:07:21 INFO CodeGenerator: Code generated in 26.846093 ms
[2024-12-14T18:07:21.212+0000] {docker.py:413} INFO - 24/12/14 18:07:21 INFO SparkContext: Starting job: start at NativeMethodAccessorImpl.java:0
[2024-12-14T18:07:21.215+0000] {docker.py:413} INFO - 24/12/14 18:07:21 INFO DAGScheduler: Got job 1 (start at NativeMethodAccessorImpl.java:0) with 1 output partitions
[2024-12-14T18:07:21.218+0000] {docker.py:413} INFO - 24/12/14 18:07:21 INFO DAGScheduler: Final stage: ResultStage 2 (start at NativeMethodAccessorImpl.java:0)
[2024-12-14T18:07:21.219+0000] {docker.py:413} INFO - 24/12/14 18:07:21 INFO DAGScheduler: Parents of final stage: List()
[2024-12-14T18:07:21.220+0000] {docker.py:413} INFO - 24/12/14 18:07:21 INFO DAGScheduler: Missing parents: List()
[2024-12-14T18:07:21.221+0000] {docker.py:413} INFO - 24/12/14 18:07:21 INFO DAGScheduler: Submitting ResultStage 2 (MapPartitionsRDD[11] at start at NativeMethodAccessorImpl.java:0), which has no missing parents
[2024-12-14T18:07:21.226+0000] {docker.py:413} INFO - 24/12/14 18:07:21 INFO MemoryStore: Block broadcast_2 stored as values in memory (estimated size 41.2 KiB, free 434.3 MiB)
[2024-12-14T18:07:21.230+0000] {docker.py:413} INFO - 24/12/14 18:07:21 INFO MemoryStore: Block broadcast_2_piece0 stored as bytes in memory (estimated size 15.6 KiB, free 434.3 MiB)
[2024-12-14T18:07:21.235+0000] {docker.py:413} INFO - 24/12/14 18:07:21 INFO BlockManagerInfo: Added broadcast_2_piece0 in memory on localhost:45741 (size: 15.6 KiB, free: 434.4 MiB)
[2024-12-14T18:07:21.243+0000] {docker.py:413} INFO - 24/12/14 18:07:21 INFO SparkContext: Created broadcast 2 from broadcast at DAGScheduler.scala:1580
[2024-12-14T18:07:21.244+0000] {docker.py:413} INFO - 24/12/14 18:07:21 INFO DAGScheduler: Submitting 1 missing tasks from ResultStage 2 (MapPartitionsRDD[11] at start at NativeMethodAccessorImpl.java:0) (first 15 tasks are for partitions Vector(0))
[2024-12-14T18:07:21.249+0000] {docker.py:413} INFO - 24/12/14 18:07:21 INFO TaskSchedulerImpl: Adding task set 2.0 with 1 tasks resource profile 0
[2024-12-14T18:07:21.251+0000] {docker.py:413} INFO - 24/12/14 18:07:21 INFO TaskSetManager: Starting task 0.0 in stage 2.0 (TID 2) (localhost, executor driver, partition 0, PROCESS_LOCAL, 10903 bytes)
[2024-12-14T18:07:21.255+0000] {docker.py:413} INFO - 24/12/14 18:07:21 INFO Executor: Running task 0.0 in stage 2.0 (TID 2)
[2024-12-14T18:07:21.299+0000] {docker.py:413} INFO - 24/12/14 18:07:21 INFO CodeGenerator: Code generated in 27.49138 ms
[2024-12-14T18:07:21.301+0000] {docker.py:413} INFO - 24/12/14 18:07:21 INFO KafkaBatchReaderFactory: Creating Kafka reader topicPartition=reddit_data-0 fromOffset=0 untilOffset=500, for query queryId=2f4fb056-b9a8-4f6c-9ae8-6c0892f7084e batchId=0 taskId=2 partitionId=0
[2024-12-14T18:07:21.318+0000] {docker.py:413} INFO - 24/12/14 18:07:21 INFO KafkaConsumer: [Consumer clientId=consumer-spark-kafka-source-c0615079-5755-4c8f-aae6-88e6fa01b989--2054774507-executor-1, groupId=spark-kafka-source-c0615079-5755-4c8f-aae6-88e6fa01b989--2054774507-executor] Seeking to offset 0 for partition reddit_data-0
[2024-12-14T18:07:21.337+0000] {docker.py:413} INFO - 24/12/14 18:07:21 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-c0615079-5755-4c8f-aae6-88e6fa01b989--2054774507-executor-1, groupId=spark-kafka-source-c0615079-5755-4c8f-aae6-88e6fa01b989--2054774507-executor] Seeking to earliest offset of partition reddit_data-0
[2024-12-14T18:07:21.340+0000] {docker.py:413} INFO - 24/12/14 18:07:21 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-c0615079-5755-4c8f-aae6-88e6fa01b989--2054774507-executor-1, groupId=spark-kafka-source-c0615079-5755-4c8f-aae6-88e6fa01b989--2054774507-executor] Resetting offset for partition reddit_data-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=26}}.
[2024-12-14T18:07:21.341+0000] {docker.py:413} INFO - 24/12/14 18:07:21 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-c0615079-5755-4c8f-aae6-88e6fa01b989--2054774507-executor-1, groupId=spark-kafka-source-c0615079-5755-4c8f-aae6-88e6fa01b989--2054774507-executor] Seeking to latest offset of partition reddit_data-0
[2024-12-14T18:07:21.343+0000] {docker.py:413} INFO - 24/12/14 18:07:21 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-c0615079-5755-4c8f-aae6-88e6fa01b989--2054774507-executor-1, groupId=spark-kafka-source-c0615079-5755-4c8f-aae6-88e6fa01b989--2054774507-executor] Resetting offset for partition reddit_data-0 to position FetchPosition{offset=500, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=26}}.
[2024-12-14T18:07:21.349+0000] {docker.py:413} INFO - 24/12/14 18:07:21 INFO KafkaDataConsumer: From Kafka topicPartition=reddit_data-0 groupId=spark-kafka-source-c0615079-5755-4c8f-aae6-88e6fa01b989--2054774507-executor read 3 records through 1 polls (polled  out 500 records), taking 26768132 nanos, during time span of 32121261 nanos.
[2024-12-14T18:07:21.353+0000] {docker.py:413} INFO - 24/12/14 18:07:21 INFO Executor: Finished task 0.0 in stage 2.0 (TID 2). 3680 bytes result sent to driver
[2024-12-14T18:07:21.356+0000] {docker.py:413} INFO - 24/12/14 18:07:21 INFO TaskSetManager: Finished task 0.0 in stage 2.0 (TID 2) in 117 ms on localhost (executor driver) (1/1)
24/12/14 18:07:21 INFO TaskSchedulerImpl: Removed TaskSet 2.0, whose tasks have all completed, from pool
[2024-12-14T18:07:21.360+0000] {docker.py:413} INFO - 24/12/14 18:07:21 INFO DAGScheduler: ResultStage 2 (start at NativeMethodAccessorImpl.java:0) finished in 0.138 s
[2024-12-14T18:07:21.363+0000] {docker.py:413} INFO - 24/12/14 18:07:21 INFO DAGScheduler: Job 1 is finished. Cancelling potential speculative or zombie tasks for this job
24/12/14 18:07:21 INFO TaskSchedulerImpl: Killing all running tasks in stage 2: Stage finished
[2024-12-14T18:07:21.365+0000] {docker.py:413} INFO - 24/12/14 18:07:21 INFO DAGScheduler: Job 1 finished: start at NativeMethodAccessorImpl.java:0, took 0.149406 s
[2024-12-14T18:07:22.652+0000] {docker.py:413} INFO - 24/12/14 18:07:22 INFO BlockManagerInfo: Removed broadcast_2_piece0 on localhost:45741 in memory (size: 15.6 KiB, free: 434.4 MiB)
[2024-12-14T18:07:22.669+0000] {docker.py:413} INFO - 24/12/14 18:07:22 INFO BlockManagerInfo: Removed broadcast_1_piece0 on localhost:45741 in memory (size: 5.9 KiB, free: 434.4 MiB)
[2024-12-14T18:07:23.192+0000] {docker.py:413} INFO - 24/12/14 18:07:23 INFO CodeGenerator: Code generated in 23.504123 ms
[2024-12-14T18:07:23.254+0000] {docker.py:413}
|id     |title                                                                                                                                                                                                                                                                                 |author    |post_time   |upvotes|downvotes|num_comments|score|selftext|first_level_comments_count|second_level_comments_count|text|subreddit|processing_timestamp      |

|1he0jj3|After Milan's 2-1 win against Crvena Zvezda, coach Fonseca had said: "I don't give a f... about the player's name, I work hard to give my best, some in the team don't. If I need to play players from the youth team I will do it." Today 6 youth players trained with the first team|Blodgharm |1.7341737E9 |20     |0        |2           |20   ||1                         |1                          ||soccer   |2024-12-14T11:08:32.604441|
|1he0j1x|UK TV Games & What to Watch: Sunday 15th December                                                                                                                                                                                                                                     |JammyMoore|1.73417357E9|2      |0        |1           |2    |Looking at the games on **Sunday 15th December** that are available to watch in the UK. Where to watch them and what I would watch!\n\nEarly risers can watch a tasty match from the Australian **A-League**. Newly founded **Auckland FC** are 6 wins from 6 games this season, and they travel to the seasoned **Melbourne City**.\n\nNext up is a double header of **Serie A** matches. A relegation scrap as **Lecce**, sitting 1 point outside the drop zone face **Monza** sitting in 19th. Followed up by Derby dell' Appennino, as Vincenzo Italiano's **Bologna** host his former club **Fiorentina**.\n\nThe match of the day is the Manchester Derby in the **Premier League**. Out of form **Manchester City** take on a new form **Manchester United** under Ruben Amorim.\n\nTo round of the day, a big showdown in **Ligue 1**. League leaders **PSG** take on a revived **Lyon** in what surely will be a tasty match.\n\n|Time|Fixture|Competition|Provider / Channel|\n|:-|:-|:-|:-|\n|06:00|Melbourne City v Auckland FC|A-League Men|TNT Sports 1|\n|11:30|Lecce v Monza|Serie A|OneFootball|\n|14:00|Bologna v Fiorentina|Serie A|OneFootball|\n|16:30|Manchester City v Manchester United|Premier League|Sky Sports Main Event / Sky Sports Premier League / Sky Sports Ultra HDR|\n|19:45|PSG v Lyon|Ligue 1|Ligue 1 Pass|\n\n|1                         |0                          |Looking at the games on **Sunday 15th December** that are available to watch in the UK. Where to watch them and what I would watch!\n\nEarly risers can watch a tasty match from the Australian **A-League**. Newly founded **Auckland FC** are 6 wins from 6 games this season, and they travel to the seasoned **Melbourne City**.\n\nNext up is a double header of **Serie A** matches. A relegation scrap as **Lecce**, sitting 1 point outside the drop zone face **Monza** sitting in 19th. Followed up by Derby dell' Appennino, as Vincenzo Italiano's **Bologna** host his former club **Fiorentina**.\n\nThe match of the day is the Manchester Derby in the **Premier League**. Out of form **Manchester City** take on a new form **Manchester United** under Ruben Amorim.\n\nTo round of the day, a big showdown in **Ligue 1**. League leaders **PSG** take on a revived **Lyon** in what surely will be a tasty match.\n\n|Time|Fixture|Competition|Provider / Channel|\n|:-|:-|:-|:-|\n|06:00|Melbourne City v Auckland FC|A-League Men|TNT Sports 1|\n|11:30|Lecce v Monza|Serie A|OneFootball|\n|14:00|Bologna v Fiorentina|Serie A|OneFootball|\n|16:30|Manchester City v Manchester United|Premier League|Sky Sports Main Event / Sky Sports Premier League / Sky Sports Ultra HDR|\n|19:45|PSG v Lyon|Ligue 1|Ligue 1 Pass|\n\n|soccer   |2024-12-14T11:08:33.922040|

only showing top 2 rows

2024-12-14 18:07:23,249 [INFO] Transforming posts for batch 0...
2024-12-14 18:07:23,250 [INFO] Starting posts transformation...
[2024-12-14T18:07:23.535+0000] {docker.py:413} INFO - 24/12/14 18:07:23 INFO SparkContext: Starting job: start at NativeMethodAccessorImpl.java:0
[2024-12-14T18:07:23.538+0000] {docker.py:413} INFO - 24/12/14 18:07:23 INFO DAGScheduler: Registering RDD 13 (start at NativeMethodAccessorImpl.java:0) as input to shuffle 1
[2024-12-14T18:07:23.540+0000] {docker.py:413} INFO - 24/12/14 18:07:23 INFO DAGScheduler: Got job 2 (start at NativeMethodAccessorImpl.java:0) with 1 output partitions
24/12/14 18:07:23 INFO DAGScheduler: Final stage: ResultStage 4 (start at NativeMethodAccessorImpl.java:0)
[2024-12-14T18:07:23.541+0000] {docker.py:413} INFO - 24/12/14 18:07:23 INFO DAGScheduler: Parents of final stage: List(ShuffleMapStage 3)
[2024-12-14T18:07:23.542+0000] {docker.py:413} INFO - 24/12/14 18:07:23 INFO DAGScheduler: Missing parents: List(ShuffleMapStage 3)
[2024-12-14T18:07:23.544+0000] {docker.py:413} INFO - 24/12/14 18:07:23 INFO DAGScheduler: Submitting ShuffleMapStage 3 (MapPartitionsRDD[13] at start at NativeMethodAccessorImpl.java:0), which has no missing parents
[2024-12-14T18:07:23.552+0000] {docker.py:413} INFO - 24/12/14 18:07:23 INFO MemoryStore: Block broadcast_3 stored as values in memory (estimated size 39.5 KiB, free 434.3 MiB)
[2024-12-14T18:07:23.567+0000] {docker.py:413} INFO - 24/12/14 18:07:23 INFO MemoryStore: Block broadcast_3_piece0 stored as bytes in memory (estimated size 16.0 KiB, free 434.3 MiB)
[2024-12-14T18:07:23.568+0000] {docker.py:413} INFO - 24/12/14 18:07:23 INFO BlockManagerInfo: Added broadcast_3_piece0 in memory on localhost:45741 (size: 16.0 KiB, free: 434.4 MiB)
[2024-12-14T18:07:23.570+0000] {docker.py:413} INFO - 24/12/14 18:07:23 INFO SparkContext: Created broadcast 3 from broadcast at DAGScheduler.scala:1580
[2024-12-14T18:07:23.573+0000] {docker.py:413} INFO - 24/12/14 18:07:23 INFO DAGScheduler: Submitting 1 missing tasks from ShuffleMapStage 3 (MapPartitionsRDD[13] at start at NativeMethodAccessorImpl.java:0) (first 15 tasks are for partitions Vector(0))
[2024-12-14T18:07:23.574+0000] {docker.py:413} INFO - 24/12/14 18:07:23 INFO TaskSchedulerImpl: Adding task set 3.0 with 1 tasks resource profile 0
[2024-12-14T18:07:23.580+0000] {docker.py:413} INFO - 24/12/14 18:07:23 INFO TaskSetManager: Starting task 0.0 in stage 3.0 (TID 3) (localhost, executor driver, partition 0, PROCESS_LOCAL, 10892 bytes)
[2024-12-14T18:07:23.582+0000] {docker.py:413} INFO - 24/12/14 18:07:23 INFO Executor: Running task 0.0 in stage 3.0 (TID 3)
[2024-12-14T18:07:23.611+0000] {docker.py:413} INFO - 24/12/14 18:07:23 INFO KafkaBatchReaderFactory: Creating Kafka reader topicPartition=reddit_data-0 fromOffset=0 untilOffset=500, for query queryId=2f4fb056-b9a8-4f6c-9ae8-6c0892f7084e batchId=0 taskId=3 partitionId=0
[2024-12-14T18:07:23.642+0000] {docker.py:413} INFO - 24/12/14 18:07:23 INFO BlockManagerInfo: Removed broadcast_0_piece0 on localhost:45741 in memory (size: 16.0 KiB, free: 434.4 MiB)
[2024-12-14T18:07:23.656+0000] {docker.py:413} INFO - 24/12/14 18:07:23 INFO KafkaConsumer: [Consumer clientId=consumer-spark-kafka-source-c0615079-5755-4c8f-aae6-88e6fa01b989--2054774507-executor-1, groupId=spark-kafka-source-c0615079-5755-4c8f-aae6-88e6fa01b989--2054774507-executor] Seeking to offset 0 for partition reddit_data-0
[2024-12-14T18:07:23.670+0000] {docker.py:413} INFO - 24/12/14 18:07:23 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-c0615079-5755-4c8f-aae6-88e6fa01b989--2054774507-executor-1, groupId=spark-kafka-source-c0615079-5755-4c8f-aae6-88e6fa01b989--2054774507-executor] Seeking to earliest offset of partition reddit_data-0
[2024-12-14T18:07:23.675+0000] {docker.py:413} INFO - 24/12/14 18:07:23 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-c0615079-5755-4c8f-aae6-88e6fa01b989--2054774507-executor-1, groupId=spark-kafka-source-c0615079-5755-4c8f-aae6-88e6fa01b989--2054774507-executor] Resetting offset for partition reddit_data-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=26}}.
24/12/14 18:07:23 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-c0615079-5755-4c8f-aae6-88e6fa01b989--2054774507-executor-1, groupId=spark-kafka-source-c0615079-5755-4c8f-aae6-88e6fa01b989--2054774507-executor] Seeking to latest offset of partition reddit_data-0
[2024-12-14T18:07:23.682+0000] {docker.py:413} INFO - 24/12/14 18:07:23 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-c0615079-5755-4c8f-aae6-88e6fa01b989--2054774507-executor-1, groupId=spark-kafka-source-c0615079-5755-4c8f-aae6-88e6fa01b989--2054774507-executor] Resetting offset for partition reddit_data-0 to position FetchPosition{offset=500, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=26}}.
[2024-12-14T18:07:23.772+0000] {docker.py:413} INFO - 24/12/14 18:07:23 INFO KafkaDataConsumer: From Kafka topicPartition=reddit_data-0 groupId=spark-kafka-source-c0615079-5755-4c8f-aae6-88e6fa01b989--2054774507-executor read 500 records through 1 polls (polled  out 500 records), taking 25427927 nanos, during time span of 117484836 nanos.
[2024-12-14T18:07:23.777+0000] {docker.py:413} INFO - 24/12/14 18:07:23 INFO Executor: Finished task 0.0 in stage 3.0 (TID 3). 2297 bytes result sent to driver
[2024-12-14T18:07:23.782+0000] {docker.py:413} INFO - 24/12/14 18:07:23 INFO TaskSetManager: Finished task 0.0 in stage 3.0 (TID 3) in 206 ms on localhost (executor driver) (1/1)
[2024-12-14T18:07:23.784+0000] {docker.py:413} INFO - 24/12/14 18:07:23 INFO TaskSchedulerImpl: Removed TaskSet 3.0, whose tasks have all completed, from pool
[2024-12-14T18:07:23.785+0000] {docker.py:413} INFO - 24/12/14 18:07:23 INFO DAGScheduler: ShuffleMapStage 3 (start at NativeMethodAccessorImpl.java:0) finished in 0.240 s
[2024-12-14T18:07:23.785+0000] {docker.py:413} INFO - 24/12/14 18:07:23 INFO DAGScheduler: looking for newly runnable stages
[2024-12-14T18:07:23.786+0000] {docker.py:413} INFO - 24/12/14 18:07:23 INFO DAGScheduler: running: Set()
[2024-12-14T18:07:23.787+0000] {docker.py:413} INFO - 24/12/14 18:07:23 INFO DAGScheduler: waiting: Set(ResultStage 4)
24/12/14 18:07:23 INFO DAGScheduler: failed: Set()
[2024-12-14T18:07:23.788+0000] {docker.py:413} INFO - 24/12/14 18:07:23 INFO DAGScheduler: Submitting ResultStage 4 (MapPartitionsRDD[16] at start at NativeMethodAccessorImpl.java:0), which has no missing parents
[2024-12-14T18:07:23.795+0000] {docker.py:413} INFO - 24/12/14 18:07:23 INFO MemoryStore: Block broadcast_4 stored as values in memory (estimated size 12.5 KiB, free 434.3 MiB)
[2024-12-14T18:07:23.798+0000] {docker.py:413} INFO - 24/12/14 18:07:23 INFO MemoryStore: Block broadcast_4_piece0 stored as bytes in memory (estimated size 5.9 KiB, free 434.3 MiB)
[2024-12-14T18:07:23.800+0000] {docker.py:413} INFO - 24/12/14 18:07:23 INFO BlockManagerInfo: Added broadcast_4_piece0 in memory on localhost:45741 (size: 5.9 KiB, free: 434.4 MiB)
[2024-12-14T18:07:23.801+0000] {docker.py:413} INFO - 24/12/14 18:07:23 INFO SparkContext: Created broadcast 4 from broadcast at DAGScheduler.scala:1580
[2024-12-14T18:07:23.803+0000] {docker.py:413} INFO - 24/12/14 18:07:23 INFO DAGScheduler: Submitting 1 missing tasks from ResultStage 4 (MapPartitionsRDD[16] at start at NativeMethodAccessorImpl.java:0) (first 15 tasks are for partitions Vector(0))
24/12/14 18:07:23 INFO TaskSchedulerImpl: Adding task set 4.0 with 1 tasks resource profile 0
[2024-12-14T18:07:23.807+0000] {docker.py:413} INFO - 24/12/14 18:07:23 INFO TaskSetManager: Starting task 0.0 in stage 4.0 (TID 4) (localhost, executor driver, partition 0, NODE_LOCAL, 9963 bytes)
[2024-12-14T18:07:23.810+0000] {docker.py:413} INFO - 24/12/14 18:07:23 INFO Executor: Running task 0.0 in stage 4.0 (TID 4)
[2024-12-14T18:07:23.821+0000] {docker.py:413} INFO - 24/12/14 18:07:23 INFO ShuffleBlockFetcherIterator: Getting 1 (60.0 B) non-empty blocks including 1 (60.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) push-merged-local and 0 (0.0 B) remote blocks
[2024-12-14T18:07:23.822+0000] {docker.py:413} INFO - 24/12/14 18:07:23 INFO ShuffleBlockFetcherIterator: Started 0 remote fetches in 1 ms
[2024-12-14T18:07:23.828+0000] {docker.py:413} INFO - 24/12/14 18:07:23 INFO Executor: Finished task 0.0 in stage 4.0 (TID 4). 3995 bytes result sent to driver
[2024-12-14T18:07:23.832+0000] {docker.py:413} INFO - 24/12/14 18:07:23 INFO TaskSetManager: Finished task 0.0 in stage 4.0 (TID 4) in 25 ms on localhost (executor driver) (1/1)
[2024-12-14T18:07:23.833+0000] {docker.py:413} INFO - 24/12/14 18:07:23 INFO TaskSchedulerImpl: Removed TaskSet 4.0, whose tasks have all completed, from pool
[2024-12-14T18:07:23.836+0000] {docker.py:413} INFO - 24/12/14 18:07:23 INFO DAGScheduler: ResultStage 4 (start at NativeMethodAccessorImpl.java:0) finished in 0.043 s
[2024-12-14T18:07:23.837+0000] {docker.py:413} INFO - 24/12/14 18:07:23 INFO DAGScheduler: Job 2 is finished. Cancelling potential speculative or zombie tasks for this job
24/12/14 18:07:23 INFO TaskSchedulerImpl: Killing all running tasks in stage 4: Stage finished
[2024-12-14T18:07:23.838+0000] {docker.py:413} INFO - 24/12/14 18:07:23 INFO DAGScheduler: Job 2 finished: start at NativeMethodAccessorImpl.java:0, took 0.301670 s
[2024-12-14T18:07:23.843+0000] {docker.py:413} INFO - 2024-12-14 18:07:23,838 [INFO] Successfully transformed 500 posts
[2024-12-14T18:07:23.945+0000] {docker.py:413} INFO - 24/12/14 18:07:23 INFO SparkContext: Starting job: start at NativeMethodAccessorImpl.java:0
[2024-12-14T18:07:23.948+0000] {docker.py:413} INFO - 24/12/14 18:07:23 INFO DAGScheduler: Registering RDD 18 (start at NativeMethodAccessorImpl.java:0) as input to shuffle 2
[2024-12-14T18:07:23.949+0000] {docker.py:413} INFO - 24/12/14 18:07:23 INFO DAGScheduler: Got job 3 (start at NativeMethodAccessorImpl.java:0) with 1 output partitions
24/12/14 18:07:23 INFO DAGScheduler: Final stage: ResultStage 6 (start at NativeMethodAccessorImpl.java:0)
24/12/14 18:07:23 INFO DAGScheduler: Parents of final stage: List(ShuffleMapStage 5)
[2024-12-14T18:07:23.954+0000] {docker.py:413} INFO - 24/12/14 18:07:23 INFO DAGScheduler: Missing parents: List(ShuffleMapStage 5)
[2024-12-14T18:07:23.956+0000] {docker.py:413} INFO - 24/12/14 18:07:23 INFO DAGScheduler: Submitting ShuffleMapStage 5 (MapPartitionsRDD[18] at start at NativeMethodAccessorImpl.java:0), which has no missing parents
[2024-12-14T18:07:23.959+0000] {docker.py:413} INFO - 24/12/14 18:07:23 INFO MemoryStore: Block broadcast_5 stored as values in memory (estimated size 39.5 KiB, free 434.3 MiB)
[2024-12-14T18:07:23.962+0000] {docker.py:413} INFO - 24/12/14 18:07:23 INFO MemoryStore: Block broadcast_5_piece0 stored as bytes in memory (estimated size 16.0 KiB, free 434.3 MiB)
[2024-12-14T18:07:23.964+0000] {docker.py:413} INFO - 24/12/14 18:07:23 INFO BlockManagerInfo: Added broadcast_5_piece0 in memory on localhost:45741 (size: 16.0 KiB, free: 434.4 MiB)
[2024-12-14T18:07:23.966+0000] {docker.py:413} INFO - 24/12/14 18:07:23 INFO SparkContext: Created broadcast 5 from broadcast at DAGScheduler.scala:1580
[2024-12-14T18:07:23.967+0000] {docker.py:413} INFO - 24/12/14 18:07:23 INFO DAGScheduler: Submitting 1 missing tasks from ShuffleMapStage 5 (MapPartitionsRDD[18] at start at NativeMethodAccessorImpl.java:0) (first 15 tasks are for partitions Vector(0))
24/12/14 18:07:23 INFO TaskSchedulerImpl: Adding task set 5.0 with 1 tasks resource profile 0
[2024-12-14T18:07:23.973+0000] {docker.py:413} INFO - 24/12/14 18:07:23 INFO TaskSetManager: Starting task 0.0 in stage 5.0 (TID 5) (localhost, executor driver, partition 0, PROCESS_LOCAL, 10892 bytes)
[2024-12-14T18:07:23.976+0000] {docker.py:413} INFO - 24/12/14 18:07:23 INFO Executor: Running task 0.0 in stage 5.0 (TID 5)
[2024-12-14T18:07:24.010+0000] {docker.py:413} INFO - 24/12/14 18:07:24 INFO KafkaBatchReaderFactory: Creating Kafka reader topicPartition=reddit_data-0 fromOffset=0 untilOffset=500, for query queryId=2f4fb056-b9a8-4f6c-9ae8-6c0892f7084e batchId=0 taskId=5 partitionId=0
[2024-12-14T18:07:24.039+0000] {docker.py:413} INFO - 24/12/14 18:07:24 INFO KafkaConsumer: [Consumer clientId=consumer-spark-kafka-source-c0615079-5755-4c8f-aae6-88e6fa01b989--2054774507-executor-1, groupId=spark-kafka-source-c0615079-5755-4c8f-aae6-88e6fa01b989--2054774507-executor] Seeking to offset 0 for partition reddit_data-0
[2024-12-14T18:07:24.053+0000] {docker.py:413} INFO - 24/12/14 18:07:24 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-c0615079-5755-4c8f-aae6-88e6fa01b989--2054774507-executor-1, groupId=spark-kafka-source-c0615079-5755-4c8f-aae6-88e6fa01b989--2054774507-executor] Seeking to earliest offset of partition reddit_data-0
[2024-12-14T18:07:24.056+0000] {docker.py:413} INFO - 24/12/14 18:07:24 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-c0615079-5755-4c8f-aae6-88e6fa01b989--2054774507-executor-1, groupId=spark-kafka-source-c0615079-5755-4c8f-aae6-88e6fa01b989--2054774507-executor] Resetting offset for partition reddit_data-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=26}}.
[2024-12-14T18:07:24.058+0000] {docker.py:413} INFO - 24/12/14 18:07:24 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-c0615079-5755-4c8f-aae6-88e6fa01b989--2054774507-executor-1, groupId=spark-kafka-source-c0615079-5755-4c8f-aae6-88e6fa01b989--2054774507-executor] Seeking to latest offset of partition reddit_data-0
[2024-12-14T18:07:24.061+0000] {docker.py:413} INFO - 24/12/14 18:07:24 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-c0615079-5755-4c8f-aae6-88e6fa01b989--2054774507-executor-1, groupId=spark-kafka-source-c0615079-5755-4c8f-aae6-88e6fa01b989--2054774507-executor] Resetting offset for partition reddit_data-0 to position FetchPosition{offset=500, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=26}}.
[2024-12-14T18:07:24.136+0000] {docker.py:413} INFO - 24/12/14 18:07:24 INFO KafkaDataConsumer: From Kafka topicPartition=reddit_data-0 groupId=spark-kafka-source-c0615079-5755-4c8f-aae6-88e6fa01b989--2054774507-executor read 500 records through 1 polls (polled  out 500 records), taking 23798669 nanos, during time span of 97970874 nanos.
[2024-12-14T18:07:24.140+0000] {docker.py:413} INFO - 24/12/14 18:07:24 INFO Executor: Finished task 0.0 in stage 5.0 (TID 5). 2297 bytes result sent to driver
[2024-12-14T18:07:24.142+0000] {docker.py:413} INFO - 24/12/14 18:07:24 INFO TaskSetManager: Finished task 0.0 in stage 5.0 (TID 5) in 172 ms on localhost (executor driver) (1/1)
24/12/14 18:07:24 INFO TaskSchedulerImpl: Removed TaskSet 5.0, whose tasks have all completed, from pool
[2024-12-14T18:07:24.146+0000] {docker.py:413} INFO - 24/12/14 18:07:24 INFO DAGScheduler: ShuffleMapStage 5 (start at NativeMethodAccessorImpl.java:0) finished in 0.193 s
[2024-12-14T18:07:24.147+0000] {docker.py:413} INFO - 24/12/14 18:07:24 INFO DAGScheduler: looking for newly runnable stages
[2024-12-14T18:07:24.148+0000] {docker.py:413} INFO - 24/12/14 18:07:24 INFO DAGScheduler: running: Set()
[2024-12-14T18:07:24.149+0000] {docker.py:413} INFO - 24/12/14 18:07:24 INFO DAGScheduler: waiting: Set(ResultStage 6)
[2024-12-14T18:07:24.150+0000] {docker.py:413} INFO - 24/12/14 18:07:24 INFO DAGScheduler: failed: Set()
[2024-12-14T18:07:24.151+0000] {docker.py:413} INFO - 24/12/14 18:07:24 INFO DAGScheduler: Submitting ResultStage 6 (MapPartitionsRDD[21] at start at NativeMethodAccessorImpl.java:0), which has no missing parents
[2024-12-14T18:07:24.154+0000] {docker.py:413} INFO - 24/12/14 18:07:24 INFO MemoryStore: Block broadcast_6 stored as values in memory (estimated size 12.5 KiB, free 434.3 MiB)
[2024-12-14T18:07:24.158+0000] {docker.py:413} INFO - 24/12/14 18:07:24 INFO MemoryStore: Block broadcast_6_piece0 stored as bytes in memory (estimated size 5.9 KiB, free 434.3 MiB)
[2024-12-14T18:07:24.159+0000] {docker.py:413} INFO - 24/12/14 18:07:24 INFO BlockManagerInfo: Added broadcast_6_piece0 in memory on localhost:45741 (size: 5.9 KiB, free: 434.4 MiB)
[2024-12-14T18:07:24.161+0000] {docker.py:413} INFO - 24/12/14 18:07:24 INFO SparkContext: Created broadcast 6 from broadcast at DAGScheduler.scala:1580
[2024-12-14T18:07:24.162+0000] {docker.py:413} INFO - 24/12/14 18:07:24 INFO DAGScheduler: Submitting 1 missing tasks from ResultStage 6 (MapPartitionsRDD[21] at start at NativeMethodAccessorImpl.java:0) (first 15 tasks are for partitions Vector(0))
[2024-12-14T18:07:24.163+0000] {docker.py:413} INFO - 24/12/14 18:07:24 INFO TaskSchedulerImpl: Adding task set 6.0 with 1 tasks resource profile 0
[2024-12-14T18:07:24.167+0000] {docker.py:413} INFO - 24/12/14 18:07:24 INFO TaskSetManager: Starting task 0.0 in stage 6.0 (TID 6) (localhost, executor driver, partition 0, NODE_LOCAL, 9963 bytes)
[2024-12-14T18:07:24.169+0000] {docker.py:413} INFO - 24/12/14 18:07:24 INFO Executor: Running task 0.0 in stage 6.0 (TID 6)
[2024-12-14T18:07:24.178+0000] {docker.py:413} INFO - 24/12/14 18:07:24 INFO ShuffleBlockFetcherIterator: Getting 1 (60.0 B) non-empty blocks including 1 (60.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) push-merged-local and 0 (0.0 B) remote blocks
24/12/14 18:07:24 INFO ShuffleBlockFetcherIterator: Started 0 remote fetches in 1 ms
[2024-12-14T18:07:24.183+0000] {docker.py:413} INFO - 24/12/14 18:07:24 INFO Executor: Finished task 0.0 in stage 6.0 (TID 6). 3995 bytes result sent to driver
[2024-12-14T18:07:24.186+0000] {docker.py:413} INFO - 24/12/14 18:07:24 INFO TaskSetManager: Finished task 0.0 in stage 6.0 (TID 6) in 22 ms on localhost (executor driver) (1/1)
[2024-12-14T18:07:24.187+0000] {docker.py:413} INFO - 24/12/14 18:07:24 INFO TaskSchedulerImpl: Removed TaskSet 6.0, whose tasks have all completed, from pool
[2024-12-14T18:07:24.190+0000] {docker.py:413} INFO - 24/12/14 18:07:24 INFO DAGScheduler: ResultStage 6 (start at NativeMethodAccessorImpl.java:0) finished in 0.039 s
[2024-12-14T18:07:24.192+0000] {docker.py:413} INFO - 24/12/14 18:07:24 INFO DAGScheduler: Job 3 is finished. Cancelling potential speculative or zombie tasks for this job
24/12/14 18:07:24 INFO TaskSchedulerImpl: Killing all running tasks in stage 6: Stage finished
[2024-12-14T18:07:24.193+0000] {docker.py:413} INFO - 24/12/14 18:07:24 INFO DAGScheduler: Job 3 finished: start at NativeMethodAccessorImpl.java:0, took 0.245895 s
[2024-12-14T18:07:24.197+0000] {docker.py:413} INFO - 2024-12-14 18:07:24,194 [INFO] Transformed 500 posts
2024-12-14 18:07:24,195 [INFO] Saving posts to PostgreSQL...
[2024-12-14T18:07:24.296+0000] {docker.py:413} INFO - 24/12/14 18:07:24 INFO SparkContext: Starting job: start at NativeMethodAccessorImpl.java:0
[2024-12-14T18:07:24.299+0000] {docker.py:413} INFO - 24/12/14 18:07:24 INFO DAGScheduler: Registering RDD 23 (start at NativeMethodAccessorImpl.java:0) as input to shuffle 3
[2024-12-14T18:07:24.301+0000] {docker.py:413} INFO - 24/12/14 18:07:24 INFO DAGScheduler: Got job 4 (start at NativeMethodAccessorImpl.java:0) with 1 output partitions
[2024-12-14T18:07:24.302+0000] {docker.py:413} INFO - 24/12/14 18:07:24 INFO DAGScheduler: Final stage: ResultStage 8 (start at NativeMethodAccessorImpl.java:0)
[2024-12-14T18:07:24.304+0000] {docker.py:413} INFO - 24/12/14 18:07:24 INFO DAGScheduler: Parents of final stage: List(ShuffleMapStage 7)
[2024-12-14T18:07:24.305+0000] {docker.py:413} INFO - 24/12/14 18:07:24 INFO DAGScheduler: Missing parents: List(ShuffleMapStage 7)
[2024-12-14T18:07:24.307+0000] {docker.py:413} INFO - 24/12/14 18:07:24 INFO DAGScheduler: Submitting ShuffleMapStage 7 (MapPartitionsRDD[23] at start at NativeMethodAccessorImpl.java:0), which has no missing parents
[2024-12-14T18:07:24.309+0000] {docker.py:413} INFO - 24/12/14 18:07:24 INFO MemoryStore: Block broadcast_7 stored as values in memory (estimated size 39.5 KiB, free 434.2 MiB)
[2024-12-14T18:07:24.313+0000] {docker.py:413} INFO - 24/12/14 18:07:24 INFO MemoryStore: Block broadcast_7_piece0 stored as bytes in memory (estimated size 16.0 KiB, free 434.2 MiB)
[2024-12-14T18:07:24.315+0000] {docker.py:413} INFO - 24/12/14 18:07:24 INFO BlockManagerInfo: Added broadcast_7_piece0 in memory on localhost:45741 (size: 16.0 KiB, free: 434.3 MiB)
[2024-12-14T18:07:24.320+0000] {docker.py:413} INFO - 24/12/14 18:07:24 INFO SparkContext: Created broadcast 7 from broadcast at DAGScheduler.scala:1580
[2024-12-14T18:07:24.322+0000] {docker.py:413} INFO - 24/12/14 18:07:24 INFO DAGScheduler: Submitting 1 missing tasks from ShuffleMapStage 7 (MapPartitionsRDD[23] at start at NativeMethodAccessorImpl.java:0) (first 15 tasks are for partitions Vector(0))
24/12/14 18:07:24 INFO TaskSchedulerImpl: Adding task set 7.0 with 1 tasks resource profile 0
[2024-12-14T18:07:24.323+0000] {docker.py:413} INFO - 24/12/14 18:07:24 INFO TaskSetManager: Starting task 0.0 in stage 7.0 (TID 7) (localhost, executor driver, partition 0, PROCESS_LOCAL, 10892 bytes)
[2024-12-14T18:07:24.324+0000] {docker.py:413} INFO - 24/12/14 18:07:24 INFO Executor: Running task 0.0 in stage 7.0 (TID 7)
[2024-12-14T18:07:24.347+0000] {docker.py:413} INFO - 24/12/14 18:07:24 INFO KafkaBatchReaderFactory: Creating Kafka reader topicPartition=reddit_data-0 fromOffset=0 untilOffset=500, for query queryId=2f4fb056-b9a8-4f6c-9ae8-6c0892f7084e batchId=0 taskId=7 partitionId=0
[2024-12-14T18:07:24.371+0000] {docker.py:413} INFO - 24/12/14 18:07:24 INFO KafkaConsumer: [Consumer clientId=consumer-spark-kafka-source-c0615079-5755-4c8f-aae6-88e6fa01b989--2054774507-executor-1, groupId=spark-kafka-source-c0615079-5755-4c8f-aae6-88e6fa01b989--2054774507-executor] Seeking to offset 0 for partition reddit_data-0
[2024-12-14T18:07:24.385+0000] {docker.py:413} INFO - 24/12/14 18:07:24 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-c0615079-5755-4c8f-aae6-88e6fa01b989--2054774507-executor-1, groupId=spark-kafka-source-c0615079-5755-4c8f-aae6-88e6fa01b989--2054774507-executor] Seeking to earliest offset of partition reddit_data-0
[2024-12-14T18:07:24.389+0000] {docker.py:413} INFO - 24/12/14 18:07:24 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-c0615079-5755-4c8f-aae6-88e6fa01b989--2054774507-executor-1, groupId=spark-kafka-source-c0615079-5755-4c8f-aae6-88e6fa01b989--2054774507-executor] Resetting offset for partition reddit_data-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=26}}.
[2024-12-14T18:07:24.391+0000] {docker.py:413} INFO - 24/12/14 18:07:24 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-c0615079-5755-4c8f-aae6-88e6fa01b989--2054774507-executor-1, groupId=spark-kafka-source-c0615079-5755-4c8f-aae6-88e6fa01b989--2054774507-executor] Seeking to latest offset of partition reddit_data-0
[2024-12-14T18:07:24.394+0000] {docker.py:413} INFO - 24/12/14 18:07:24 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-c0615079-5755-4c8f-aae6-88e6fa01b989--2054774507-executor-1, groupId=spark-kafka-source-c0615079-5755-4c8f-aae6-88e6fa01b989--2054774507-executor] Resetting offset for partition reddit_data-0 to position FetchPosition{offset=500, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=26}}.
[2024-12-14T18:07:24.473+0000] {docker.py:413} INFO - 24/12/14 18:07:24 INFO KafkaDataConsumer: From Kafka topicPartition=reddit_data-0 groupId=spark-kafka-source-c0615079-5755-4c8f-aae6-88e6fa01b989--2054774507-executor read 500 records through 1 polls (polled  out 500 records), taking 23501027 nanos, during time span of 101199104 nanos.
[2024-12-14T18:07:24.477+0000] {docker.py:413} INFO - 24/12/14 18:07:24 INFO Executor: Finished task 0.0 in stage 7.0 (TID 7). 2297 bytes result sent to driver
[2024-12-14T18:07:24.482+0000] {docker.py:413} INFO - 24/12/14 18:07:24 INFO TaskSetManager: Finished task 0.0 in stage 7.0 (TID 7) in 160 ms on localhost (executor driver) (1/1)
[2024-12-14T18:07:24.484+0000] {docker.py:413} INFO - 24/12/14 18:07:24 INFO TaskSchedulerImpl: Removed TaskSet 7.0, whose tasks have all completed, from pool
[2024-12-14T18:07:24.486+0000] {docker.py:413} INFO - 24/12/14 18:07:24 INFO DAGScheduler: ShuffleMapStage 7 (start at NativeMethodAccessorImpl.java:0) finished in 0.179 s
[2024-12-14T18:07:24.488+0000] {docker.py:413} INFO - 24/12/14 18:07:24 INFO DAGScheduler: looking for newly runnable stages
24/12/14 18:07:24 INFO DAGScheduler: running: Set()
[2024-12-14T18:07:24.490+0000] {docker.py:413} INFO - 24/12/14 18:07:24 INFO DAGScheduler: waiting: Set(ResultStage 8)
24/12/14 18:07:24 INFO DAGScheduler: failed: Set()
[2024-12-14T18:07:24.492+0000] {docker.py:413} INFO - 24/12/14 18:07:24 INFO DAGScheduler: Submitting ResultStage 8 (MapPartitionsRDD[26] at start at NativeMethodAccessorImpl.java:0), which has no missing parents
[2024-12-14T18:07:24.495+0000] {docker.py:413} INFO - 24/12/14 18:07:24 INFO MemoryStore: Block broadcast_8 stored as values in memory (estimated size 12.5 KiB, free 434.2 MiB)
[2024-12-14T18:07:24.496+0000] {docker.py:413} INFO - 24/12/14 18:07:24 INFO MemoryStore: Block broadcast_8_piece0 stored as bytes in memory (estimated size 5.9 KiB, free 434.2 MiB)
[2024-12-14T18:07:24.497+0000] {docker.py:413} INFO - 24/12/14 18:07:24 INFO BlockManagerInfo: Added broadcast_8_piece0 in memory on localhost:45741 (size: 5.9 KiB, free: 434.3 MiB)
[2024-12-14T18:07:24.499+0000] {docker.py:413} INFO - 24/12/14 18:07:24 INFO SparkContext: Created broadcast 8 from broadcast at DAGScheduler.scala:1580
[2024-12-14T18:07:24.501+0000] {docker.py:413} INFO - 24/12/14 18:07:24 INFO DAGScheduler: Submitting 1 missing tasks from ResultStage 8 (MapPartitionsRDD[26] at start at NativeMethodAccessorImpl.java:0) (first 15 tasks are for partitions Vector(0))
[2024-12-14T18:07:24.503+0000] {docker.py:413} INFO - 24/12/14 18:07:24 INFO TaskSchedulerImpl: Adding task set 8.0 with 1 tasks resource profile 0
[2024-12-14T18:07:24.506+0000] {docker.py:413} INFO - 24/12/14 18:07:24 INFO TaskSetManager: Starting task 0.0 in stage 8.0 (TID 8) (localhost, executor driver, partition 0, NODE_LOCAL, 9963 bytes)
[2024-12-14T18:07:24.508+0000] {docker.py:413} INFO - 24/12/14 18:07:24 INFO Executor: Running task 0.0 in stage 8.0 (TID 8)
[2024-12-14T18:07:24.522+0000] {docker.py:413} INFO - 24/12/14 18:07:24 INFO ShuffleBlockFetcherIterator: Getting 1 (60.0 B) non-empty blocks including 1 (60.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) push-merged-local and 0 (0.0 B) remote blocks
24/12/14 18:07:24 INFO ShuffleBlockFetcherIterator: Started 0 remote fetches in 1 ms
[2024-12-14T18:07:24.527+0000] {docker.py:413} INFO - 24/12/14 18:07:24 INFO Executor: Finished task 0.0 in stage 8.0 (TID 8). 3995 bytes result sent to driver
[2024-12-14T18:07:24.531+0000] {docker.py:413} INFO - 24/12/14 18:07:24 INFO TaskSetManager: Finished task 0.0 in stage 8.0 (TID 8) in 26 ms on localhost (executor driver) (1/1)
[2024-12-14T18:07:24.533+0000] {docker.py:413} INFO - 24/12/14 18:07:24 INFO TaskSchedulerImpl: Removed TaskSet 8.0, whose tasks have all completed, from pool
[2024-12-14T18:07:24.536+0000] {docker.py:413} INFO - 24/12/14 18:07:24 INFO DAGScheduler: ResultStage 8 (start at NativeMethodAccessorImpl.java:0) finished in 0.047 s
[2024-12-14T18:07:24.538+0000] {docker.py:413} INFO - 24/12/14 18:07:24 INFO DAGScheduler: Job 4 is finished. Cancelling potential speculative or zombie tasks for this job
24/12/14 18:07:24 INFO TaskSchedulerImpl: Killing all running tasks in stage 8: Stage finished
[2024-12-14T18:07:24.539+0000] {docker.py:413} INFO - 24/12/14 18:07:24 INFO DAGScheduler: Job 4 finished: start at NativeMethodAccessorImpl.java:0, took 0.240258 s
[2024-12-14T18:07:24.541+0000] {docker.py:413} INFO - 2024-12-14 18:07:24,539 [INFO] Attempting to save 500 rows to table reddit_posts
2024-12-14 18:07:24,539 [INFO] Sample data for table reddit_posts:
[2024-12-14T18:07:24.680+0000] {docker.py:413} INFO - 24/12/14 18:07:24 INFO BlockManagerInfo: Removed broadcast_8_piece0 on localhost:45741 in memory (size: 5.9 KiB, free: 434.3 MiB)
[2024-12-14T18:07:24.706+0000] {docker.py:413} INFO - 24/12/14 18:07:24 INFO BlockManagerInfo: Removed broadcast_6_piece0 on localhost:45741 in memory (size: 5.9 KiB, free: 434.3 MiB)
[2024-12-14T18:07:24.727+0000] {docker.py:413} INFO - 24/12/14 18:07:24 INFO BlockManagerInfo: Removed broadcast_4_piece0 on localhost:45741 in memory (size: 5.9 KiB, free: 434.4 MiB)
[2024-12-14T18:07:24.749+0000] {docker.py:413} INFO - 24/12/14 18:07:24 INFO BlockManagerInfo: Removed broadcast_5_piece0 on localhost:45741 in memory (size: 16.0 KiB, free: 434.4 MiB)
[2024-12-14T18:07:24.769+0000] {docker.py:413} INFO - 24/12/14 18:07:24 INFO BlockManagerInfo: Removed broadcast_3_piece0 on localhost:45741 in memory (size: 16.0 KiB, free: 434.4 MiB)
[2024-12-14T18:07:24.789+0000] {docker.py:413} INFO - 24/12/14 18:07:24 INFO BlockManagerInfo: Removed broadcast_7_piece0 on localhost:45741 in memory (size: 16.0 KiB, free: 434.4 MiB)
[2024-12-14T18:07:25.056+0000] {docker.py:413} INFO - 24/12/14 18:07:25 INFO CodeGenerator: Code generated in 46.669021 ms
[2024-12-14T18:07:25.084+0000] {docker.py:413} INFO - 24/12/14 18:07:25 INFO SparkContext: Starting job: start at NativeMethodAccessorImpl.java:0
[2024-12-14T18:07:25.088+0000] {docker.py:413} INFO - 24/12/14 18:07:25 INFO DAGScheduler: Got job 5 (start at NativeMethodAccessorImpl.java:0) with 1 output partitions
24/12/14 18:07:25 INFO DAGScheduler: Final stage: ResultStage 9 (start at NativeMethodAccessorImpl.java:0)
[2024-12-14T18:07:25.090+0000] {docker.py:413} INFO - 24/12/14 18:07:25 INFO DAGScheduler: Parents of final stage: List()
[2024-12-14T18:07:25.092+0000] {docker.py:413} INFO - 24/12/14 18:07:25 INFO DAGScheduler: Missing parents: List()
[2024-12-14T18:07:25.094+0000] {docker.py:413} INFO - 24/12/14 18:07:25 INFO DAGScheduler: Submitting ResultStage 9 (MapPartitionsRDD[28] at start at NativeMethodAccessorImpl.java:0), which has no missing parents
[2024-12-14T18:07:25.099+0000] {docker.py:413} INFO - 24/12/14 18:07:25 INFO MemoryStore: Block broadcast_9 stored as values in memory (estimated size 43.6 KiB, free 434.4 MiB)
[2024-12-14T18:07:25.106+0000] {docker.py:413} INFO - 24/12/14 18:07:25 INFO MemoryStore: Block broadcast_9_piece0 stored as bytes in memory (estimated size 16.9 KiB, free 434.3 MiB)
[2024-12-14T18:07:25.109+0000] {docker.py:413} INFO - 24/12/14 18:07:25 INFO BlockManagerInfo: Added broadcast_9_piece0 in memory on localhost:45741 (size: 16.9 KiB, free: 434.4 MiB)
[2024-12-14T18:07:25.112+0000] {docker.py:413} INFO - 24/12/14 18:07:25 INFO SparkContext: Created broadcast 9 from broadcast at DAGScheduler.scala:1580
[2024-12-14T18:07:25.114+0000] {docker.py:413} INFO - 24/12/14 18:07:25 INFO DAGScheduler: Submitting 1 missing tasks from ResultStage 9 (MapPartitionsRDD[28] at start at NativeMethodAccessorImpl.java:0) (first 15 tasks are for partitions Vector(0))
24/12/14 18:07:25 INFO TaskSchedulerImpl: Adding task set 9.0 with 1 tasks resource profile 0
[2024-12-14T18:07:25.121+0000] {docker.py:413} INFO - 24/12/14 18:07:25 INFO TaskSetManager: Starting task 0.0 in stage 9.0 (TID 9) (localhost, executor driver, partition 0, PROCESS_LOCAL, 10903 bytes)
[2024-12-14T18:07:25.124+0000] {docker.py:413} INFO - 24/12/14 18:07:25 INFO Executor: Running task 0.0 in stage 9.0 (TID 9)
[2024-12-14T18:07:25.196+0000] {docker.py:413} INFO - 24/12/14 18:07:25 INFO CodeGenerator: Code generated in 44.336485 ms
[2024-12-14T18:07:25.200+0000] {docker.py:413} INFO - 24/12/14 18:07:25 INFO KafkaBatchReaderFactory: Creating Kafka reader topicPartition=reddit_data-0 fromOffset=0 untilOffset=500, for query queryId=2f4fb056-b9a8-4f6c-9ae8-6c0892f7084e batchId=0 taskId=9 partitionId=0
[2024-12-14T18:07:25.233+0000] {docker.py:413} INFO - 24/12/14 18:07:25 INFO KafkaConsumer: [Consumer clientId=consumer-spark-kafka-source-c0615079-5755-4c8f-aae6-88e6fa01b989--2054774507-executor-1, groupId=spark-kafka-source-c0615079-5755-4c8f-aae6-88e6fa01b989--2054774507-executor] Seeking to offset 0 for partition reddit_data-0
[2024-12-14T18:07:25.246+0000] {docker.py:413} INFO - 24/12/14 18:07:25 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-c0615079-5755-4c8f-aae6-88e6fa01b989--2054774507-executor-1, groupId=spark-kafka-source-c0615079-5755-4c8f-aae6-88e6fa01b989--2054774507-executor] Seeking to earliest offset of partition reddit_data-0
[2024-12-14T18:07:25.252+0000] {docker.py:413} INFO - 24/12/14 18:07:25 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-c0615079-5755-4c8f-aae6-88e6fa01b989--2054774507-executor-1, groupId=spark-kafka-source-c0615079-5755-4c8f-aae6-88e6fa01b989--2054774507-executor] Resetting offset for partition reddit_data-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=26}}.
[2024-12-14T18:07:25.254+0000] {docker.py:413} INFO - 24/12/14 18:07:25 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-c0615079-5755-4c8f-aae6-88e6fa01b989--2054774507-executor-1, groupId=spark-kafka-source-c0615079-5755-4c8f-aae6-88e6fa01b989--2054774507-executor] Seeking to latest offset of partition reddit_data-0
[2024-12-14T18:07:25.256+0000] {docker.py:413} INFO - 24/12/14 18:07:25 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-c0615079-5755-4c8f-aae6-88e6fa01b989--2054774507-executor-1, groupId=spark-kafka-source-c0615079-5755-4c8f-aae6-88e6fa01b989--2054774507-executor] Resetting offset for partition reddit_data-0 to position FetchPosition{offset=500, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=26}}.
[2024-12-14T18:07:25.271+0000] {docker.py:413} INFO - 24/12/14 18:07:25 INFO KafkaDataConsumer: From Kafka topicPartition=reddit_data-0 groupId=spark-kafka-source-c0615079-5755-4c8f-aae6-88e6fa01b989--2054774507-executor read 3 records through 1 polls (polled  out 500 records), taking 24676384 nanos, during time span of 39172007 nanos.
[2024-12-14T18:07:25.275+0000] {docker.py:413} INFO - 24/12/14 18:07:25 INFO Executor: Finished task 0.0 in stage 9.0 (TID 9). 3672 bytes result sent to driver
[2024-12-14T18:07:25.278+0000] {docker.py:413} INFO - 24/12/14 18:07:25 INFO TaskSetManager: Finished task 0.0 in stage 9.0 (TID 9) in 161 ms on localhost (executor driver) (1/1)
[2024-12-14T18:07:25.281+0000] {docker.py:413} INFO - 24/12/14 18:07:25 INFO TaskSchedulerImpl: Removed TaskSet 9.0, whose tasks have all completed, from pool
[2024-12-14T18:07:25.282+0000] {docker.py:413} INFO - 24/12/14 18:07:25 INFO DAGScheduler: ResultStage 9 (start at NativeMethodAccessorImpl.java:0) finished in 0.187 s
[2024-12-14T18:07:25.284+0000] {docker.py:413} INFO - 24/12/14 18:07:25 INFO DAGScheduler: Job 5 is finished. Cancelling potential speculative or zombie tasks for this job
24/12/14 18:07:25 INFO TaskSchedulerImpl: Killing all running tasks in stage 9: Stage finished
[2024-12-14T18:07:25.285+0000] {docker.py:413} INFO - 24/12/14 18:07:25 INFO DAGScheduler: Job 5 finished: start at NativeMethodAccessorImpl.java:0, took 0.198086 s
[2024-12-14T18:07:25.322+0000] {docker.py:413} INFO - 24/12/14 18:07:25 INFO CodeGenerator: Code generated in 23.443355 ms
[2024-12-14T18:07:25.370+0000] {docker.py:413}
|post_id|title                                                                                                                                                                                                                                                                                 |author    |post_time          |upvotes|downvotes|num_comments|score|text|first_level_comments_count|second_level_comments_count|subreddit|hour_of_day|day_of_week|created_at                |

|1he0jj3|After Milan's 2-1 win against Crvena Zvezda, coach Fonseca had said: "I don't give a f... about the player's name, I work hard to give my best, some in the team don't. If I need to play players from the youth team I will do it." Today 6 youth players trained with the first team|Blodgharm |2024-12-14 10:54:56|20     |0        |2           |20   |                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     |1                         |1                          |soccer   |10         |7          |2024-12-14 18:07:24.616435|
|1he0j1x|UK TV Games & What to Watch: Sunday 15th December                                                                                                                                                                                                                                     |JammyMoore|2024-12-14 10:52:48|2      |0        |1           |2    |Looking at the games on **Sunday 15th December** that are available to watch in the UK. Where to watch them and what I would watch!\n\nEarly risers can watch a tasty match from the Australian **A-League**. Newly founded **Auckland FC** are 6 wins from 6 games this season, and they travel to the seasoned **Melbourne City**.\n\nNext up is a double header of **Serie A** matches. A relegation scrap as **Lecce**, sitting 1 point outside the drop zone face **Monza** sitting in 19th. Followed up by Derby dell' Appennino, as Vincenzo Italiano's **Bologna** host his former club **Fiorentina**.\n\nThe match of the day is the Manchester Derby in the **Premier League**. Out of form **Manchester City** take on a new form **Manchester United** under Ruben Amorim.\n\nTo round of the day, a big showdown in **Ligue 1**. League leaders **PSG** take on a revived **Lyon** in what surely will be a tasty match.\n\n|Time|Fixture|Competition|Provider / Channel|\n|:-|:-|:-|:-|\n|06:00|Melbourne City v Auckland FC|A-League Men|TNT Sports 1|\n|11:30|Lecce v Monza|Serie A|OneFootball|\n|14:00|Bologna v Fiorentina|Serie A|OneFootball|\n|16:30|Manchester City v Manchester United|Premier League|Sky Sports Main Event / Sky Sports Premier League / Sky Sports Ultra HDR|\n|19:45|PSG v Lyon|Ligue 1|Ligue 1 Pass|\n\n|1                         |0                          |soccer   |10         |7          |2024-12-14 18:07:24.616435|
+-------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+----------+-------------------+-------+---------+------------+-----+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+--------------------------+---------------------------+---------+-----------+-----------+--------------------------+
only showing top 2 rows
[2024-12-14T18:07:26.702+0000] {docker.py:413} INFO - 24/12/14 18:07:26 INFO CodeGenerator: Code generated in 54.750678 ms
[2024-12-14T18:07:26.850+0000] {docker.py:413} INFO - 24/12/14 18:07:26 INFO SparkContext: Starting job: start at NativeMethodAccessorImpl.java:0
[2024-12-14T18:07:26.853+0000] {docker.py:413} INFO - 24/12/14 18:07:26 INFO DAGScheduler: Got job 6 (start at NativeMethodAccessorImpl.java:0) with 1 output partitions
24/12/14 18:07:26 INFO DAGScheduler: Final stage: ResultStage 10 (start at NativeMethodAccessorImpl.java:0)
[2024-12-14T18:07:26.855+0000] {docker.py:413} INFO - 24/12/14 18:07:26 INFO DAGScheduler: Parents of final stage: List()
[2024-12-14T18:07:26.857+0000] {docker.py:413} INFO - 24/12/14 18:07:26 INFO DAGScheduler: Missing parents: List()
[2024-12-14T18:07:26.859+0000] {docker.py:413} INFO - 24/12/14 18:07:26 INFO DAGScheduler: Submitting ResultStage 10 (MapPartitionsRDD[32] at start at NativeMethodAccessorImpl.java:0), which has no missing parents
[2024-12-14T18:07:26.971+0000] {docker.py:413} INFO - 24/12/14 18:07:26 INFO MemoryStore: Block broadcast_10 stored as values in memory (estimated size 55.0 KiB, free 434.3 MiB)
[2024-12-14T18:07:26.980+0000] {docker.py:413} INFO - 24/12/14 18:07:26 INFO MemoryStore: Block broadcast_10_piece0 stored as bytes in memory (estimated size 21.9 KiB, free 434.3 MiB)
[2024-12-14T18:07:26.984+0000] {docker.py:413} INFO - 24/12/14 18:07:26 INFO BlockManagerInfo: Added broadcast_10_piece0 in memory on localhost:45741 (size: 21.9 KiB, free: 434.4 MiB)
[2024-12-14T18:07:26.988+0000] {docker.py:413} INFO - 24/12/14 18:07:26 INFO SparkContext: Created broadcast 10 from broadcast at DAGScheduler.scala:1580
[2024-12-14T18:07:26.993+0000] {docker.py:413} INFO - 24/12/14 18:07:26 INFO DAGScheduler: Submitting 1 missing tasks from ResultStage 10 (MapPartitionsRDD[32] at start at NativeMethodAccessorImpl.java:0) (first 15 tasks are for partitions Vector(0))
[2024-12-14T18:07:27.000+0000] {docker.py:413} INFO - 24/12/14 18:07:26 INFO TaskSchedulerImpl: Adding task set 10.0 with 1 tasks resource profile 0
[2024-12-14T18:07:27.004+0000] {docker.py:413} INFO - 24/12/14 18:07:26 INFO TaskSetManager: Starting task 0.0 in stage 10.0 (TID 10) (localhost, executor driver, partition 0, PROCESS_LOCAL, 10903 bytes)
[2024-12-14T18:07:27.008+0000] {docker.py:413} INFO - 24/12/14 18:07:26 INFO Executor: Running task 0.0 in stage 10.0 (TID 10)
[2024-12-14T18:07:27.171+0000] {docker.py:413} INFO - 24/12/14 18:07:27 INFO CodeGenerator: Code generated in 49.504003 ms
[2024-12-14T18:07:27.295+0000] {docker.py:413} INFO - 24/12/14 18:07:27 INFO CodeGenerator: Code generated in 84.633067 ms
[2024-12-14T18:07:27.301+0000] {docker.py:413} INFO - 24/12/14 18:07:27 INFO KafkaBatchReaderFactory: Creating Kafka reader topicPartition=reddit_data-0 fromOffset=0 untilOffset=500, for query queryId=2f4fb056-b9a8-4f6c-9ae8-6c0892f7084e batchId=0 taskId=10 partitionId=0
[2024-12-14T18:07:27.334+0000] {docker.py:413} INFO - 24/12/14 18:07:27 INFO KafkaConsumer: [Consumer clientId=consumer-spark-kafka-source-c0615079-5755-4c8f-aae6-88e6fa01b989--2054774507-executor-1, groupId=spark-kafka-source-c0615079-5755-4c8f-aae6-88e6fa01b989--2054774507-executor] Seeking to offset 0 for partition reddit_data-0
[2024-12-14T18:07:27.354+0000] {docker.py:413} INFO - 24/12/14 18:07:27 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-c0615079-5755-4c8f-aae6-88e6fa01b989--2054774507-executor-1, groupId=spark-kafka-source-c0615079-5755-4c8f-aae6-88e6fa01b989--2054774507-executor] Seeking to earliest offset of partition reddit_data-0
[2024-12-14T18:07:27.362+0000] {docker.py:413} INFO - 24/12/14 18:07:27 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-c0615079-5755-4c8f-aae6-88e6fa01b989--2054774507-executor-1, groupId=spark-kafka-source-c0615079-5755-4c8f-aae6-88e6fa01b989--2054774507-executor] Resetting offset for partition reddit_data-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=26}}.
[2024-12-14T18:07:27.365+0000] {docker.py:413} INFO - 24/12/14 18:07:27 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-c0615079-5755-4c8f-aae6-88e6fa01b989--2054774507-executor-1, groupId=spark-kafka-source-c0615079-5755-4c8f-aae6-88e6fa01b989--2054774507-executor] Seeking to latest offset of partition reddit_data-0
[2024-12-14T18:07:27.371+0000] {docker.py:413} INFO - 24/12/14 18:07:27 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-c0615079-5755-4c8f-aae6-88e6fa01b989--2054774507-executor-1, groupId=spark-kafka-source-c0615079-5755-4c8f-aae6-88e6fa01b989--2054774507-executor] Resetting offset for partition reddit_data-0 to position FetchPosition{offset=500, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=26}}.
[2024-12-14T18:07:27.936+0000] {docker.py:413} INFO - 24/12/14 18:07:27 INFO KafkaDataConsumer: From Kafka topicPartition=reddit_data-0 groupId=spark-kafka-source-c0615079-5755-4c8f-aae6-88e6fa01b989--2054774507-executor read 500 records through 1 polls (polled  out 500 records), taking 36254207 nanos, during time span of 601434219 nanos.
[2024-12-14T18:07:27.948+0000] {docker.py:413} INFO - 24/12/14 18:07:27 ERROR Executor: Exception in task 0.0 in stage 10.0 (TID 10)
java.sql.BatchUpdateException: Batch entry 0 INSERT INTO reddit_posts ("post_id","title","author","post_time","upvotes","downvotes","num_comments","score","text","first_level_comments_count","second_level_comments_count","subreddit","hour_of_day","day_of_week","created_at") VALUES ('1he0jj3','After Milan''s 2-1 win against Crvena Zvezda, coach Fonseca had said: "I don''t give a f... about the player''s name, I work hard to give my best, some in the team don''t. If I need to play players from the youth team I will do it." Today 6 youth players trained with the first team','Blodgharm','2024-12-14 10:54:56',20,0,2,20,'',1,1,'soccer',10,7,'2024-12-14 18:07:26.569541+00') was aborted: ERROR: column "post_time" is of type timestamp without time zone but expression is of type character varying
  Hint: You will need to rewrite or cast the expression.
  Position: 248  Call getNextException to see other errors in the batch.
	at org.***ql.jdbc.BatchResultHandler.handleError(BatchResultHandler.java:165)
	at org.***ql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:880)
	at org.***ql.jdbc.PgStatement.executeBatch(PgStatement.java:919)
	at org.***ql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1677)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.savePartition(JdbcUtils.scala:751)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1(JdbcUtils.scala:902)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1$adapted(JdbcUtils.scala:901)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2(RDD.scala:1036)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2$adapted(RDD.scala:1036)
	at org.apache.spark.SparkContext.$anonfun$runJob$5(SparkContext.scala:2438)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)
	at org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:161)
	at org.apache.spark.scheduler.Task.run(Task.scala:141)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.***ql.util.PSQLException: ERROR: column "post_time" is of type timestamp without time zone but expression is of type character varying
  Hint: You will need to rewrite or cast the expression.
  Position: 248
	at org.***ql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2712)
	at org.***ql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2400)
	at org.***ql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:367)
	at org.***ql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:326)
	at org.***ql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:877)
	... 19 more
[2024-12-14T18:07:28.032+0000] {docker.py:413} INFO - 24/12/14 18:07:28 WARN TaskSetManager: Lost task 0.0 in stage 10.0 (TID 10) (localhost executor driver): java.sql.BatchUpdateException: Batch entry 0 INSERT INTO reddit_posts ("post_id","title","author","post_time","upvotes","downvotes","num_comments","score","text","first_level_comments_count","second_level_comments_count","subreddit","hour_of_day","day_of_week","created_at") VALUES ('1he0jj3','After Milan''s 2-1 win against Crvena Zvezda, coach Fonseca had said: "I don''t give a f... about the player''s name, I work hard to give my best, some in the team don''t. If I need to play players from the youth team I will do it." Today 6 youth players trained with the first team','Blodgharm','2024-12-14 10:54:56',20,0,2,20,'',1,1,'soccer',10,7,'2024-12-14 18:07:26.569541+00') was aborted: ERROR: column "post_time" is of type timestamp without time zone but expression is of type character varying
  Hint: You will need to rewrite or cast the expression.
  Position: 248  Call getNextException to see other errors in the batch.
	at org.***ql.jdbc.BatchResultHandler.handleError(BatchResultHandler.java:165)
	at org.***ql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:880)
	at org.***ql.jdbc.PgStatement.executeBatch(PgStatement.java:919)
	at org.***ql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1677)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.savePartition(JdbcUtils.scala:751)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1(JdbcUtils.scala:902)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1$adapted(JdbcUtils.scala:901)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2(RDD.scala:1036)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2$adapted(RDD.scala:1036)
	at org.apache.spark.SparkContext.$anonfun$runJob$5(SparkContext.scala:2438)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)
	at org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:161)
	at org.apache.spark.scheduler.Task.run(Task.scala:141)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.***ql.util.PSQLException: ERROR: column "post_time" is of type timestamp without time zone but expression is of type character varying
  Hint: You will need to rewrite or cast the expression.
  Position: 248
	at org.***ql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2712)
	at org.***ql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2400)
	at org.***ql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:367)
	at org.***ql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:326)
	at org.***ql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:877)
	... 19 more
[2024-12-14T18:07:28.036+0000] {docker.py:413} INFO - 24/12/14 18:07:28 ERROR TaskSetManager: Task 0 in stage 10.0 failed 1 times; aborting job
[2024-12-14T18:07:28.040+0000] {docker.py:413} INFO - 24/12/14 18:07:28 INFO TaskSchedulerImpl: Removed TaskSet 10.0, whose tasks have all completed, from pool
[2024-12-14T18:07:28.051+0000] {docker.py:413} INFO - 24/12/14 18:07:28 INFO TaskSchedulerImpl: Cancelling stage 10
[2024-12-14T18:07:28.053+0000] {docker.py:413} INFO - 24/12/14 18:07:28 INFO TaskSchedulerImpl: Killing all running tasks in stage 10: Stage cancelled: Job aborted due to stage failure: Task 0 in stage 10.0 failed 1 times, most recent failure: Lost task 0.0 in stage 10.0 (TID 10) (localhost executor driver): java.sql.BatchUpdateException: Batch entry 0 INSERT INTO reddit_posts ("post_id","title","author","post_time","upvotes","downvotes","num_comments","score","text","first_level_comments_count","second_level_comments_count","subreddit","hour_of_day","day_of_week","created_at") VALUES ('1he0jj3','After Milan''s 2-1 win against Crvena Zvezda, coach Fonseca had said: "I don''t give a f... about the player''s name, I work hard to give my best, some in the team don''t. If I need to play players from the youth team I will do it." Today 6 youth players trained with the first team','Blodgharm','2024-12-14 10:54:56',20,0,2,20,'',1,1,'soccer',10,7,'2024-12-14 18:07:26.569541+00') was aborted: ERROR: column "post_time" is of type timestamp without time zone but expression is of type character varying
  Hint: You will need to rewrite or cast the expression.
  Position: 248  Call getNextException to see other errors in the batch.
	at org.***ql.jdbc.BatchResultHandler.handleError(BatchResultHandler.java:165)
	at org.***ql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:880)
	at org.***ql.jdbc.PgStatement.executeBatch(PgStatement.java:919)
	at org.***ql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1677)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.savePartition(JdbcUtils.scala:751)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1(JdbcUtils.scala:902)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1$adapted(JdbcUtils.scala:901)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2(RDD.scala:1036)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2$adapted(RDD.scala:1036)
	at org.apache.spark.SparkContext.$anonfun$runJob$5(SparkContext.scala:2438)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)
	at org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:161)
	at org.apache.spark.scheduler.Task.run(Task.scala:141)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.***ql.util.PSQLException: ERROR: column "post_time" is of type timestamp without time zone but expression is of type character varying
  Hint: You will need to rewrite or cast the expression.
  Position: 248
	at org.***ql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2712)
	at org.***ql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2400)
	at org.***ql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:367)
	at org.***ql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:326)
	at org.***ql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:877)
	... 19 more

Driver stacktrace:
[2024-12-14T18:07:28.059+0000] {docker.py:413} INFO - 24/12/14 18:07:28 INFO DAGScheduler: ResultStage 10 (start at NativeMethodAccessorImpl.java:0) failed in 1.192 s due to Job aborted due to stage failure: Task 0 in stage 10.0 failed 1 times, most recent failure: Lost task 0.0 in stage 10.0 (TID 10) (localhost executor driver): java.sql.BatchUpdateException: Batch entry 0 INSERT INTO reddit_posts ("post_id","title","author","post_time","upvotes","downvotes","num_comments","score","text","first_level_comments_count","second_level_comments_count","subreddit","hour_of_day","day_of_week","created_at") VALUES ('1he0jj3','After Milan''s 2-1 win against Crvena Zvezda, coach Fonseca had said: "I don''t give a f... about the player''s name, I work hard to give my best, some in the team don''t. If I need to play players from the youth team I will do it." Today 6 youth players trained with the first team','Blodgharm','2024-12-14 10:54:56',20,0,2,20,'',1,1,'soccer',10,7,'2024-12-14 18:07:26.569541+00') was aborted: ERROR: column "post_time" is of type timestamp without time zone but expression is of type character varying
  Hint: You will need to rewrite or cast the expression.
  Position: 248  Call getNextException to see other errors in the batch.
	at org.***ql.jdbc.BatchResultHandler.handleError(BatchResultHandler.java:165)
	at org.***ql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:880)
	at org.***ql.jdbc.PgStatement.executeBatch(PgStatement.java:919)
	at org.***ql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1677)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.savePartition(JdbcUtils.scala:751)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1(JdbcUtils.scala:902)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1$adapted(JdbcUtils.scala:901)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2(RDD.scala:1036)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2$adapted(RDD.scala:1036)
	at org.apache.spark.SparkContext.$anonfun$runJob$5(SparkContext.scala:2438)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)
	at org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:161)
	at org.apache.spark.scheduler.Task.run(Task.scala:141)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.***ql.util.PSQLException: ERROR: column "post_time" is of type timestamp without time zone but expression is of type character varying
  Hint: You will need to rewrite or cast the expression.
  Position: 248
	at org.***ql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2712)
	at org.***ql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2400)
	at org.***ql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:367)
	at org.***ql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:326)
	at org.***ql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:877)
	... 19 more

Driver stacktrace:
[2024-12-14T18:07:28.064+0000] {docker.py:413} INFO - 24/12/14 18:07:28 INFO DAGScheduler: Job 6 failed: start at NativeMethodAccessorImpl.java:0, took 1.213044 s
[2024-12-14T18:07:28.683+0000] {docker.py:413} INFO - 2024-12-14 18:07:28,624 [ERROR] Failed to save to PostgreSQL table reddit_posts: An error occurred while calling o99.save.
: org.apache.spark.SparkException: Job aborted due to stage failure: Task 0 in stage 10.0 failed 1 times, most recent failure: Lost task 0.0 in stage 10.0 (TID 10) (localhost executor driver): java.sql.BatchUpdateException: Batch entry 0 INSERT INTO reddit_posts ("post_id","title","author","post_time","upvotes","downvotes","num_comments","score","text","first_level_comments_count","second_level_comments_count","subreddit","hour_of_day","day_of_week","created_at") VALUES ('1he0jj3','After Milan''s 2-1 win against Crvena Zvezda, coach Fonseca had said: "I don''t give a f... about the player''s name, I work hard to give my best, some in the team don''t. If I need to play players from the youth team I will do it." Today 6 youth players trained with the first team','Blodgharm','2024-12-14 10:54:56',20,0,2,20,'',1,1,'soccer',10,7,'2024-12-14 18:07:26.569541+00') was aborted: ERROR: column "post_time" is of type timestamp without time zone but expression is of type character varying
  Hint: You will need to rewrite or cast the expression.
  Position: 248  Call getNextException to see other errors in the batch.
	at org.***ql.jdbc.BatchResultHandler.handleError(BatchResultHandler.java:165)
	at org.***ql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:880)
	at org.***ql.jdbc.PgStatement.executeBatch(PgStatement.java:919)
	at org.***ql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1677)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.savePartition(JdbcUtils.scala:751)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1(JdbcUtils.scala:902)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1$adapted(JdbcUtils.scala:901)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2(RDD.scala:1036)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2$adapted(RDD.scala:1036)
	at org.apache.spark.SparkContext.$anonfun$runJob$5(SparkContext.scala:2438)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)
	at org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:161)
	at org.apache.spark.scheduler.Task.run(Task.scala:141)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.***ql.util.PSQLException: ERROR: column "post_time" is of type timestamp without time zone but expression is of type character varying
  Hint: You will need to rewrite or cast the expression.
  Position: 248
	at org.***ql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2712)
	at org.***ql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2400)
	at org.***ql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:367)
	at org.***ql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:326)
	at org.***ql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:877)
	... 19 more

Driver stacktrace:
	at org.apache.spark.scheduler.DAGScheduler.failJobAndIndependentStages(DAGScheduler.scala:2844)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$abortStage$2(DAGScheduler.scala:2780)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$abortStage$2$adapted(DAGScheduler.scala:2779)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at org.apache.spark.scheduler.DAGScheduler.abortStage(DAGScheduler.scala:2779)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$handleTaskSetFailed$1(DAGScheduler.scala:1242)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$handleTaskSetFailed$1$adapted(DAGScheduler.scala:1242)
	at scala.Option.foreach(Option.scala:407)
	at org.apache.spark.scheduler.DAGScheduler.handleTaskSetFailed(DAGScheduler.scala:1242)
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.doOnReceive(DAGScheduler.scala:3048)
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:2982)
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:2971)
	at org.apache.spark.util.EventLoop$$anon$1.run(EventLoop.scala:49)
	at org.apache.spark.scheduler.DAGScheduler.runJob(DAGScheduler.scala:984)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2398)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2419)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2438)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2463)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$1(RDD.scala:1036)
	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:151)
	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:112)
	at org.apache.spark.rdd.RDD.withScope(RDD.scala:407)
	at org.apache.spark.rdd.RDD.foreachPartition(RDD.scala:1034)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.saveTable(JdbcUtils.scala:901)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcRelationProvider.createRelation(JdbcRelationProvider.scala:70)
	at org.apache.spark.sql.execution.datasources.SaveIntoDataSourceCommand.run(SaveIntoDataSourceCommand.scala:48)
	at org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult$lzycompute(commands.scala:75)
	at org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult(commands.scala:73)
	at org.apache.spark.sql.execution.command.ExecutedCommandExec.executeCollect(commands.scala:84)
	at org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$1.$anonfun$applyOrElse$1(QueryExecution.scala:107)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$6(SQLExecution.scala:125)
	at org.apache.spark.sql.execution.SQLExecution$.withSQLConfPropagated(SQLExecution.scala:201)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$1(SQLExecution.scala:108)
	at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:900)
	at org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:66)
	at org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$1.applyOrElse(QueryExecution.scala:107)
	at org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$1.applyOrElse(QueryExecution.scala:98)
	at org.apache.spark.sql.catalyst.trees.TreeNode.$anonfun$transformDownWithPruning$1(TreeNode.scala:461)
	at org.apache.spark.sql.catalyst.trees.CurrentOrigin$.withOrigin(origin.scala:76)
	at org.apache.spark.sql.catalyst.trees.TreeNode.transformDownWithPruning(TreeNode.scala:461)
	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.org$apache$spark$sql$catalyst$plans$logical$AnalysisHelper$$super$transformDownWithPruning(LogicalPlan.scala:32)
	at org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.transformDownWithPruning(AnalysisHelper.scala:267)
	at org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.transformDownWithPruning$(AnalysisHelper.scala:263)
	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.transformDownWithPruning(LogicalPlan.scala:32)
	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.transformDownWithPruning(LogicalPlan.scala:32)
	at org.apache.spark.sql.catalyst.trees.TreeNode.transformDown(TreeNode.scala:437)
	at org.apache.spark.sql.execution.QueryExecution.eagerlyExecuteCommands(QueryExecution.scala:98)
	at org.apache.spark.sql.execution.QueryExecution.commandExecuted$lzycompute(QueryExecution.scala:85)
	at org.apache.spark.sql.execution.QueryExecution.commandExecuted(QueryExecution.scala:83)
	at org.apache.spark.sql.execution.QueryExecution.assertCommandExecuted(QueryExecution.scala:142)
	at org.apache.spark.sql.DataFrameWriter.runCommand(DataFrameWriter.scala:859)
	at org.apache.spark.sql.DataFrameWriter.saveToV1Source(DataFrameWriter.scala:388)
	at org.apache.spark.sql.DataFrameWriter.saveInternal(DataFrameWriter.scala:361)
	at org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:248)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)
	at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)
	at py4j.Gateway.invoke(Gateway.java:282)
	at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)
	at py4j.commands.CallCommand.execute(CallCommand.java:79)
	at py4j.ClientServerConnection.sendCommand(ClientServerConnection.java:244)
	at py4j.CallbackClient.sendCommand(CallbackClient.java:384)
	at py4j.CallbackClient.sendCommand(CallbackClient.java:356)
	at py4j.reflection.PythonProxyHandler.invoke(PythonProxyHandler.java:106)
	at jdk.proxy3/jdk.proxy3.$Proxy30.call(Unknown Source)
	at org.apache.spark.sql.execution.streaming.sources.PythonForeachBatchHelper$.$anonfun$callForeachBatch$1(ForeachBatchSink.scala:53)
	at org.apache.spark.sql.execution.streaming.sources.PythonForeachBatchHelper$.$anonfun$callForeachBatch$1$adapted(ForeachBatchSink.scala:53)
	at org.apache.spark.sql.execution.streaming.sources.ForeachBatchSink.addBatch(ForeachBatchSink.scala:34)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.$anonfun$runBatch$17(MicroBatchExecution.scala:732)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$6(SQLExecution.scala:125)
	at org.apache.spark.sql.execution.SQLExecution$.withSQLConfPropagated(SQLExecution.scala:201)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$1(SQLExecution.scala:108)
	at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:900)
	at org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:66)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.$anonfun$runBatch$16(MicroBatchExecution.scala:729)
	at org.apache.spark.sql.execution.streaming.ProgressReporter.reportTimeTaken(ProgressReporter.scala:427)
	at org.apache.spark.sql.execution.streaming.ProgressReporter.reportTimeTaken$(ProgressReporter.scala:425)
	at org.apache.spark.sql.execution.streaming.StreamExecution.reportTimeTaken(StreamExecution.scala:67)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.runBatch(MicroBatchExecution.scala:729)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.$anonfun$runActivatedStream$2(MicroBatchExecution.scala:286)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at org.apache.spark.sql.execution.streaming.ProgressReporter.reportTimeTaken(ProgressReporter.scala:427)
	at org.apache.spark.sql.execution.streaming.ProgressReporter.reportTimeTaken$(ProgressReporter.scala:425)
	at org.apache.spark.sql.execution.streaming.StreamExecution.reportTimeTaken(StreamExecution.scala:67)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.$anonfun$runActivatedStream$1(MicroBatchExecution.scala:249)
	at org.apache.spark.sql.execution.streaming.SingleBatchExecutor.execute(TriggerExecutor.scala:39)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.runActivatedStream(MicroBatchExecution.scala:239)
	at org.apache.spark.sql.execution.streaming.StreamExecution.$anonfun$runStream$1(StreamExecution.scala:311)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:900)
	at org.apache.spark.sql.execution.streaming.StreamExecution.org$apache$spark$sql$execution$streaming$StreamExecution$$runStream(StreamExecution.scala:289)
	at org.apache.spark.sql.execution.streaming.StreamExecution$$anon$1.$anonfun$run$1(StreamExecution.scala:211)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at org.apache.spark.JobArtifactSet$.withActiveJobArtifactState(JobArtifactSet.scala:94)
	at org.apache.spark.sql.execution.streaming.StreamExecution$$anon$1.run(StreamExecution.scala:211)
Caused by: java.sql.BatchUpdateException: Batch entry 0 INSERT INTO reddit_posts ("post_id","title","author","post_time","upvotes","downvotes","num_comments","score","text","first_level_comments_count","second_level_comments_count","subreddit","hour_of_day","day_of_week","created_at") VALUES ('1he0jj3','After Milan''s 2-1 win against Crvena Zvezda, coach Fonseca had said: "I don''t give a f... about the player''s name, I work hard to give my best, some in the team don''t. If I need to play players from the youth team I will do it." Today 6 youth players trained with the first team','Blodgharm','2024-12-14 10:54:56',20,0,2,20,'',1,1,'soccer',10,7,'2024-12-14 18:07:26.569541+00') was aborted: ERROR: column "post_time" is of type timestamp without time zone but expression is of type character varying
  Hint: You will need to rewrite or cast the expression.
  Position: 248  Call getNextException to see other errors in the batch.
	at org.***ql.jdbc.BatchResultHandler.handleError(BatchResultHandler.java:165)
	at org.***ql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:880)
	at org.***ql.jdbc.PgStatement.executeBatch(PgStatement.java:919)
	at org.***ql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1677)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.savePartition(JdbcUtils.scala:751)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1(JdbcUtils.scala:902)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1$adapted(JdbcUtils.scala:901)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2(RDD.scala:1036)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2$adapted(RDD.scala:1036)
	at org.apache.spark.SparkContext.$anonfun$runJob$5(SparkContext.scala:2438)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)
	at org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:161)
	at org.apache.spark.scheduler.Task.run(Task.scala:141)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.***ql.util.PSQLException: ERROR: column "post_time" is of type timestamp without time zone but expression is of type character varying
  Hint: You will need to rewrite or cast the expression.
  Position: 248
	at org.***ql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2712)
	at org.***ql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2400)
	at org.***ql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:367)
	at org.***ql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:326)
	at org.***ql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:877)
	... 19 more
Traceback (most recent call last):
  File "/opt/bitnami/spark/transformation.py", line 452, in save_to_***
    .save()
     ^^^^^^
  File "/opt/bitnami/spark/python/lib/pyspark.zip/pyspark/sql/readwriter.py", line 1461, in save
    self._jwrite.save()
  File "/opt/bitnami/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/java_gateway.py", line 1322, in __call__
    return_value = get_return_value(
                   ^^^^^^^^^^^^^^^^^
  File "/opt/bitnami/spark/python/lib/pyspark.zip/pyspark/errors/exceptions/captured.py", line 179, in deco
    return f(*a, **kw)
           ^^^^^^^^^^^
  File "/opt/bitnami/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/protocol.py", line 326, in get_return_value
    raise Py4JJavaError(
py4j.protocol.Py4JJavaError: An error occurred while calling o99.save.
: org.apache.spark.SparkException: Job aborted due to stage failure: Task 0 in stage 10.0 failed 1 times, most recent failure: Lost task 0.0 in stage 10.0 (TID 10) (localhost executor driver): java.sql.BatchUpdateException: Batch entry 0 INSERT INTO reddit_posts ("post_id","title","author","post_time","upvotes","downvotes","num_comments","score","text","first_level_comments_count","second_level_comments_count","subreddit","hour_of_day","day_of_week","created_at") VALUES ('1he0jj3','After Milan''s 2-1 win against Crvena Zvezda, coach Fonseca had said: "I don''t give a f... about the player''s name, I work hard to give my best, some in the team don''t. If I need to play players from the youth team I will do it." Today 6 youth players trained with the first team','Blodgharm','2024-12-14 10:54:56',20,0,2,20,'',1,1,'soccer',10,7,'2024-12-14 18:07:26.569541+00') was aborted: ERROR: column "post_time" is of type timestamp without time zone but expression is of type character varying
  Hint: You will need to rewrite or cast the expression.
  Position: 248  Call getNextException to see other errors in the batch.
	at org.***ql.jdbc.BatchResultHandler.handleError(BatchResultHandler.java:165)
	at org.***ql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:880)
	at org.***ql.jdbc.PgStatement.executeBatch(PgStatement.java:919)
	at org.***ql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1677)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.savePartition(JdbcUtils.scala:751)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1(JdbcUtils.scala:902)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1$adapted(JdbcUtils.scala:901)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2(RDD.scala:1036)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2$adapted(RDD.scala:1036)
	at org.apache.spark.SparkContext.$anonfun$runJob$5(SparkContext.scala:2438)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)
	at org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:161)
	at org.apache.spark.scheduler.Task.run(Task.scala:141)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.***ql.util.PSQLException: ERROR: column "post_time" is of type timestamp without time zone but expression is of type character varying
  Hint: You will need to rewrite or cast the expression.
  Position: 248
	at org.***ql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2712)
	at org.***ql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2400)
	at org.***ql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:367)
	at org.***ql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:326)
	at org.***ql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:877)
	... 19 more

Driver stacktrace:
	at org.apache.spark.scheduler.DAGScheduler.failJobAndIndependentStages(DAGScheduler.scala:2844)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$abortStage$2(DAGScheduler.scala:2780)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$abortStage$2$adapted(DAGScheduler.scala:2779)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at org.apache.spark.scheduler.DAGScheduler.abortStage(DAGScheduler.scala:2779)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$handleTaskSetFailed$1(DAGScheduler.scala:1242)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$handleTaskSetFailed$1$adapted(DAGScheduler.scala:1242)
	at scala.Option.foreach(Option.scala:407)
	at org.apache.spark.scheduler.DAGScheduler.handleTaskSetFailed(DAGScheduler.scala:1242)
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.doOnReceive(DAGScheduler.scala:3048)
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:2982)
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:2971)
	at org.apache.spark.util.EventLoop$$anon$1.run(EventLoop.scala:49)
	at org.apache.spark.scheduler.DAGScheduler.runJob(DAGScheduler.scala:984)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2398)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2419)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2438)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2463)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$1(RDD.scala:1036)
	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:151)
	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:112)
	at org.apache.spark.rdd.RDD.withScope(RDD.scala:407)
	at org.apache.spark.rdd.RDD.foreachPartition(RDD.scala:1034)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.saveTable(JdbcUtils.scala:901)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcRelationProvider.createRelation(JdbcRelationProvider.scala:70)
	at org.apache.spark.sql.execution.datasources.SaveIntoDataSourceCommand.run(SaveIntoDataSourceCommand.scala:48)
	at org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult$lzycompute(commands.scala:75)
	at org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult(commands.scala:73)
	at org.apache.spark.sql.execution.command.ExecutedCommandExec.executeCollect(commands.scala:84)
	at org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$1.$anonfun$applyOrElse$1(QueryExecution.scala:107)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$6(SQLExecution.scala:125)
	at org.apache.spark.sql.execution.SQLExecution$.withSQLConfPropagated(SQLExecution.scala:201)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$1(SQLExecution.scala:108)
	at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:900)
	at org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:66)
	at org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$1.applyOrElse(QueryExecution.scala:107)
	at org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$1.applyOrElse(QueryExecution.scala:98)
	at org.apache.spark.sql.catalyst.trees.TreeNode.$anonfun$transformDownWithPruning$1(TreeNode.scala:461)
	at org.apache.spark.sql.catalyst.trees.CurrentOrigin$.withOrigin(origin.scala:76)
	at org.apache.spark.sql.catalyst.trees.TreeNode.transformDownWithPruning(TreeNode.scala:461)
	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.org$apache$spark$sql$catalyst$plans$logical$AnalysisHelper$$super$transformDownWithPruning(LogicalPlan.scala:32)
	at org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.transformDownWithPruning(AnalysisHelper.scala:267)
	at org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.transformDownWithPruning$(AnalysisHelper.scala:263)
	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.transformDownWithPruning(LogicalPlan.scala:32)
	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.transformDownWithPruning(LogicalPlan.scala:32)
	at org.apache.spark.sql.catalyst.trees.TreeNode.transformDown(TreeNode.scala:437)
	at org.apache.spark.sql.execution.QueryExecution.eagerlyExecuteCommands(QueryExecution.scala:98)
	at org.apache.spark.sql.execution.QueryExecution.commandExecuted$lzycompute(QueryExecution.scala:85)
	at org.apache.spark.sql.execution.QueryExecution.commandExecuted(QueryExecution.scala:83)
	at org.apache.spark.sql.execution.QueryExecution.assertCommandExecuted(QueryExecution.scala:142)
	at org.apache.spark.sql.DataFrameWriter.runCommand(DataFrameWriter.scala:859)
	at org.apache.spark.sql.DataFrameWriter.saveToV1Source(DataFrameWriter.scala:388)
	at org.apache.spark.sql.DataFrameWriter.saveInternal(DataFrameWriter.scala:361)
	at org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:248)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)
	at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)
	at py4j.Gateway.invoke(Gateway.java:282)
	at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)
	at py4j.commands.CallCommand.execute(CallCommand.java:79)
	at py4j.ClientServerConnection.sendCommand(ClientServerConnection.java:244)
	at py4j.CallbackClient.sendCommand(CallbackClient.java:384)
	at py4j.CallbackClient.sendCommand(CallbackClient.java:356)
	at py4j.reflection.PythonProxyHandler.invoke(PythonProxyHandler.java:106)
	at jdk.proxy3/jdk.proxy3.$Proxy30.call(Unknown Source)
	at org.apache.spark.sql.execution.streaming.sources.PythonForeachBatchHelper$.$anonfun$callForeachBatch$1(ForeachBatchSink.scala:53)
	at org.apache.spark.sql.execution.streaming.sources.PythonForeachBatchHelper$.$anonfun$callForeachBatch$1$adapted(ForeachBatchSink.scala:53)
	at org.apache.spark.sql.execution.streaming.sources.ForeachBatchSink.addBatch(ForeachBatchSink.scala:34)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.$anonfun$runBatch$17(MicroBatchExecution.scala:732)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$6(SQLExecution.scala:125)
	at org.apache.spark.sql.execution.SQLExecution$.withSQLConfPropagated(SQLExecution.scala:201)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$1(SQLExecution.scala:108)
	at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:900)
	at org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:66)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.$anonfun$runBatch$16(MicroBatchExecution.scala:729)
	at org.apache.spark.sql.execution.streaming.ProgressReporter.reportTimeTaken(ProgressReporter.scala:427)
	at org.apache.spark.sql.execution.streaming.ProgressReporter.reportTimeTaken$(ProgressReporter.scala:425)
	at org.apache.spark.sql.execution.streaming.StreamExecution.reportTimeTaken(StreamExecution.scala:67)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.runBatch(MicroBatchExecution.scala:729)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.$anonfun$runActivatedStream$2(MicroBatchExecution.scala:286)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at org.apache.spark.sql.execution.streaming.ProgressReporter.reportTimeTaken(ProgressReporter.scala:427)
	at org.apache.spark.sql.execution.streaming.ProgressReporter.reportTimeTaken$(ProgressReporter.scala:425)
	at org.apache.spark.sql.execution.streaming.StreamExecution.reportTimeTaken(StreamExecution.scala:67)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.$anonfun$runActivatedStream$1(MicroBatchExecution.scala:249)
	at org.apache.spark.sql.execution.streaming.SingleBatchExecutor.execute(TriggerExecutor.scala:39)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.runActivatedStream(MicroBatchExecution.scala:239)
	at org.apache.spark.sql.execution.streaming.StreamExecution.$anonfun$runStream$1(StreamExecution.scala:311)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:900)
	at org.apache.spark.sql.execution.streaming.StreamExecution.org$apache$spark$sql$execution$streaming$StreamExecution$$runStream(StreamExecution.scala:289)
	at org.apache.spark.sql.execution.streaming.StreamExecution$$anon$1.$anonfun$run$1(StreamExecution.scala:211)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at org.apache.spark.JobArtifactSet$.withActiveJobArtifactState(JobArtifactSet.scala:94)
	at org.apache.spark.sql.execution.streaming.StreamExecution$$anon$1.run(StreamExecution.scala:211)
Caused by: java.sql.BatchUpdateException: Batch entry 0 INSERT INTO reddit_posts ("post_id","title","author","post_time","upvotes","downvotes","num_comments","score","text","first_level_comments_count","second_level_comments_count","subreddit","hour_of_day","day_of_week","created_at") VALUES ('1he0jj3','After Milan''s 2-1 win against Crvena Zvezda, coach Fonseca had said: "I don''t give a f... about the player''s name, I work hard to give my best, some in the team don''t. If I need to play players from the youth team I will do it." Today 6 youth players trained with the first team','Blodgharm','2024-12-14 10:54:56',20,0,2,20,'',1,1,'soccer',10,7,'2024-12-14 18:07:26.569541+00') was aborted: ERROR: column "post_time" is of type timestamp without time zone but expression is of type character varying
  Hint: You will need to rewrite or cast the expression.
  Position: 248  Call getNextException to see other errors in the batch.
	at org.***ql.jdbc.BatchResultHandler.handleError(BatchResultHandler.java:165)
	at org.***ql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:880)
	at org.***ql.jdbc.PgStatement.executeBatch(PgStatement.java:919)
	at org.***ql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1677)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.savePartition(JdbcUtils.scala:751)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1(JdbcUtils.scala:902)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1$adapted(JdbcUtils.scala:901)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2(RDD.scala:1036)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2$adapted(RDD.scala:1036)
	at org.apache.spark.SparkContext.$anonfun$runJob$5(SparkContext.scala:2438)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)
	at org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:161)
	at org.apache.spark.scheduler.Task.run(Task.scala:141)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.***ql.util.PSQLException: ERROR: column "post_time" is of type timestamp without time zone but expression is of type character varying
  Hint: You will need to rewrite or cast the expression.
  Position: 248
	at org.***ql.core.v3.QueryExe
[2024-12-14T18:07:28.687+0000] {docker.py:413} INFO - cutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2712)
	at org.***ql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2400)
	at org.***ql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:367)
	at org.***ql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:326)
	at org.***ql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:877)
	... 19 more
[2024-12-14T18:07:28.770+0000] {docker.py:413} INFO - 2024-12-14 18:07:28,720 [ERROR] Error processing batch 0: An error occurred while calling o99.save.
: org.apache.spark.SparkException: Job aborted due to stage failure: Task 0 in stage 10.0 failed 1 times, most recent failure: Lost task 0.0 in stage 10.0 (TID 10) (localhost executor driver): java.sql.BatchUpdateException: Batch entry 0 INSERT INTO reddit_posts ("post_id","title","author","post_time","upvotes","downvotes","num_comments","score","text","first_level_comments_count","second_level_comments_count","subreddit","hour_of_day","day_of_week","created_at") VALUES ('1he0jj3','After Milan''s 2-1 win against Crvena Zvezda, coach Fonseca had said: "I don''t give a f... about the player''s name, I work hard to give my best, some in the team don''t. If I need to play players from the youth team I will do it." Today 6 youth players trained with the first team','Blodgharm','2024-12-14 10:54:56',20,0,2,20,'',1,1,'soccer',10,7,'2024-12-14 18:07:26.569541+00') was aborted: ERROR: column "post_time" is of type timestamp without time zone but expression is of type character varying
  Hint: You will need to rewrite or cast the expression.
  Position: 248  Call getNextException to see other errors in the batch.
	at org.***ql.jdbc.BatchResultHandler.handleError(BatchResultHandler.java:165)
	at org.***ql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:880)
	at org.***ql.jdbc.PgStatement.executeBatch(PgStatement.java:919)
	at org.***ql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1677)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.savePartition(JdbcUtils.scala:751)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1(JdbcUtils.scala:902)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1$adapted(JdbcUtils.scala:901)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2(RDD.scala:1036)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2$adapted(RDD.scala:1036)
	at org.apache.spark.SparkContext.$anonfun$runJob$5(SparkContext.scala:2438)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)
	at org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:161)
	at org.apache.spark.scheduler.Task.run(Task.scala:141)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.***ql.util.PSQLException: ERROR: column "post_time" is of type timestamp without time zone but expression is of type character varying
  Hint: You will need to rewrite or cast the expression.
  Position: 248
	at org.***ql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2712)
	at org.***ql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2400)
	at org.***ql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:367)
	at org.***ql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:326)
	at org.***ql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:877)
	... 19 more

Driver stacktrace:
	at org.apache.spark.scheduler.DAGScheduler.failJobAndIndependentStages(DAGScheduler.scala:2844)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$abortStage$2(DAGScheduler.scala:2780)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$abortStage$2$adapted(DAGScheduler.scala:2779)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at org.apache.spark.scheduler.DAGScheduler.abortStage(DAGScheduler.scala:2779)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$handleTaskSetFailed$1(DAGScheduler.scala:1242)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$handleTaskSetFailed$1$adapted(DAGScheduler.scala:1242)
	at scala.Option.foreach(Option.scala:407)
	at org.apache.spark.scheduler.DAGScheduler.handleTaskSetFailed(DAGScheduler.scala:1242)
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.doOnReceive(DAGScheduler.scala:3048)
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:2982)
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:2971)
	at org.apache.spark.util.EventLoop$$anon$1.run(EventLoop.scala:49)
	at org.apache.spark.scheduler.DAGScheduler.runJob(DAGScheduler.scala:984)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2398)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2419)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2438)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2463)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$1(RDD.scala:1036)
	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:151)
	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:112)
	at org.apache.spark.rdd.RDD.withScope(RDD.scala:407)
	at org.apache.spark.rdd.RDD.foreachPartition(RDD.scala:1034)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.saveTable(JdbcUtils.scala:901)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcRelationProvider.createRelation(JdbcRelationProvider.scala:70)
	at org.apache.spark.sql.execution.datasources.SaveIntoDataSourceCommand.run(SaveIntoDataSourceCommand.scala:48)
	at org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult$lzycompute(commands.scala:75)
	at org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult(commands.scala:73)
	at org.apache.spark.sql.execution.command.ExecutedCommandExec.executeCollect(commands.scala:84)
	at org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$1.$anonfun$applyOrElse$1(QueryExecution.scala:107)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$6(SQLExecution.scala:125)
	at org.apache.spark.sql.execution.SQLExecution$.withSQLConfPropagated(SQLExecution.scala:201)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$1(SQLExecution.scala:108)
	at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:900)
	at org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:66)
	at org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$1.applyOrElse(QueryExecution.scala:107)
	at org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$1.applyOrElse(QueryExecution.scala:98)
	at org.apache.spark.sql.catalyst.trees.TreeNode.$anonfun$transformDownWithPruning$1(TreeNode.scala:461)
	at org.apache.spark.sql.catalyst.trees.CurrentOrigin$.withOrigin(origin.scala:76)
	at org.apache.spark.sql.catalyst.trees.TreeNode.transformDownWithPruning(TreeNode.scala:461)
	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.org$apache$spark$sql$catalyst$plans$logical$AnalysisHelper$$super$transformDownWithPruning(LogicalPlan.scala:32)
	at org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.transformDownWithPruning(AnalysisHelper.scala:267)
	at org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.transformDownWithPruning$(AnalysisHelper.scala:263)
	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.transformDownWithPruning(LogicalPlan.scala:32)
	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.transformDownWithPruning(LogicalPlan.scala:32)
	at org.apache.spark.sql.catalyst.trees.TreeNode.transformDown(TreeNode.scala:437)
	at org.apache.spark.sql.execution.QueryExecution.eagerlyExecuteCommands(QueryExecution.scala:98)
	at org.apache.spark.sql.execution.QueryExecution.commandExecuted$lzycompute(QueryExecution.scala:85)
	at org.apache.spark.sql.execution.QueryExecution.commandExecuted(QueryExecution.scala:83)
	at org.apache.spark.sql.execution.QueryExecution.assertCommandExecuted(QueryExecution.scala:142)
	at org.apache.spark.sql.DataFrameWriter.runCommand(DataFrameWriter.scala:859)
	at org.apache.spark.sql.DataFrameWriter.saveToV1Source(DataFrameWriter.scala:388)
	at org.apache.spark.sql.DataFrameWriter.saveInternal(DataFrameWriter.scala:361)
	at org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:248)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)
	at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)
	at py4j.Gateway.invoke(Gateway.java:282)
	at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)
	at py4j.commands.CallCommand.execute(CallCommand.java:79)
	at py4j.ClientServerConnection.sendCommand(ClientServerConnection.java:244)
	at py4j.CallbackClient.sendCommand(CallbackClient.java:384)
	at py4j.CallbackClient.sendCommand(CallbackClient.java:356)
	at py4j.reflection.PythonProxyHandler.invoke(PythonProxyHandler.java:106)
	at jdk.proxy3/jdk.proxy3.$Proxy30.call(Unknown Source)
	at org.apache.spark.sql.execution.streaming.sources.PythonForeachBatchHelper$.$anonfun$callForeachBatch$1(ForeachBatchSink.scala:53)
	at org.apache.spark.sql.execution.streaming.sources.PythonForeachBatchHelper$.$anonfun$callForeachBatch$1$adapted(ForeachBatchSink.scala:53)
	at org.apache.spark.sql.execution.streaming.sources.ForeachBatchSink.addBatch(ForeachBatchSink.scala:34)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.$anonfun$runBatch$17(MicroBatchExecution.scala:732)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$6(SQLExecution.scala:125)
	at org.apache.spark.sql.execution.SQLExecution$.withSQLConfPropagated(SQLExecution.scala:201)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$1(SQLExecution.scala:108)
	at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:900)
	at org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:66)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.$anonfun$runBatch$16(MicroBatchExecution.scala:729)
	at org.apache.spark.sql.execution.streaming.ProgressReporter.reportTimeTaken(ProgressReporter.scala:427)
	at org.apache.spark.sql.execution.streaming.ProgressReporter.reportTimeTaken$(ProgressReporter.scala:425)
	at org.apache.spark.sql.execution.streaming.StreamExecution.reportTimeTaken(StreamExecution.scala:67)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.runBatch(MicroBatchExecution.scala:729)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.$anonfun$runActivatedStream$2(MicroBatchExecution.scala:286)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at org.apache.spark.sql.execution.streaming.ProgressReporter.reportTimeTaken(ProgressReporter.scala:427)
	at org.apache.spark.sql.execution.streaming.ProgressReporter.reportTimeTaken$(ProgressReporter.scala:425)
	at org.apache.spark.sql.execution.streaming.StreamExecution.reportTimeTaken(StreamExecution.scala:67)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.$anonfun$runActivatedStream$1(MicroBatchExecution.scala:249)
	at org.apache.spark.sql.execution.streaming.SingleBatchExecutor.execute(TriggerExecutor.scala:39)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.runActivatedStream(MicroBatchExecution.scala:239)
	at org.apache.spark.sql.execution.streaming.StreamExecution.$anonfun$runStream$1(StreamExecution.scala:311)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:900)
	at org.apache.spark.sql.execution.streaming.StreamExecution.org$apache$spark$sql$execution$streaming$StreamExecution$$runStream(StreamExecution.scala:289)
	at org.apache.spark.sql.execution.streaming.StreamExecution$$anon$1.$anonfun$run$1(StreamExecution.scala:211)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at org.apache.spark.JobArtifactSet$.withActiveJobArtifactState(JobArtifactSet.scala:94)
	at org.apache.spark.sql.execution.streaming.StreamExecution$$anon$1.run(StreamExecution.scala:211)
Caused by: java.sql.BatchUpdateException: Batch entry 0 INSERT INTO reddit_posts ("post_id","title","author","post_time","upvotes","downvotes","num_comments","score","text","first_level_comments_count","second_level_comments_count","subreddit","hour_of_day","day_of_week","created_at") VALUES ('1he0jj3','After Milan''s 2-1 win against Crvena Zvezda, coach Fonseca had said: "I don''t give a f... about the player''s name, I work hard to give my best, some in the team don''t. If I need to play players from the youth team I will do it." Today 6 youth players trained with the first team','Blodgharm','2024-12-14 10:54:56',20,0,2,20,'',1,1,'soccer',10,7,'2024-12-14 18:07:26.569541+00') was aborted: ERROR: column "post_time" is of type timestamp without time zone but expression is of type character varying
  Hint: You will need to rewrite or cast the expression.
  Position: 248  Call getNextException to see other errors in the batch.
	at org.***ql.jdbc.BatchResultHandler.handleError(BatchResultHandler.java:165)
	at org.***ql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:880)
	at org.***ql.jdbc.PgStatement.executeBatch(PgStatement.java:919)
	at org.***ql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1677)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.savePartition(JdbcUtils.scala:751)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1(JdbcUtils.scala:902)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1$adapted(JdbcUtils.scala:901)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2(RDD.scala:1036)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2$adapted(RDD.scala:1036)
	at org.apache.spark.SparkContext.$anonfun$runJob$5(SparkContext.scala:2438)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)
	at org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:161)
	at org.apache.spark.scheduler.Task.run(Task.scala:141)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.***ql.util.PSQLException: ERROR: column "post_time" is of type timestamp without time zone but expression is of type character varying
  Hint: You will need to rewrite or cast the expression.
  Position: 248
	at org.***ql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2712)
	at org.***ql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2400)
	at org.***ql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:367)
	at org.***ql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:326)
	at org.***ql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:877)
	... 19 more
Traceback (most recent call last):
  File "/opt/bitnami/spark/spark_streaming.py", line 285, in process_batch
    transformer.save_to_***(posts_df, "reddit_posts")
  File "/opt/bitnami/spark/transformation.py", line 457, in save_to_***
    raise e
  File "/opt/bitnami/spark/transformation.py", line 452, in save_to_***
    .save()
     ^^^^^^
  File "/opt/bitnami/spark/python/lib/pyspark.zip/pyspark/sql/readwriter.py", line 1461, in save
    self._jwrite.save()
  File "/opt/bitnami/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/java_gateway.py", line 1322, in __call__
    return_value = get_return_value(
                   ^^^^^^^^^^^^^^^^^
  File "/opt/bitnami/spark/python/lib/pyspark.zip/pyspark/errors/exceptions/captured.py", line 179, in deco
    return f(*a, **kw)
           ^^^^^^^^^^^
  File "/opt/bitnami/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/protocol.py", line 326, in get_return_value
    raise Py4JJavaError(
py4j.protocol.Py4JJavaError: An error occurred while calling o99.save.
: org.apache.spark.SparkException: Job aborted due to stage failure: Task 0 in stage 10.0 failed 1 times, most recent failure: Lost task 0.0 in stage 10.0 (TID 10) (localhost executor driver): java.sql.BatchUpdateException: Batch entry 0 INSERT INTO reddit_posts ("post_id","title","author","post_time","upvotes","downvotes","num_comments","score","text","first_level_comments_count","second_level_comments_count","subreddit","hour_of_day","day_of_week","created_at") VALUES ('1he0jj3','After Milan''s 2-1 win against Crvena Zvezda, coach Fonseca had said: "I don''t give a f... about the player''s name, I work hard to give my best, some in the team don''t. If I need to play players from the youth team I will do it." Today 6 youth players trained with the first team','Blodgharm','2024-12-14 10:54:56',20,0,2,20,'',1,1,'soccer',10,7,'2024-12-14 18:07:26.569541+00') was aborted: ERROR: column "post_time" is of type timestamp without time zone but expression is of type character varying
  Hint: You will need to rewrite or cast the expression.
  Position: 248  Call getNextException to see other errors in the batch.
	at org.***ql.jdbc.BatchResultHandler.handleError(BatchResultHandler.java:165)
	at org.***ql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:880)
	at org.***ql.jdbc.PgStatement.executeBatch(PgStatement.java:919)
	at org.***ql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1677)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.savePartition(JdbcUtils.scala:751)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1(JdbcUtils.scala:902)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1$adapted(JdbcUtils.scala:901)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2(RDD.scala:1036)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2$adapted(RDD.scala:1036)
	at org.apache.spark.SparkContext.$anonfun$runJob$5(SparkContext.scala:2438)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)
	at org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:161)
	at org.apache.spark.scheduler.Task.run(Task.scala:141)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.***ql.util.PSQLException: ERROR: column "post_time" is of type timestamp without time zone but expression is of type character varying
  Hint: You will need to rewrite or cast the expression.
  Position: 248
	at org.***ql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2712)
	at org.***ql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2400)
	at org.***ql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:367)
	at org.***ql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:326)
	at org.***ql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:877)
	... 19 more

Driver stacktrace:
	at org.apache.spark.scheduler.DAGScheduler.failJobAndIndependentStages(DAGScheduler.scala:2844)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$abortStage$2(DAGScheduler.scala:2780)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$abortStage$2$adapted(DAGScheduler.scala:2779)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at org.apache.spark.scheduler.DAGScheduler.abortStage(DAGScheduler.scala:2779)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$handleTaskSetFailed$1(DAGScheduler.scala:1242)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$handleTaskSetFailed$1$adapted(DAGScheduler.scala:1242)
	at scala.Option.foreach(Option.scala:407)
	at org.apache.spark.scheduler.DAGScheduler.handleTaskSetFailed(DAGScheduler.scala:1242)
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.doOnReceive(DAGScheduler.scala:3048)
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:2982)
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:2971)
	at org.apache.spark.util.EventLoop$$anon$1.run(EventLoop.scala:49)
	at org.apache.spark.scheduler.DAGScheduler.runJob(DAGScheduler.scala:984)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2398)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2419)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2438)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2463)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$1(RDD.scala:1036)
	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:151)
	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:112)
	at org.apache.spark.rdd.RDD.withScope(RDD.scala:407)
	at org.apache.spark.rdd.RDD.foreachPartition(RDD.scala:1034)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.saveTable(JdbcUtils.scala:901)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcRelationProvider.createRelation(JdbcRelationProvider.scala:70)
	at org.apache.spark.sql.execution.datasources.SaveIntoDataSourceCommand.run(SaveIntoDataSourceCommand.scala:48)
	at org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult$lzycompute(commands.scala:75)
	at org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult(commands.scala:73)
	at org.apache.spark.sql.execution.command.ExecutedCommandExec.executeCollect(commands.scala:84)
	at org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$1.$anonfun$applyOrElse$1(QueryExecution.scala:107)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$6(SQLExecution.scala:125)
	at org.apache.spark.sql.execution.SQLExecution$.withSQLConfPropagated(SQLExecution.scala:201)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$1(SQLExecution.scala:108)
	at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:900)
	at org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:66)
	at org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$1.applyOrElse(QueryExecution.scala:107)
	at org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$1.applyOrElse(QueryExecution.scala:98)
	at org.apache.spark.sql.catalyst.trees.TreeNode.$anonfun$transformDownWithPruning$1(TreeNode.scala:461)
	at org.apache.spark.sql.catalyst.trees.CurrentOrigin$.withOrigin(origin.scala:76)
	at org.apache.spark.sql.catalyst.trees.TreeNode.transformDownWithPruning(TreeNode.scala:461)
	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.org$apache$spark$sql$catalyst$plans$logical$AnalysisHelper$$super$transformDownWithPruning(LogicalPlan.scala:32)
	at org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.transformDownWithPruning(AnalysisHelper.scala:267)
	at org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.transformDownWithPruning$(AnalysisHelper.scala:263)
	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.transformDownWithPruning(LogicalPlan.scala:32)
	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.transformDownWithPruning(LogicalPlan.scala:32)
	at org.apache.spark.sql.catalyst.trees.TreeNode.transformDown(TreeNode.scala:437)
	at org.apache.spark.sql.execution.QueryExecution.eagerlyExecuteCommands(QueryExecution.scala:98)
	at org.apache.spark.sql.execution.QueryExecution.commandExecuted$lzycompute(QueryExecution.scala:85)
	at org.apache.spark.sql.execution.QueryExecution.commandExecuted(QueryExecution.scala:83)
	at org.apache.spark.sql.execution.QueryExecution.assertCommandExecuted(QueryExecution.scala:142)
	at org.apache.spark.sql.DataFrameWriter.runCommand(DataFrameWriter.scala:859)
	at org.apache.spark.sql.DataFrameWriter.saveToV1Source(DataFrameWriter.scala:388)
	at org.apache.spark.sql.DataFrameWriter.saveInternal(DataFrameWriter.scala:361)
	at org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:248)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)
	at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)
	at py4j.Gateway.invoke(Gateway.java:282)
	at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)
	at py4j.commands.CallCommand.execute(CallCommand.java:79)
	at py4j.ClientServerConnection.sendCommand(ClientServerConnection.java:244)
	at py4j.CallbackClient.sendCommand(CallbackClient.java:384)
	at py4j.CallbackClient.sendCommand(CallbackClient.java:356)
	at py4j.reflection.PythonProxyHandler.invoke(PythonProxyHandler.java:106)
	at jdk.proxy3/jdk.proxy3.$Proxy30.call(Unknown Source)
	at org.apache.spark.sql.execution.streaming.sources.PythonForeachBatchHelper$.$anonfun$callForeachBatch$1(ForeachBatchSink.scala:53)
	at org.apache.spark.sql.execution.streaming.sources.PythonForeachBatchHelper$.$anonfun$callForeachBatch$1$adapted(ForeachBatchSink.scala:53)
	at org.apache.spark.sql.execution.streaming.sources.ForeachBatchSink.addBatch(ForeachBatchSink.scala:34)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.$anonfun$runBatch$17(MicroBatchExecution.scala:732)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$6(SQLExecution.scala:125)
	at org.apache.spark.sql.execution.SQLExecution$.withSQLConfPropagated(SQLExecution.scala:201)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$1(SQLExecution.scala:108)
	at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:900)
	at org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:66)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.$anonfun$runBatch$16(MicroBatchExecution.scala:729)
	at org.apache.spark.sql.execution.streaming.ProgressReporter.reportTimeTaken(ProgressReporter.scala:427)
	at org.apache.spark.sql.execution.streaming.ProgressReporter.reportTimeTaken$(ProgressReporter.scala:425)
	at org.apache.spark.sql.execution.streaming.StreamExecution.reportTimeTaken(StreamExecution.scala:67)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.runBatch(MicroBatchExecution.scala:729)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.$anonfun$runActivatedStream$2(MicroBatchExecution.scala:286)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at org.apache.spark.sql.execution.streaming.ProgressReporter.reportTimeTaken(ProgressReporter.scala:427)
	at org.apache.spark.sql.execution.streaming.ProgressReporter.reportTimeTaken$(ProgressReporter.scala:425)
	at org.apache.spark.sql.execution.streaming.StreamExecution.reportTimeTaken(StreamExecution.scala:67)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.$anonfun$runActivatedStream$1(MicroBatchExecution.scala:249)
	at org.apache.spark.sql.execution.streaming.SingleBatchExecutor.execute(TriggerExecutor.scala:39)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.runActivatedStream(MicroBatchExecution.scala:239)
	at org.apache.spark.sql.execution.streaming.StreamExecution.$anonfun$runStream$1(StreamExecution.scala:311)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:900)
	at org.apache.spark.sql.execution.streaming.StreamExecution.org$apache$spark$sql$execution$streaming$StreamExecution$$runStream(StreamExecution.scala:289)
	at org.apache.spark.sql.execution.streaming.StreamExecution$$anon$1.$anonfun$run$1(StreamExecution.scala:211)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at org.apache.spark.JobArtifactSet$.withActiveJobArtifactState(JobArtifactSet.scala:94)
	at org.apache.spark.sql.execution.streaming.StreamExecution$$anon$1.run(StreamExecution.scala:211)
Caused by: java.sql.BatchUpdateException: Batch entry 0 INSERT INTO reddit_posts ("post_id","title","author","post_time","upvotes","downvotes","num_comments","score","text","first_level_comments_count","second_level_comments_count","subreddit","hour_of_day","day_of_week","created_at") VALUES ('1he0jj3','After Milan''s 2-1 win against Crvena Zvezda, coach Fonseca had said: "I don''t give a f... about the player''s name, I work hard to give my best, some in the team don''t. If I need to play players from the youth team I will do it." Today 6 youth players trained with the first team','Blodgharm','2024-12-14 10:54:56',20,0,2,20,'',1,1,'soccer',10,7,'2024-12-14 18:07:26.569541+00') was aborted: ERROR: column "post_time" is of type timestamp without time zone but expression is of type character varying
  Hint: You will need to rewrite or cast the expression.
  Position: 248  Call getNextException to see other errors in the batch.
	at org.***ql.jdbc.BatchResultHandler.handleError(BatchResultHandler.java:165)
	at org.***ql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:880)
	at org.***ql.jdbc.PgStatement.executeBatch(PgStatement.java:919)
	at org.***ql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1677)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.savePartition(JdbcUtils.scala:751)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1(JdbcUtils.scala:902)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1$adapted(JdbcUtils.scala:901)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2(RDD.scala:1036)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2$adapted(RDD.scala:1036)
	at org.apache.spark.SparkContext.$anonfun$runJob$5(SparkContext.scala:2438)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)
	at org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:161)
	at org.apache.spark.scheduler.Task.run(Task.scala:141)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.***ql.util.PSQLException: ERROR: co
[2024-12-14T18:07:28.775+0000] {docker.py:413} INFO - lumn "po
[2024-12-14T18:07:28.776+0000] {docker.py:413} INFO - st_time" is of type timestamp without time zone but expression is of type character varying
  Hint: You will need to rewrite or cast the expression.
  Position: 248
	at org.***ql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2712)
	at org.***ql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2400)
	at org.***ql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:367)
	at org.***ql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:326)
	at org.***ql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:877)
	... 19 more
[2024-12-14T18:07:28.819+0000] {docker.py:413} INFO - 2024-12-14 18:07:28,766 [ERROR] There was an exception while executing the Python Proxy on the Python Side.
Traceback (most recent call last):
  File "/opt/bitnami/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/clientserver.py", line 617, in _call_proxy
    return_value = getattr(self.pool[obj_id], method)(*params)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/bitnami/spark/python/lib/pyspark.zip/pyspark/sql/utils.py", line 120, in call
    raise e
  File "/opt/bitnami/spark/python/lib/pyspark.zip/pyspark/sql/utils.py", line 117, in call
    self.func(DataFrame(jdf, wrapped_session_jdf), batch_id)
  File "/opt/bitnami/spark/spark_streaming.py", line 325, in process_batch
    raise e
  File "/opt/bitnami/spark/spark_streaming.py", line 285, in process_batch
    transformer.save_to_***(posts_df, "reddit_posts")
  File "/opt/bitnami/spark/transformation.py", line 457, in save_to_***
    raise e
  File "/opt/bitnami/spark/transformation.py", line 452, in save_to_***
    .save()
     ^^^^^^
  File "/opt/bitnami/spark/python/lib/pyspark.zip/pyspark/sql/readwriter.py", line 1461, in save
    self._jwrite.save()
  File "/opt/bitnami/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/java_gateway.py", line 1322, in __call__
    return_value = get_return_value(
                   ^^^^^^^^^^^^^^^^^
  File "/opt/bitnami/spark/python/lib/pyspark.zip/pyspark/errors/exceptions/captured.py", line 179, in deco
    return f(*a, **kw)
           ^^^^^^^^^^^
  File "/opt/bitnami/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/protocol.py", line 326, in get_return_value
    raise Py4JJavaError(
py4j.protocol.Py4JJavaError: An error occurred while calling o99.save.
: org.apache.spark.SparkException: Job aborted due to stage failure: Task 0 in stage 10.0 failed 1 times, most recent failure: Lost task 0.0 in stage 10.0 (TID 10) (localhost executor driver): java.sql.BatchUpdateException: Batch entry 0 INSERT INTO reddit_posts ("post_id","title","author","post_time","upvotes","downvotes","num_comments","score","text","first_level_comments_count","second_level_comments_count","subreddit","hour_of_day","day_of_week","created_at") VALUES ('1he0jj3','After Milan''s 2-1 win against Crvena Zvezda, coach Fonseca had said: "I don''t give a f... about the player''s name, I work hard to give my best, some in the team don''t. If I need to play players from the youth team I will do it." Today 6 youth players trained with the first team','Blodgharm','2024-12-14 10:54:56',20,0,2,20,'',1,1,'soccer',10,7,'2024-12-14 18:07:26.569541+00') was aborted: ERROR: column "post_time" is of type timestamp without time zone but expression is of type character varying
  Hint: You will need to rewrite or cast the expression.
  Position: 248  Call getNextException to see other errors in the batch.
	at org.***ql.jdbc.BatchResultHandler.handleError(BatchResultHandler.java:165)
	at org.***ql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:880)
	at org.***ql.jdbc.PgStatement.executeBatch(PgStatement.java:919)
	at org.***ql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1677)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.savePartition(JdbcUtils.scala:751)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1(JdbcUtils.scala:902)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1$adapted(JdbcUtils.scala:901)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2(RDD.scala:1036)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2$adapted(RDD.scala:1036)
	at org.apache.spark.SparkContext.$anonfun$runJob$5(SparkContext.scala:2438)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)
	at org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:161)
	at org.apache.spark.scheduler.Task.run(Task.scala:141)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.***ql.util.PSQLException: ERROR: column "post_time" is of type timestamp without time zone but expression is of type character varying
  Hint: You will need to rewrite or cast the expression.
  Position: 248
	at org.***ql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2712)
	at org.***ql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2400)
	at org.***ql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:367)
	at org.***ql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:326)
	at org.***ql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:877)
	... 19 more

Driver stacktrace:
	at org.apache.spark.scheduler.DAGScheduler.failJobAndIndependentStages(DAGScheduler.scala:2844)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$abortStage$2(DAGScheduler.scala:2780)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$abortStage$2$adapted(DAGScheduler.scala:2779)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at org.apache.spark.scheduler.DAGScheduler.abortStage(DAGScheduler.scala:2779)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$handleTaskSetFailed$1(DAGScheduler.scala:1242)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$handleTaskSetFailed$1$adapted(DAGScheduler.scala:1242)
	at scala.Option.foreach(Option.scala:407)
	at org.apache.spark.scheduler.DAGScheduler.handleTaskSetFailed(DAGScheduler.scala:1242)
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.doOnReceive(DAGScheduler.scala:3048)
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:2982)
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:2971)
	at org.apache.spark.util.EventLoop$$anon$1.run(EventLoop.scala:49)
	at org.apache.spark.scheduler.DAGScheduler.runJob(DAGScheduler.scala:984)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2398)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2419)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2438)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2463)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$1(RDD.scala:1036)
	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:151)
	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:112)
	at org.apache.spark.rdd.RDD.withScope(RDD.scala:407)
	at org.apache.spark.rdd.RDD.foreachPartition(RDD.scala:1034)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.saveTable(JdbcUtils.scala:901)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcRelationProvider.createRelation(JdbcRelationProvider.scala:70)
	at org.apache.spark.sql.execution.datasources.SaveIntoDataSourceCommand.run(SaveIntoDataSourceCommand.scala:48)
	at org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult$lzycompute(commands.scala:75)
	at org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult(commands.scala:73)
	at org.apache.spark.sql.execution.command.ExecutedCommandExec.executeCollect(commands.scala:84)
	at org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$1.$anonfun$applyOrElse$1(QueryExecution.scala:107)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$6(SQLExecution.scala:125)
	at org.apache.spark.sql.execution.SQLExecution$.withSQLConfPropagated(SQLExecution.scala:201)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$1(SQLExecution.scala:108)
	at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:900)
	at org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:66)
	at org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$1.applyOrElse(QueryExecution.scala:107)
	at org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$1.applyOrElse(QueryExecution.scala:98)
	at org.apache.spark.sql.catalyst.trees.TreeNode.$anonfun$transformDownWithPruning$1(TreeNode.scala:461)
	at org.apache.spark.sql.catalyst.trees.CurrentOrigin$.withOrigin(origin.scala:76)
	at org.apache.spark.sql.catalyst.trees.TreeNode.transformDownWithPruning(TreeNode.scala:461)
	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.org$apache$spark$sql$catalyst$plans$logical$AnalysisHelper$$super$transformDownWithPruning(LogicalPlan.scala:32)
	at org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.transformDownWithPruning(AnalysisHelper.scala:267)
	at org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.transformDownWithPruning$(AnalysisHelper.scala:263)
	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.transformDownWithPruning(LogicalPlan.scala:32)
	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.transformDownWithPruning(LogicalPlan.scala:32)
	at org.apache.spark.sql.catalyst.trees.TreeNode.transformDown(TreeNode.scala:437)
	at org.apache.spark.sql.execution.QueryExecution.eagerlyExecuteCommands(QueryExecution.scala:98)
	at org.apache.spark.sql.execution.QueryExecution.commandExecuted$lzycompute(QueryExecution.scala:85)
	at org.apache.spark.sql.execution.QueryExecution.commandExecuted(QueryExecution.scala:83)
	at org.apache.spark.sql.execution.QueryExecution.assertCommandExecuted(QueryExecution.scala:142)
	at org.apache.spark.sql.DataFrameWriter.runCommand(DataFrameWriter.scala:859)
	at org.apache.spark.sql.DataFrameWriter.saveToV1Source(DataFrameWriter.scala:388)
	at org.apache.spark.sql.DataFrameWriter.saveInternal(DataFrameWriter.scala:361)
	at org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:248)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)
	at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)
	at py4j.Gateway.invoke(Gateway.java:282)
	at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)
	at py4j.commands.CallCommand.execute(CallCommand.java:79)
	at py4j.ClientServerConnection.sendCommand(ClientServerConnection.java:244)
	at py4j.CallbackClient.sendCommand(CallbackClient.java:384)
	at py4j.CallbackClient.sendCommand(CallbackClient.java:356)
	at py4j.reflection.PythonProxyHandler.invoke(PythonProxyHandler.java:106)
	at jdk.proxy3/jdk.proxy3.$Proxy30.call(Unknown Source)
	at org.apache.spark.sql.execution.streaming.sources.PythonForeachBatchHelper$.$anonfun$callForeachBatch$1(ForeachBatchSink.scala:53)
	at org.apache.spark.sql.execution.streaming.sources.PythonForeachBatchHelper$.$anonfun$callForeachBatch$1$adapted(ForeachBatchSink.scala:53)
	at org.apache.spark.sql.execution.streaming.sources.ForeachBatchSink.addBatch(ForeachBatchSink.scala:34)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.$anonfun$runBatch$17(MicroBatchExecution.scala:732)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$6(SQLExecution.scala:125)
	at org.apache.spark.sql.execution.SQLExecution$.withSQLConfPropagated(SQLExecution.scala:201)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$1(SQLExecution.scala:108)
	at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:900)
	at org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:66)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.$anonfun$runBatch$16(MicroBatchExecution.scala:729)
	at org.apache.spark.sql.execution.streaming.ProgressReporter.reportTimeTaken(ProgressReporter.scala:427)
	at org.apache.spark.sql.execution.streaming.ProgressReporter.reportTimeTaken$(ProgressReporter.scala:425)
	at org.apache.spark.sql.execution.streaming.StreamExecution.reportTimeTaken(StreamExecution.scala:67)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.runBatch(MicroBatchExecution.scala:729)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.$anonfun$runActivatedStream$2(MicroBatchExecution.scala:286)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at org.apache.spark.sql.execution.streaming.ProgressReporter.reportTimeTaken(ProgressReporter.scala:427)
	at org.apache.spark.sql.execution.streaming.ProgressReporter.reportTimeTaken$(ProgressReporter.scala:425)
	at org.apache.spark.sql.execution.streaming.StreamExecution.reportTimeTaken(StreamExecution.scala:67)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.$anonfun$runActivatedStream$1(MicroBatchExecution.scala:249)
	at org.apache.spark.sql.execution.streaming.SingleBatchExecutor.execute(TriggerExecutor.scala:39)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.runActivatedStream(MicroBatchExecution.scala:239)
	at org.apache.spark.sql.execution.streaming.StreamExecution.$anonfun$runStream$1(StreamExecution.scala:311)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:900)
	at org.apache.spark.sql.execution.streaming.StreamExecution.org$apache$spark$sql$execution$streaming$StreamExecution$$runStream(StreamExecution.scala:289)
	at org.apache.spark.sql.execution.streaming.StreamExecution$$anon$1.$anonfun$run$1(StreamExecution.scala:211)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at org.apache.spark.JobArtifactSet$.withActiveJobArtifactState(JobArtifactSet.scala:94)
	at org.apache.spark.sql.execution.streaming.StreamExecution$$anon$1.run(StreamExecution.scala:211)
Caused by: java.sql.BatchUpdateException: Batch entry 0 INSERT INTO reddit_posts ("post_id","title","author","post_time","upvotes","downvotes","num_comments","score","text","first_level_comments_count","second_level_comments_count","subreddit","hour_of_day","day_of_week","created_at") VALUES ('1he0jj3','After Milan''s 2-1 win against Crvena Zvezda, coach Fonseca had said: "I don''t give a f... about the player''s name, I work hard to give my best, some in the team don''t. If I need to play players from the youth team I will do it." Today 6 youth players trained with the first team','Blodgharm','2024-12-14 10:54:56',20,0,2,20,'',1,1,'soccer',10,7,'2024-12-14 18:07:26.569541+00') was aborted: ERROR: column "post_time" is of type timestamp without time zone but expression is of type character varying
  Hint: You will need to rewrite or cast the expression.
  Position: 248  Call getNextException to see other errors in the batch.
	at org.***ql.jdbc.BatchResultHandler.handleError(BatchResultHandler.java:165)
	at org.***ql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:880)
	at org.***ql.jdbc.PgStatement.executeBatch(PgStatement.java:919)
	at org.***ql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1677)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.savePartition(JdbcUtils.scala:751)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1(JdbcUtils.scala:902)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1$adapted(JdbcUtils.scala:901)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2(RDD.scala:1036)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2$adapted(RDD.scala:1036)
	at org.apache.spark.SparkContext.$anonfun$runJob$5(SparkContext.scala:2438)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)
	at org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:161)
	at org.apache.spark.scheduler.Task.run(Task.scala:141)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.***ql.util.PSQLException: ERROR: column "post_time" is of type timestamp without time zone but expression is of type character varying
  Hint: You will need to rewrite or cast the expression.
  Position: 248
	at org.***ql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2712)
	at org.***ql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2400)
	at org.***ql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:367)
	at org.***ql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:326)
	at org.***ql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:877)
	... 19 more
[2024-12-14T18:07:28.836+0000] {docker.py:413} INFO - 24/12/14 18:07:28 INFO BlockManagerInfo: Removed broadcast_10_piece0 on localhost:45741 in memory (size: 21.9 KiB, free: 434.4 MiB)
[2024-12-14T18:07:28.850+0000] {docker.py:413} INFO - 24/12/14 18:07:28 INFO BlockManagerInfo: Removed broadcast_9_piece0 on localhost:45741 in memory (size: 16.9 KiB, free: 434.4 MiB)
[2024-12-14T18:07:28.887+0000] {docker.py:413} INFO - 24/12/14 18:07:28 ERROR MicroBatchExecution: Query [id = 2f4fb056-b9a8-4f6c-9ae8-6c0892f7084e, runId = 720e5be1-7578-4a45-a12a-05ded77934e0] terminated with error
py4j.Py4JException: An exception was raised by the Python Proxy. Return Message: Traceback (most recent call last):
  File "/opt/bitnami/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/clientserver.py", line 617, in _call_proxy
    return_value = getattr(self.pool[obj_id], method)(*params)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/bitnami/spark/python/lib/pyspark.zip/pyspark/sql/utils.py", line 120, in call
    raise e
  File "/opt/bitnami/spark/python/lib/pyspark.zip/pyspark/sql/utils.py", line 117, in call
    self.func(DataFrame(jdf, wrapped_session_jdf), batch_id)
  File "/opt/bitnami/spark/spark_streaming.py", line 325, in process_batch
    raise e
  File "/opt/bitnami/spark/spark_streaming.py", line 285, in process_batch
    transformer.save_to_***(posts_df, "reddit_posts")
  File "/opt/bitnami/spark/transformation.py", line 457, in save_to_***
    raise e
  File "/opt/bitnami/spark/transformation.py", line 452, in save_to_***
    .save()
     ^^^^^^
  File "/opt/bitnami/spark/python/lib/pyspark.zip/pyspark/sql/readwriter.py", line 1461, in save
    self._jwrite.save()
  File "/opt/bitnami/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/java_gateway.py", line 1322, in __call__
    return_value = get_return_value(
                   ^^^^^^^^^^^^^^^^^
  File "/opt/bitnami/spark/python/lib/pyspark.zip/pyspark/errors/exceptions/captured.py", line 179, in deco
    return f(*a, **kw)
           ^^^^^^^^^^^
  File "/opt/bitnami/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/protocol.py", line 326, in get_return_value
    raise Py4JJavaError(
py4j.protocol.Py4JJavaError: An error occurred while calling o99.save.
: org.apache.spark.SparkException: Job aborted due to stage failure: Task 0 in stage 10.0 failed 1 times, most recent failure: Lost task 0.0 in stage 10.0 (TID 10) (localhost executor driver): java.sql.BatchUpdateException: Batch entry 0 INSERT INTO reddit_posts ("post_id","title","author","post_time","upvotes","downvotes","num_comments","score","text","first_level_comments_count","second_level_comments_count","subreddit","hour_of_day","day_of_week","created_at") VALUES ('1he0jj3','After Milan''s 2-1 win against Crvena Zvezda, coach Fonseca had said: "I don''t give a f... about the player''s name, I work hard to give my best, some in the team don''t. If I need to play players from the youth team I will do it." Today 6 youth players trained with the first team','Blodgharm','2024-12-14 10:54:56',20,0,2,20,'',1,1,'soccer',10,7,'2024-12-14 18:07:26.569541+00') was aborted: ERROR: column "post_time" is of type timestamp without time zone but expression is of type character varying
  Hint: You will need to rewrite or cast the expression.
  Position: 248  Call getNextException to see other errors in the batch.
	at org.***ql.jdbc.BatchResultHandler.handleError(BatchResultHandler.java:165)
	at org.***ql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:880)
	at org.***ql.jdbc.PgStatement.executeBatch(PgStatement.java:919)
	at org.***ql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1677)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.savePartition(JdbcUtils.scala:751)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1(JdbcUtils.scala:902)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1$adapted(JdbcUtils.scala:901)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2(RDD.scala:1036)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2$adapted(RDD.scala:1036)
	at org.apache.spark.SparkContext.$anonfun$runJob$5(SparkContext.scala:2438)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)
	at org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:161)
	at org.apache.spark.scheduler.Task.run(Task.scala:141)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.***ql.util.PSQLException: ERROR: column "post_time" is of type timestamp without time zone but expression is of type character varying
  Hint: You will need to rewrite or cast the expression.
  Position: 248
	at org.***ql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2712)
	at org.***ql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2400)
	at org.***ql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:367)
	at org.***ql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:326)
	at org.***ql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:877)
	... 19 more

Driver stacktrace:
	at org.apache.spark.scheduler.DAGScheduler.failJobAndIndependentStages(DAGScheduler.scala:2844)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$abortStage$2(DAGScheduler.scala:2780)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$abortStage$2$adapted(DAGScheduler.scala:2779)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at org.apache.spark.scheduler.DAGScheduler.abortStage(DAGScheduler.scala:2779)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$handleTaskSetFailed$1(DAGScheduler.scala:1242)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$handleTaskSetFailed$1$adapted(DAGScheduler.scala:1242)
	at scala.Option.foreach(Option.scala:407)
	at org.apache.spark.scheduler.DAGScheduler.handleTaskSetFailed(DAGScheduler.scala:1242)
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.doOnReceive(DAGScheduler.scala:3048)
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:2982)
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:2971)
	at org.apache.spark.util.EventLoop$$anon$1.run(EventLoop.scala:49)
	at org.apache.spark.scheduler.DAGScheduler.runJob(DAGScheduler.scala:984)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2398)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2419)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2438)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2463)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$1(RDD.scala:1036)
	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:151)
	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:112)
	at org.apache.spark.rdd.RDD.withScope(RDD.scala:407)
	at org.apache.spark.rdd.RDD.foreachPartition(RDD.scala:1034)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.saveTable(JdbcUtils.scala:901)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcRelationProvider.createRelation(JdbcRelationProvider.scala:70)
	at org.apache.spark.sql.execution.datasources.SaveIntoDataSourceCommand.run(SaveIntoDataSourceCommand.scala:48)
	at org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult$lzycompute(commands.scala:75)
	at org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult(commands.scala:73)
	at org.apache.spark.sql.execution.command.ExecutedCommandExec.executeCollect(commands.scala:84)
	at org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$1.$anonfun$applyOrElse$1(QueryExecution.scala:107)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$6(SQLExecution.scala:125)
	at org.apache.spark.sql.execution.SQLExecution$.withSQLConfPropagated(SQLExecution.scala:201)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$1(SQLExecution.scala:108)
	at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:900)
	at org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:66)
	at org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$1.applyOrElse(QueryExecution.scala:107)
	at org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$1.applyOrElse(QueryExecution.scala:98)
	at org.apache.spark.sql.catalyst.trees.TreeNode.$anonfun$transformDownWithPruning$1(TreeNode.scala:461)
	at org.apache.spark.sql.catalyst.trees.CurrentOrigin$.withOrigin(origin.scala:76)
	at org.apache.spark.sql.catalyst.trees.TreeNode.transformDownWithPruning(TreeNode.scala:461)
	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.org$apache$spark$sql$catalyst$plans$logical$AnalysisHelper$$super$transformDownWithPruning(LogicalPlan.scala:32)
	at org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.transformDownWithPruning(AnalysisHelper.scala:267)
	at org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.transformDownWithPruning$(AnalysisHelper.scala:263)
	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.transformDownWithPruning(LogicalPlan.scala:32)
	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.transformDownWithPruning(LogicalPlan.scala:32)
	at org.apache.spark.sql.catalyst.trees.TreeNode.transformDown(TreeNode.scala:437)
	at org.apache.spark.sql.execution.QueryExecution.eagerlyExecuteCommands(QueryExecution.scala:98)
	at org.apache.spark.sql.execution.QueryExecution.commandExecuted$lzycompute(QueryExecution.scala:85)
	at org.apache.spark.sql.execution.QueryExecution.commandExecuted(QueryExecution.scala:83)
	at org.apache.spark.sql.execution.QueryExecution.assertCommandExecuted(QueryExecution.scala:142)
	at org.apache.spark.sql.DataFrameWriter.runCommand(DataFrameWriter.scala:859)
	at org.apache.spark.sql.DataFrameWriter.saveToV1Source(DataFrameWriter.scala:388)
	at org.apache.spark.sql.DataFrameWriter.saveInternal(DataFrameWriter.scala:361)
	at org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:248)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)
	at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)
	at py4j.Gateway.invoke(Gateway.java:282)
	at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)
	at py4j.commands.CallCommand.execute(CallCommand.java:79)
	at py4j.ClientServerConnection.sendCommand(ClientServerConnection.java:244)
	at py4j.CallbackClient.sendCommand(CallbackClient.java:384)
	at py4j.CallbackClient.sendCommand(CallbackClient.java:356)
	at py4j.reflection.PythonProxyHandler.invoke(PythonProxyHandler.java:106)
	at jdk.proxy3/jdk.proxy3.$Proxy30.call(Unknown Source)
	at org.apache.spark.sql.execution.streaming.sources.PythonForeachBatchHelper$.$anonfun$callForeachBatch$1(ForeachBatchSink.scala:53)
	at org.apache.spark.sql.execution.streaming.sources.PythonForeachBatchHelper$.$anonfun$callForeachBatch$1$adapted(ForeachBatchSink.scala:53)
	at org.apache.spark.sql.execution.streaming.sources.ForeachBatchSink.addBatch(ForeachBatchSink.scala:34)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.$anonfun$runBatch$17(MicroBatchExecution.scala:732)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$6(SQLExecution.scala:125)
	at org.apache.spark.sql.execution.SQLExecution$.withSQLConfPropagated(SQLExecution.scala:201)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$1(SQLExecution.scala:108)
	at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:900)
	at org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:66)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.$anonfun$runBatch$16(MicroBatchExecution.scala:729)
	at org.apache.spark.sql.execution.streaming.ProgressReporter.reportTimeTaken(ProgressReporter.scala:427)
	at org.apache.spark.sql.execution.streaming.ProgressReporter.reportTimeTaken$(ProgressReporter.scala:425)
	at org.apache.spark.sql.execution.streaming.StreamExecution.reportTimeTaken(StreamExecution.scala:67)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.runBatch(MicroBatchExecution.scala:729)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.$anonfun$runActivatedStream$2(MicroBatchExecution.scala:286)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at org.apache.spark.sql.execution.streaming.ProgressReporter.reportTimeTaken(ProgressReporter.scala:427)
	at org.apache.spark.sql.execution.streaming.ProgressReporter.reportTimeTaken$(ProgressReporter.scala:425)
	at org.apache.spark.sql.execution.streaming.StreamExecution.reportTimeTaken(StreamExecution.scala:67)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.$anonfun$runActivatedStream$1(MicroBatchExecution.scala:249)
	at org.apache.spark.sql.execution.streaming.SingleBatchExecutor.execute(TriggerExecutor.scala:39)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.runActivatedStream(MicroBatchExecution.scala:239)
	at org.apache.spark.sql.execution.streaming.StreamExecution.$anonfun$runStream$1(StreamExecution.scala:311)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:900)
	at org.apache.spark.sql.execution.streaming.StreamExecution.org$apache$spark$sql$execution$streaming$StreamExecution$$runStream(StreamExecution.scala:289)
	at org.apache.spark.sql.execution.streaming.StreamExecution$$anon$1.$anonfun$run$1(StreamExecution.scala:211)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at org.apache.spark.JobArtifactSet$.withActiveJobArtifactState(JobArtifactSet.scala:94)
	at org.apache.spark.sql.execution.streaming.StreamExecution$$anon$1.run(StreamExecution.scala:211)
Caused by: java.sql.BatchUpdateException: Batch entry 0 INSERT INTO reddit_posts ("post_id","title","author","post_time","upvotes","downvotes","num_comments","score","text","first_level_comments_count","second_level_comments_count","subreddit","hour_of_day","day_of_week","created_at") VALUES ('1he0jj3','After Milan''s 2-1 win against Crvena Zvezda, coach Fonseca had said: "I don''t give a f... about the player''s name, I work hard to give my best, some in the team don''t. If I need to play players from the youth team I will do it." Today 6 youth players trained with the first team','Blodgharm','2024-12-14 10:54:56',20,0,2,20,'',1,1,'soccer',10,7,'2024-12-14 18:07:26.569541+00') was aborted: ERROR: column "post_time" is of type timestamp without time zone but expression is of type character varying
  Hint: You will need to rewrite or cast the expression.
  Position: 248  Call getNextException to see other errors in the batch.
	at org.***ql.jdbc.BatchResultHandler.handleError(BatchResultHandler.java:165)
	at org.***ql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:880)
	at org.***ql.jdbc.PgStatement.executeBatch(PgStatement.java:919)
	at org.***ql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1677)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.savePartition(JdbcUtils.scala:751)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1(JdbcUtils.scala:902)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1$adapted(JdbcUtils.scala:901)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2(RDD.scala:1036)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2$adapted(RDD.scala:1036)
	at org.apache.spark.SparkContext.$anonfun$runJob$5(SparkContext.scala:2438)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)
	at org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:161)
	at org.apache.spark.scheduler.Task.run(Task.scala:141)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.***ql.util.PSQLException: ERROR: column "post_time" is of type timestamp without time zone but expression is of type character varying
  Hint: You will need to rewrite or cast the expression.
  Position: 248
	at org.***ql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2712)
	at org.***ql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2400)
	at org.***ql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:367)
	at org.***ql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:326)
	at org.***ql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:877)
	... 19 more


	at py4j.Protocol.getReturnValue(Protocol.java:476)
	at py4j.reflection.PythonProxyHandler.invoke(PythonProxyHandler.java:108)
	at jdk.proxy3/jdk.proxy3.$Proxy30.call(Unknown Source)
	at org.apache.spark.sql.execution.streaming.sources.PythonForeachBatchHelper$.$anonfun$callForeachBatch$1(ForeachBatchSink.scala:53)
	at org.apache.spark.sql.execution.streaming.sources.PythonForeachBatchHelper$.$anonfun$callForeachBatch$1$adapted(ForeachBatchSink.scala:53)
	at org.apache.spark.sql.execution.streaming.sources.ForeachBatchSink.addBatch(ForeachBatchSink.scala:34)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.$anonfun$runBatch$17(MicroBatchExecution.scala:732)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$6(SQLExecution.scala:125)
	at org.apache.spark.sql.execution.SQLExecution$.withSQLConfPropagated(SQLExecution.scala:201)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$1(SQLExecution.scala:108)
	at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:900)
	at org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:66)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.$anonfun$runBatch$16(MicroBatchExecution.scala:729)
	at org.apache.spark.sql.execution.streaming.ProgressReporter.reportTimeTaken(ProgressReporter.scala:427)
	at org.apache.spark.sql.execution.streaming.ProgressReporter.reportTimeTaken$(ProgressReporter.scala:425)
	at org.apache.spark.sql.execution.streaming.StreamExecution.reportTimeTaken(StreamExecution.scala:67)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.runBatch(MicroBatchExecution.scala:729)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.$anonfun$runActivatedStream$2(MicroBatchExecution.scala:286)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at org.apache.spark.sql.execution.streaming.ProgressReporter.reportTimeTaken(ProgressReporter.scala:427)
	at org.apache.spark.sql.execution.streaming.ProgressReporter.reportTimeTaken$(ProgressReporter.scala:425)
	at org.apache.spark.sql.execution.streaming.StreamExecution.reportTimeTaken(StreamExecution.scala:67)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.$anonfun$runActivatedStream$1(MicroBatchExecution.scala:249)
	at org.apache.spark.sql.execution.streaming.SingleBatchExecutor.execute(TriggerExecutor.scala:39)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.runActivatedStream(MicroBatchExecution.scala:239)
	at org.apache.spark.sql.execution.streaming.StreamExecution.$anonfun$runStream$1(StreamExecution.scala:311)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:900)
	at org.apache.spark.sql.execution.streaming.StreamExecution.org$apache$spark$sql$execution$streaming$StreamExecution$$runStream(StreamExecution.scala:289)
	at org.apache.spark.sql.execution.streaming.StreamExecution$$anon$1.$anonfun$run$1(StreamExecution.scala:211)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at org.apache.spark.JobArtifactSet$.withActiveJobArtifactState(JobArtifactSet.scala:94)
	at org.apache.spark.sql.execution.streaming.StreamExecution$$anon$1.run(StreamExecution.scala:211)
[2024-12-14T18:07:28.892+0000] {docker.py:413} INFO - 24/12/14 18:07:28 INFO AppInfoParser: App info kafka.admin.client for adminclient-1 unregistered
[2024-12-14T18:07:28.906+0000] {docker.py:413} INFO - 24/12/14 18:07:28 INFO Metrics: Metrics scheduler closed
[2024-12-14T18:07:28.908+0000] {docker.py:413} INFO - 24/12/14 18:07:28 INFO Metrics: Closing reporter org.apache.kafka.common.metrics.JmxReporter
[2024-12-14T18:07:28.909+0000] {docker.py:413} INFO - 24/12/14 18:07:28 INFO Metrics: Metrics reporters closed
[2024-12-14T18:07:28.912+0000] {docker.py:413} INFO - 24/12/14 18:07:28 INFO MicroBatchExecution: Async log purge executor pool for query [id = 2f4fb056-b9a8-4f6c-9ae8-6c0892f7084e, runId = 720e5be1-7578-4a45-a12a-05ded77934e0] has been shutdown
[2024-12-14T18:07:29.308+0000] {docker.py:413} INFO - 2024-12-14 18:07:29,291 [ERROR] Error in stream processing: [STREAM_FAILED] Query [id = 2f4fb056-b9a8-4f6c-9ae8-6c0892f7084e, runId = 720e5be1-7578-4a45-a12a-05ded77934e0] terminated with exception: An exception was raised by the Python Proxy. Return Message: Traceback (most recent call last):
  File "/opt/bitnami/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/clientserver.py", line 617, in _call_proxy
    return_value = getattr(self.pool[obj_id], method)(*params)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/bitnami/spark/python/lib/pyspark.zip/pyspark/sql/utils.py", line 120, in call
    raise e
  File "/opt/bitnami/spark/python/lib/pyspark.zip/pyspark/sql/utils.py", line 117, in call
    self.func(DataFrame(jdf, wrapped_session_jdf), batch_id)
  File "/opt/bitnami/spark/spark_streaming.py", line 325, in process_batch
    raise e
  File "/opt/bitnami/spark/spark_streaming.py", line 285, in process_batch
    transformer.save_to_***(posts_df, "reddit_posts")
  File "/opt/bitnami/spark/transformation.py", line 457, in save_to_***
    raise e
  File "/opt/bitnami/spark/transformation.py", line 452, in save_to_***
    .save()
     ^^^^^^
  File "/opt/bitnami/spark/python/lib/pyspark.zip/pyspark/sql/readwriter.py", line 1461, in save
    self._jwrite.save()
  File "/opt/bitnami/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/java_gateway.py", line 1322, in __call__
    return_value = get_return_value(
                   ^^^^^^^^^^^^^^^^^
  File "/opt/bitnami/spark/python/lib/pyspark.zip/pyspark/errors/exceptions/captured.py", line 179, in deco
    return f(*a, **kw)
           ^^^^^^^^^^^
  File "/opt/bitnami/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/protocol.py", line 326, in get_return_value
    raise Py4JJavaError(
py4j.protocol.Py4JJavaError: An error occurred while calling o99.save.
: org.apache.spark.SparkException: Job aborted due to stage failure: Task 0 in stage 10.0 failed 1 times, most recent failure: Lost task 0.0 in stage 10.0 (TID 10) (localhost executor driver): java.sql.BatchUpdateException: Batch entry 0 INSERT INTO reddit_posts ("post_id","title","author","post_time","upvotes","downvotes","num_comments","score","text","first_level_comments_count","second_level_comments_count","subreddit","hour_of_day","day_of_week","created_at") VALUES ('1he0jj3','After Milan''s 2-1 win against Crvena Zvezda, coach Fonseca had said: "I don''t give a f... about the player''s name, I work hard to give my best, some in the team don''t. If I need to play players from the youth team I will do it." Today 6 youth players trained with the first team','Blodgharm','2024-12-14 10:54:56',20,0,2,20,'',1,1,'soccer',10,7,'2024-12-14 18:07:26.569541+00') was aborted: ERROR: column "post_time" is of type timestamp without time zone but expression is of type character varying
  Hint: You will need to rewrite or cast the expression.
  Position: 248  Call getNextException to see other errors in the batch.
	at org.***ql.jdbc.BatchResultHandler.handleError(BatchResultHandler.java:165)
	at org.***ql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:880)
	at org.***ql.jdbc.PgStatement.executeBatch(PgStatement.java:919)
	at org.***ql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1677)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.savePartition(JdbcUtils.scala:751)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1(JdbcUtils.scala:902)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1$adapted(JdbcUtils.scala:901)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2(RDD.scala:1036)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2$adapted(RDD.scala:1036)
	at org.apache.spark.SparkContext.$anonfun$runJob$5(SparkContext.scala:2438)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)
	at org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:161)
	at org.apache.spark.scheduler.Task.run(Task.scala:141)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.***ql.util.PSQLException: ERROR: column "post_time" is of type timestamp without time zone but expression is of type character varying
  Hint: You will need to rewrite or cast the expression.
  Position: 248
	at org.***ql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2712)
	at org.***ql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2400)
	at org.***ql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:367)
	at org.***ql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:326)
	at org.***ql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:877)
	... 19 more

Driver stacktrace:
	at org.apache.spark.scheduler.DAGScheduler.failJobAndIndependentStages(DAGScheduler.scala:2844)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$abortStage$2(DAGScheduler.scala:2780)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$abortStage$2$adapted(DAGScheduler.scala:2779)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at org.apache.spark.scheduler.DAGScheduler.abortStage(DAGScheduler.scala:2779)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$handleTaskSetFailed$1(DAGScheduler.scala:1242)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$handleTaskSetFailed$1$adapted(DAGScheduler.scala:1242)
	at scala.Option.foreach(Option.scala:407)
	at org.apache.spark.scheduler.DAGScheduler.handleTaskSetFailed(DAGScheduler.scala:1242)
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.doOnReceive(DAGScheduler.scala:3048)
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:2982)
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:2971)
	at org.apache.spark.util.EventLoop$$anon$1.run(EventLoop.scala:49)
	at org.apache.spark.scheduler.DAGScheduler.runJob(DAGScheduler.scala:984)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2398)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2419)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2438)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2463)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$1(RDD.scala:1036)
	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:151)
	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:112)
	at org.apache.spark.rdd.RDD.withScope(RDD.scala:407)
	at org.apache.spark.rdd.RDD.foreachPartition(RDD.scala:1034)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.saveTable(JdbcUtils.scala:901)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcRelationProvider.createRelation(JdbcRelationProvider.scala:70)
	at org.apache.spark.sql.execution.datasources.SaveIntoDataSourceCommand.run(SaveIntoDataSourceCommand.scala:48)
	at org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult$lzycompute(commands.scala:75)
	at org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult(commands.scala:73)
	at org.apache.spark.sql.execution.command.ExecutedCommandExec.executeCollect(commands.scala:84)
	at org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$1.$anonfun$applyOrElse$1(QueryExecution.scala:107)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$6(SQLExecution.scala:125)
	at org.apache.spark.sql.execution.SQLExecution$.withSQLConfPropagated(SQLExecution.scala:201)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$1(SQLExecution.scala:108)
	at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:900)
	at org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:66)
	at org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$1.applyOrElse(QueryExecution.scala:107)
	at org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$1.applyOrElse(QueryExecution.scala:98)
	at org.apache.spark.sql.catalyst.trees.TreeNode.$anonfun$transformDownWithPruning$1(TreeNode.scala:461)
	at org.apache.spark.sql.catalyst.trees.CurrentOrigin$.withOrigin(origin.scala:76)
	at org.apache.spark.sql.catalyst.trees.TreeNode.transformDownWithPruning(TreeNode.scala:461)
	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.org$apache$spark$sql$catalyst$plans$logical$AnalysisHelper$$super$transformDownWithPruning(LogicalPlan.scala:32)
	at org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.transformDownWithPruning(AnalysisHelper.scala:267)
	at org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.transformDownWithPruning$(AnalysisHelper.scala:263)
	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.transformDownWithPruning(LogicalPlan.scala:32)
	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.transformDownWithPruning(LogicalPlan.scala:32)
	at org.apache.spark.sql.catalyst.trees.TreeNode.transformDown(TreeNode.scala:437)
	at org.apache.spark.sql.execution.QueryExecution.eagerlyExecuteCommands(QueryExecution.scala:98)
	at org.apache.spark.sql.execution.QueryExecution.commandExecuted$lzycompute(QueryExecution.scala:85)
	at org.apache.spark.sql.execution.QueryExecution.commandExecuted(QueryExecution.scala:83)
	at org.apache.spark.sql.execution.QueryExecution.assertCommandExecuted(QueryExecution.scala:142)
	at org.apache.spark.sql.DataFrameWriter.runCommand(DataFrameWriter.scala:859)
	at org.apache.spark.sql.DataFrameWriter.saveToV1Source(DataFrameWriter.scala:388)
	at org.apache.spark.sql.DataFrameWriter.saveInternal(DataFrameWriter.scala:361)
	at org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:248)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)
	at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)
	at py4j.Gateway.invoke(Gateway.java:282)
	at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)
	at py4j.commands.CallCommand.execute(CallCommand.java:79)
	at py4j.ClientServerConnection.sendCommand(ClientServerConnection.java:244)
	at py4j.CallbackClient.sendCommand(CallbackClient.java:384)
	at py4j.CallbackClient.sendCommand(CallbackClient.java:356)
	at py4j.reflection.PythonProxyHandler.invoke(PythonProxyHandler.java:106)
	at jdk.proxy3/jdk.proxy3.$Proxy30.call(Unknown Source)
	at org.apache.spark.sql.execution.streaming.sources.PythonForeachBatchHelper$.$anonfun$callForeachBatch$1(ForeachBatchSink.scala:53)
	at org.apache.spark.sql.execution.streaming.sources.PythonForeachBatchHelper$.$anonfun$callForeachBatch$1$adapted(ForeachBatchSink.scala:53)
	at org.apache.spark.sql.execution.streaming.sources.ForeachBatchSink.addBatch(ForeachBatchSink.scala:34)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.$anonfun$runBatch$17(MicroBatchExecution.scala:732)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$6(SQLExecution.scala:125)
	at org.apache.spark.sql.execution.SQLExecution$.withSQLConfPropagated(SQLExecution.scala:201)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$1(SQLExecution.scala:108)
	at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:900)
	at org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:66)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.$anonfun$runBatch$16(MicroBatchExecution.scala:729)
	at org.apache.spark.sql.execution.streaming.ProgressReporter.reportTimeTaken(ProgressReporter.scala:427)
	at org.apache.spark.sql.execution.streaming.ProgressReporter.reportTimeTaken$(ProgressReporter.scala:425)
	at org.apache.spark.sql.execution.streaming.StreamExecution.reportTimeTaken(StreamExecution.scala:67)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.runBatch(MicroBatchExecution.scala:729)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.$anonfun$runActivatedStream$2(MicroBatchExecution.scala:286)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at org.apache.spark.sql.execution.streaming.ProgressReporter.reportTimeTaken(ProgressReporter.scala:427)
	at org.apache.spark.sql.execution.streaming.ProgressReporter.reportTimeTaken$(ProgressReporter.scala:425)
	at org.apache.spark.sql.execution.streaming.StreamExecution.reportTimeTaken(StreamExecution.scala:67)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.$anonfun$runActivatedStream$1(MicroBatchExecution.scala:249)
	at org.apache.spark.sql.execution.streaming.SingleBatchExecutor.execute(TriggerExecutor.scala:39)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.runActivatedStream(MicroBatchExecution.scala:239)
	at org.apache.spark.sql.execution.streaming.StreamExecution.$anonfun$runStream$1(StreamExecution.scala:311)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:900)
	at org.apache.spark.sql.execution.streaming.StreamExecution.org$apache$spark$sql$execution$streaming$StreamExecution$$runStream(StreamExecution.scala:289)
	at org.apache.spark.sql.execution.streaming.StreamExecution$$anon$1.$anonfun$run$1(StreamExecution.scala:211)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at org.apache.spark.JobArtifactSet$.withActiveJobArtifactState(JobArtifactSet.scala:94)
	at org.apache.spark.sql.execution.streaming.StreamExecution$$anon$1.run(StreamExecution.scala:211)
Caused by: java.sql.BatchUpdateException: Batch entry 0 INSERT INTO reddit_posts ("post_id","title","author","post_time","upvotes","downvotes","num_comments","score","text","first_level_comments_count","second_level_comments_count","subreddit","hour_of_day","day_of_week","created_at") VALUES ('1he0jj3','After Milan''s 2-1 win against Crvena Zvezda, coach Fonseca had said: "I don''t give a f... about the player''s name, I work hard to give my best, some in the team don''t. If I need to play players from the youth team I will do it." Today 6 youth players trained with the first team','Blodgharm','2024-12-14 10:54:56',20,0,2,20,'',1,1,'soccer',10,7,'2024-12-14 18:07:26.569541+00') was aborted: ERROR: column "post_time" is of type timestamp without time zone but expression is of type character varying
  Hint: You will need to rewrite or cast the expression.
  Position: 248  Call getNextException to see other errors in the batch.
	at org.***ql.jdbc.BatchResultHandler.handleError(BatchResultHandler.java:165)
	at org.***ql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:880)
	at org.***ql.jdbc.PgStatement.executeBatch(PgStatement.java:919)
	at org.***ql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1677)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.savePartition(JdbcUtils.scala:751)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1(JdbcUtils.scala:902)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1$adapted(JdbcUtils.scala:901)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2(RDD.scala:1036)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2$adapted(RDD.scala:1036)
	at org.apache.spark.SparkContext.$anonfun$runJob$5(SparkContext.scala:2438)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)
	at org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:161)
	at org.apache.spark.scheduler.Task.run(Task.scala:141)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.***ql.util.PSQLException: ERROR: column "post_time" is of type timestamp without time zone but expression is of type character varying
  Hint: You will need to rewrite or cast the expression.
  Position: 248
	at org.***ql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2712)
	at org.***ql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2400)
	at org.***ql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:367)
	at org.***ql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:326)
	at org.***ql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:877)
	... 19 more

Traceback (most recent call last):
  File "/opt/bitnami/spark/spark_streaming.py", line 337, in process_stream
    query.awaitTermination()
  File "/opt/bitnami/spark/python/lib/pyspark.zip/pyspark/sql/streaming/query.py", line 221, in awaitTermination
    return self._jsq.awaitTermination()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/bitnami/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/java_gateway.py", line 1322, in __call__
    return_value = get_return_value(
                   ^^^^^^^^^^^^^^^^^
  File "/opt/bitnami/spark/python/lib/pyspark.zip/pyspark/errors/exceptions/captured.py", line 185, in deco
    raise converted from None
pyspark.errors.exceptions.captured.StreamingQueryException: [STREAM_FAILED] Query [id = 2f4fb056-b9a8-4f6c-9ae8-6c0892f7084e, runId = 720e5be1-7578-4a45-a12a-05ded77934e0] terminated with exception: An exception was raised by the Python Proxy. Return Message: Traceback (most recent call last):
  File "/opt/bitnami/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/clientserver.py", line 617, in _call_proxy
    return_value = getattr(self.pool[obj_id], method)(*params)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/bitnami/spark/python/lib/pyspark.zip/pyspark/sql/utils.py", line 120, in call
    raise e
  File "/opt/bitnami/spark/python/lib/pyspark.zip/pyspark/sql/utils.py", line 117, in call
    self.func(DataFrame(jdf, wrapped_session_jdf), batch_id)
  File "/opt/bitnami/spark/spark_streaming.py", line 325, in process_batch
    raise e
  File "/opt/bitnami/spark/spark_streaming.py", line 285, in process_batch
    transformer.save_to_***(posts_df, "reddit_posts")
  File "/opt/bitnami/spark/transformation.py", line 457, in save_to_***
    raise e
  File "/opt/bitnami/spark/transformation.py", line 452, in save_to_***
    .save()
     ^^^^^^
  File "/opt/bitnami/spark/python/lib/pyspark.zip/pyspark/sql/readwriter.py", line 1461, in save
    self._jwrite.save()
  File "/opt/bitnami/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/java_gateway.py", line 1322, in __call__
    return_value = get_return_value(
                   ^^^^^^^^^^^^^^^^^
  File "/opt/bitnami/spark/python/lib/pyspark.zip/pyspark/errors/exceptions/captured.py", line 179, in deco
    return f(*a, **kw)
           ^^^^^^^^^^^
  File "/opt/bitnami/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/protocol.py", line 326, in get_return_value
    raise Py4JJavaError(
py4j.protocol.Py4JJavaError: An error occurred while calling o99.save.
: org.apache.spark.SparkException: Job aborted due to stage failure: Task 0 in stage 10.0 failed 1 times, most recent failure: Lost task 0.0 in stage 10.0 (TID 10) (localhost executor driver): java.sql.BatchUpdateException: Batch entry 0 INSERT INTO reddit_posts ("post_id","title","author","post_time","upvotes","downvotes","num_comments","score","text","first_level_comments_count","second_level_comments_count","subreddit","hour_of_day","day_of_week","created_at") VALUES ('1he0jj3','After Milan''s 2-1 win against Crvena Zvezda, coach Fonseca had said: "I don''t give a f... about the player''s name, I work hard to give my best, some in the team don''t. If I need to play players from the youth team I will do it." Today 6 youth players trained with the first team','Blodgharm','2024-12-14 10:54:56',20,0,2,20,'',1,1,'soccer',10,7,'2024-12-14 18:07:26.569541+00') was aborted: ERROR: column "post_time" is of type timestamp without time zone but expression is of type character varying
  Hint: You will need to rewrite or cast the expression.
  Position: 248  Call getNextException to see other errors in the batch.
	at org.***ql.jdbc.BatchResultHandler.handleError(BatchResultHandler.java:165)
	at org.***ql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:880)
	at org.***ql.jdbc.PgStatement.executeBatch(PgStatement.java:919)
	at org.***ql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1677)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.savePartition(JdbcUtils.scala:751)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1(JdbcUtils.scala:902)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1$adapted(JdbcUtils.scala:901)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2(RDD.scala:1036)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2$adapted(RDD.scala:1036)
	at org.apache.spark.SparkContext.$anonfun$runJob$5(SparkContext.scala:2438)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)
	at org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:161)
	at org.apache.spark.scheduler.Task.run(Task.scala:141)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.***ql.util.PSQLException: ERROR: column "post_time" is of type timestamp without time zone but expression is of type character varying
  Hint: You will need to rewrite or cast the expression.
  Position: 248
	at org.***ql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2712)
	at org.***ql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2400)
	at org.***ql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:367)
	at org.***ql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:326)
	at org.***ql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:877)
	... 19 more

Driver stacktrace:
	at org.apache.spark.scheduler.DAGScheduler.failJobAndIndependentStages(DAGScheduler.scala:2844)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$abortStage$2(DAGScheduler.scala:2780)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$abortStage$2$adapted(DAGScheduler.scala:2779)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at org.apache.spark.scheduler.DAGScheduler.abortStage(DAGScheduler.scala:2779)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$handleTaskSetFailed$1(DAGScheduler.scala:1242)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$handleTaskSetFailed$1$adapted(DAGScheduler.scala:1242)
	at scala.Option.foreach(Option.scala:407)
	at org.apache.spark.scheduler.DAGScheduler.handleTaskSetFailed(DAGScheduler.scala:1242)
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.doOnReceive(DAGScheduler.scala:3048)
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:2982)
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:2971)
	at org.apache.spark.util.EventLoop$$anon$1.run(EventLoop.scala:49)
	at org.apache.spark.scheduler.DAGScheduler.runJob(DAGScheduler.scala:984)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2398)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2419)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2438)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2463)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$1(RDD.scala:1036)
	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:151)
	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:112)
	at org.apache.spark.rdd.RDD.withScope(RDD.scala:407)
	at org.apache.spark.rdd.RDD.foreachPartition(RDD.scala:1034)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.saveTable(JdbcUtils.scala:901)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcRelationProvider.createRelation(JdbcRelationProvider.scala:70)
	at org.apache.spark.sql.execution.datasources.SaveIntoDataSourceCommand.run(SaveIntoDataSourceCommand.scala:48)
	at org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult$lzycompute(commands.scala:75)
	at org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult(commands.scala:73)
	at org.apache.spark.sql.execution.command.ExecutedCommandExec.executeCollect(commands.scala:84)
	at org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$1.$anonfun$applyOrElse$1(QueryExecution.scala:107)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$6(SQLExecution.scala:125)
	at org.apache.spark.sql.execution.SQLExecution$.withSQLConfPropagated(SQLExecution.scala:201)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$1(SQLExecution.scala:108)
	at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:900)
	at org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:66)
	at org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$1.applyOrElse(QueryExecution.scala:107)
	at org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$1.applyOrElse(QueryExecution.scala:98)
	at org.apache.spark.sql.catalyst.trees.TreeNode.$anonfun$transformDownWithPruning$1(TreeNode.scala:461)
	at org.apache.spark.sql.catalyst.trees.CurrentOrigin$.withOrigin(origin.scala:76)
	at org.apache.spark.sql.catalyst.trees.TreeNode.transformDownWithPruning(TreeNode.scala:461)
	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.org$apache$spark$sql$catalyst$plans$logical$AnalysisHelper$$super$transformDownWithPruning(LogicalPlan.scala:32)
	at org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.transformDownWithPruning(AnalysisHelper.scala:267)
	at org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.transformDownWithPruning$(AnalysisHelper.scala:263)
	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.transformDownWithPruning(LogicalPlan.scala:32)
	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.transformDownWithPruning(LogicalPlan.scala:32)
	at org.apache.spark.sql.catalyst.trees.TreeNode.transformDown(TreeNode.scala:437)
	at org.apache.spark.sql.execution.QueryExecution.eagerlyExecuteCommands(QueryExecution.scala:98)
	at org.apache.spark.sql.execution.QueryExecution.commandExecuted$lzycompute(QueryExecution.scala:85)
	at org.apache.spark.sql.execution.QueryExecution.commandExecuted(QueryExecution.scala:83)
	at org.apache.spark.sql.execution.QueryExecution.assertCommandExecuted(QueryExecution.scala:142)
	at org.apache.spark.sql.DataFrameWriter.runCommand(DataFrameWriter.scala:859)
	at org.apache.spark.sql.DataFrameWriter.saveToV1Source(DataFrameWriter.scala:388)
	at org.apache.spark.sql.DataFrameWriter.saveInternal(DataFrameWriter.scala:361)
	at org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:248)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)
	at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)
	at py4j.Gateway.invoke(Gateway.java:282)
	at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)
	at py4j.commands.CallCommand.execute(CallCommand.java:79)
	at py4j.ClientServerConnection.sendCommand(ClientServerConnection.java:244)
	at py4j.CallbackClient.sendCommand(CallbackClient.java:384)
	at py4j.CallbackClient.sendCommand(CallbackClient.java:356)
	at py4j.reflection.PythonProxyHandler.invoke(PythonProxyHandler.java:106)
	at jdk.proxy3/jdk.proxy3.$Proxy30.call(Unknown Source)
	at org.apache.spark.sql.execution.streaming.sources.PythonForeachBatchHelper$.$anonfun$callForeachBatch$1(ForeachBatchSink.scala:53)
	at org.apache.spark.sql.execution.streaming.sources.PythonForeachBatchHelper$.$anonfun$callForeachBatch$1$adapted(ForeachBatchSink.scala:53)
	at org.apache.spark.sql.execution.streaming.sources.ForeachBatchSink.addBatch(ForeachBatchSink.scala:34)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.$anonfun$runBatch$17(MicroBatchExecution.scala:732)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$6(SQLExecution.scala:125)
	at org.apache.spark.sql.execution.SQLExecution$.withSQLConfPropagated(SQLExecution.scala:201)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$1(SQLExecution.scala:108)
	at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:900)
	at org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:66)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.$anonfun$runBatch$16(MicroBatchExecution.scala:729)
	at org.apache.spark.sql.execution.streaming.ProgressReporter.reportTimeTaken(ProgressReporter.scala:427)
	at org.apache.spark.sql.execution.streaming.ProgressReporter.reportTimeTaken$(ProgressReporter.scala:425)
	at org.apache.spark.sql.execution.streaming.StreamExecution.reportTimeTaken(StreamExecution.scala:67)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.runBatch(MicroBatchExecution.scala:729)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.$anonfun$runActivatedStream$2(MicroBatchExecution.scala:286)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at org.apache.spark.sql.execution.streaming.ProgressReporter.reportTimeTaken(ProgressReporter.scala:427)
	at org.apache.spark.sql.execution.streaming.ProgressReporter.reportTimeTaken$(ProgressReporter.scala:425)
	at org.apache.spark.sql.execution.streaming.StreamExecution.reportTimeTaken(StreamExecution.scala:67)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.$anonfun$runActivatedStream$1(MicroBatchExecution.scala:249)
	at org.apache.spark.sql.execution.streaming.SingleBatchExecutor.execute(TriggerExecutor.scala:39)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.runActivatedStream(MicroBatchExecution.scala:239)
	at org.apache.spark.sql.execution.streaming.StreamExecution.$anonfun$runStream$1(StreamExecution.scala:311)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:900)
	at o
[2024-12-14T18:07:29.313+0000] {docker.py:413} INFO - rg.apache.spark.sql.execution.streaming.StreamExecution.org$apache$spark$sql$execution$streaming$StreamExecution$$runStream(StreamExecution.scala:289)
	at org.apache.spark.sql.execution.streaming.StreamExecution$$anon$1.$anonfun$run$1(StreamExecution.scala:211)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at org.apache.spark.JobArtifactSet$.withActiveJobArtifactState(JobArtifactSet.scala:94)
	at org.apache.spark.sql.execution.streaming.StreamExecution$$anon$1.run(StreamExecution.scala:211)
Caused by: java.sql.BatchUpdateException: Batch entry 0 INSERT INTO reddit_posts ("post_id","title","author","post_time","upvotes","downvotes","num_comments","score","text","first_level_comments_count","second_level_comments_count","subreddit","hour_of_day","day_of_week","created_at") VALUES ('1he0jj3','After Milan''s 2-1 win against Crvena Zvezda, coach Fonseca had said: "I don''t give a f... about the player''s name, I work hard to give my best, some in the team don''t. If I need to play players from the youth team I will do it." Today 6 youth players trained with the first team','Blodgharm','2024-12-14 10:54:56',20,0,2,20,'',1,1,'soccer',10,7,'2024-12-14 18:07:26.569541+00') was aborted: ERROR: column "post_time" is of type timestamp without time zone but expression is of type character varying
  Hint: You will need to rewrite or cast the expression.
  Position: 248  Call getNextException to see other errors in the batch.
	at org.***ql.jdbc.BatchResultHandler.handleError(BatchResultHandler.java:165)
	at org.***ql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:880)
	at org.***ql.jdbc.PgStatement.executeBatch(PgStatement.java:919)
	at org.***ql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1677)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.savePartition(JdbcUtils.scala:751)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1(JdbcUtils.scala:902)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1$adapted(JdbcUtils.scala:901)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2(RDD.scala:1036)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2$adapted(RDD.scala:1036)
	at org.apache.spark.SparkContext.$anonfun$runJob$5(SparkContext.scala:2438)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)
	at org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:161)
	at org.apache.spark.scheduler.Task.run(Task.scala:141)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.***ql.util.PSQLException: ERROR: column "post_time" is of type timestamp without time zone but expression is of type character varying
  Hint: You will need to rewrite or cast the expression.
  Position: 248
	at org.***ql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2712)
	at org.***ql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2400)
	at org.***ql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:367)
	at org.***ql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:326)
	at org.***ql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:877)
	... 19 more
[2024-12-14T18:07:29.332+0000] {docker.py:413} INFO - 2024-12-14 18:07:29,314 [ERROR] Critical error in main: [STREAM_FAILED] Query [id = 2f4fb056-b9a8-4f6c-9ae8-6c0892f7084e, runId = 720e5be1-7578-4a45-a12a-05ded77934e0] terminated with exception: An exception was raised by the Python Proxy. Return Message: Traceback (most recent call last):
  File "/opt/bitnami/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/clientserver.py", line 617, in _call_proxy
    return_value = getattr(self.pool[obj_id], method)(*params)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/bitnami/spark/python/lib/pyspark.zip/pyspark/sql/utils.py", line 120, in call
    raise e
  File "/opt/bitnami/spark/python/lib/pyspark.zip/pyspark/sql/utils.py", line 117, in call
    self.func(DataFrame(jdf, wrapped_session_jdf), batch_id)
  File "/opt/bitnami/spark/spark_streaming.py", line 325, in process_batch
    raise e
  File "/opt/bitnami/spark/spark_streaming.py", line 285, in process_batch
    transformer.save_to_***(posts_df, "reddit_posts")
  File "/opt/bitnami/spark/transformation.py", line 457, in save_to_***
    raise e
  File "/opt/bitnami/spark/transformation.py", line 452, in save_to_***
    .save()
     ^^^^^^
  File "/opt/bitnami/spark/python/lib/pyspark.zip/pyspark/sql/readwriter.py", line 1461, in save
    self._jwrite.save()
  File "/opt/bitnami/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/java_gateway.py", line 1322, in __call__
    return_value = get_return_value(
                   ^^^^^^^^^^^^^^^^^
  File "/opt/bitnami/spark/python/lib/pyspark.zip/pyspark/errors/exceptions/captured.py", line 179, in deco
    return f(*a, **kw)
           ^^^^^^^^^^^
  File "/opt/bitnami/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/protocol.py", line 326, in get_return_value
    raise Py4JJavaError(
py4j.protocol.Py4JJavaError: An error occurred while calling o99.save.
: org.apache.spark.SparkException: Job aborted due to stage failure: Task 0 in stage 10.0 failed 1 times, most recent failure: Lost task 0.0 in stage 10.0 (TID 10) (localhost executor driver): java.sql.BatchUpdateException: Batch entry 0 INSERT INTO reddit_posts ("post_id","title","author","post_time","upvotes","downvotes","num_comments","score","text","first_level_comments_count","second_level_comments_count","subreddit","hour_of_day","day_of_week","created_at") VALUES ('1he0jj3','After Milan''s 2-1 win against Crvena Zvezda, coach Fonseca had said: "I don''t give a f... about the player''s name, I work hard to give my best, some in the team don''t. If I need to play players from the youth team I will do it." Today 6 youth players trained with the first team','Blodgharm','2024-12-14 10:54:56',20,0,2,20,'',1,1,'soccer',10,7,'2024-12-14 18:07:26.569541+00') was aborted: ERROR: column "post_time" is of type timestamp without time zone but expression is of type character varying
  Hint: You will need to rewrite or cast the expression.
  Position: 248  Call getNextException to see other errors in the batch.
	at org.***ql.jdbc.BatchResultHandler.handleError(BatchResultHandler.java:165)
	at org.***ql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:880)
	at org.***ql.jdbc.PgStatement.executeBatch(PgStatement.java:919)
	at org.***ql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1677)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.savePartition(JdbcUtils.scala:751)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1(JdbcUtils.scala:902)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1$adapted(JdbcUtils.scala:901)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2(RDD.scala:1036)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2$adapted(RDD.scala:1036)
	at org.apache.spark.SparkContext.$anonfun$runJob$5(SparkContext.scala:2438)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)
	at org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:161)
	at org.apache.spark.scheduler.Task.run(Task.scala:141)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.***ql.util.PSQLException: ERROR: column "post_time" is of type timestamp without time zone but expression is of type character varying
  Hint: You will need to rewrite or cast the expression.
  Position: 248
	at org.***ql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2712)
	at org.***ql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2400)
	at org.***ql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:367)
	at org.***ql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:326)
	at org.***ql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:877)
	... 19 more

Driver stacktrace:
	at org.apache.spark.scheduler.DAGScheduler.failJobAndIndependentStages(DAGScheduler.scala:2844)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$abortStage$2(DAGScheduler.scala:2780)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$abortStage$2$adapted(DAGScheduler.scala:2779)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at org.apache.spark.scheduler.DAGScheduler.abortStage(DAGScheduler.scala:2779)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$handleTaskSetFailed$1(DAGScheduler.scala:1242)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$handleTaskSetFailed$1$adapted(DAGScheduler.scala:1242)
	at scala.Option.foreach(Option.scala:407)
	at org.apache.spark.scheduler.DAGScheduler.handleTaskSetFailed(DAGScheduler.scala:1242)
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.doOnReceive(DAGScheduler.scala:3048)
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:2982)
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:2971)
	at org.apache.spark.util.EventLoop$$anon$1.run(EventLoop.scala:49)
	at org.apache.spark.scheduler.DAGScheduler.runJob(DAGScheduler.scala:984)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2398)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2419)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2438)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2463)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$1(RDD.scala:1036)
	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:151)
	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:112)
	at org.apache.spark.rdd.RDD.withScope(RDD.scala:407)
	at org.apache.spark.rdd.RDD.foreachPartition(RDD.scala:1034)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.saveTable(JdbcUtils.scala:901)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcRelationProvider.createRelation(JdbcRelationProvider.scala:70)
	at org.apache.spark.sql.execution.datasources.SaveIntoDataSourceCommand.run(SaveIntoDataSourceCommand.scala:48)
	at org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult$lzycompute(commands.scala:75)
	at org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult(commands.scala:73)
	at org.apache.spark.sql.execution.command.ExecutedCommandExec.executeCollect(commands.scala:84)
	at org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$1.$anonfun$applyOrElse$1(QueryExecution.scala:107)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$6(SQLExecution.scala:125)
	at org.apache.spark.sql.execution.SQLExecution$.withSQLConfPropagated(SQLExecution.scala:201)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$1(SQLExecution.scala:108)
	at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:900)
	at org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:66)
	at org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$1.applyOrElse(QueryExecution.scala:107)
	at org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$1.applyOrElse(QueryExecution.scala:98)
	at org.apache.spark.sql.catalyst.trees.TreeNode.$anonfun$transformDownWithPruning$1(TreeNode.scala:461)
	at org.apache.spark.sql.catalyst.trees.CurrentOrigin$.withOrigin(origin.scala:76)
	at org.apache.spark.sql.catalyst.trees.TreeNode.transformDownWithPruning(TreeNode.scala:461)
	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.org$apache$spark$sql$catalyst$plans$logical$AnalysisHelper$$super$transformDownWithPruning(LogicalPlan.scala:32)
	at org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.transformDownWithPruning(AnalysisHelper.scala:267)
	at org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.transformDownWithPruning$(AnalysisHelper.scala:263)
	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.transformDownWithPruning(LogicalPlan.scala:32)
	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.transformDownWithPruning(LogicalPlan.scala:32)
	at org.apache.spark.sql.catalyst.trees.TreeNode.transformDown(TreeNode.scala:437)
	at org.apache.spark.sql.execution.QueryExecution.eagerlyExecuteCommands(QueryExecution.scala:98)
	at org.apache.spark.sql.execution.QueryExecution.commandExecuted$lzycompute(QueryExecution.scala:85)
	at org.apache.spark.sql.execution.QueryExecution.commandExecuted(QueryExecution.scala:83)
	at org.apache.spark.sql.execution.QueryExecution.assertCommandExecuted(QueryExecution.scala:142)
	at org.apache.spark.sql.DataFrameWriter.runCommand(DataFrameWriter.scala:859)
	at org.apache.spark.sql.DataFrameWriter.saveToV1Source(DataFrameWriter.scala:388)
	at org.apache.spark.sql.DataFrameWriter.saveInternal(DataFrameWriter.scala:361)
	at org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:248)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)
	at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)
	at py4j.Gateway.invoke(Gateway.java:282)
	at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)
	at py4j.commands.CallCommand.execute(CallCommand.java:79)
	at py4j.ClientServerConnection.sendCommand(ClientServerConnection.java:244)
	at py4j.CallbackClient.sendCommand(CallbackClient.java:384)
	at py4j.CallbackClient.sendCommand(CallbackClient.java:356)
	at py4j.reflection.PythonProxyHandler.invoke(PythonProxyHandler.java:106)
	at jdk.proxy3/jdk.proxy3.$Proxy30.call(Unknown Source)
	at org.apache.spark.sql.execution.streaming.sources.PythonForeachBatchHelper$.$anonfun$callForeachBatch$1(ForeachBatchSink.scala:53)
	at org.apache.spark.sql.execution.streaming.sources.PythonForeachBatchHelper$.$anonfun$callForeachBatch$1$adapted(ForeachBatchSink.scala:53)
	at org.apache.spark.sql.execution.streaming.sources.ForeachBatchSink.addBatch(ForeachBatchSink.scala:34)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.$anonfun$runBatch$17(MicroBatchExecution.scala:732)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$6(SQLExecution.scala:125)
	at org.apache.spark.sql.execution.SQLExecution$.withSQLConfPropagated(SQLExecution.scala:201)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$1(SQLExecution.scala:108)
	at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:900)
	at org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:66)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.$anonfun$runBatch$16(MicroBatchExecution.scala:729)
	at org.apache.spark.sql.execution.streaming.ProgressReporter.reportTimeTaken(ProgressReporter.scala:427)
	at org.apache.spark.sql.execution.streaming.ProgressReporter.reportTimeTaken$(ProgressReporter.scala:425)
	at org.apache.spark.sql.execution.streaming.StreamExecution.reportTimeTaken(StreamExecution.scala:67)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.runBatch(MicroBatchExecution.scala:729)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.$anonfun$runActivatedStream$2(MicroBatchExecution.scala:286)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at org.apache.spark.sql.execution.streaming.ProgressReporter.reportTimeTaken(ProgressReporter.scala:427)
	at org.apache.spark.sql.execution.streaming.ProgressReporter.reportTimeTaken$(ProgressReporter.scala:425)
	at org.apache.spark.sql.execution.streaming.StreamExecution.reportTimeTaken(StreamExecution.scala:67)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.$anonfun$runActivatedStream$1(MicroBatchExecution.scala:249)
	at org.apache.spark.sql.execution.streaming.SingleBatchExecutor.execute(TriggerExecutor.scala:39)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.runActivatedStream(MicroBatchExecution.scala:239)
	at org.apache.spark.sql.execution.streaming.StreamExecution.$anonfun$runStream$1(StreamExecution.scala:311)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:900)
	at org.apache.spark.sql.execution.streaming.StreamExecution.org$apache$spark$sql$execution$streaming$StreamExecution$$runStream(StreamExecution.scala:289)
	at org.apache.spark.sql.execution.streaming.StreamExecution$$anon$1.$anonfun$run$1(StreamExecution.scala:211)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at org.apache.spark.JobArtifactSet$.withActiveJobArtifactState(JobArtifactSet.scala:94)
	at org.apache.spark.sql.execution.streaming.StreamExecution$$anon$1.run(StreamExecution.scala:211)
Caused by: java.sql.BatchUpdateException: Batch entry 0 INSERT INTO reddit_posts ("post_id","title","author","post_time","upvotes","downvotes","num_comments","score","text","first_level_comments_count","second_level_comments_count","subreddit","hour_of_day","day_of_week","created_at") VALUES ('1he0jj3','After Milan''s 2-1 win against Crvena Zvezda, coach Fonseca had said: "I don''t give a f... about the player''s name, I work hard to give my best, some in the team don''t. If I need to play players from the youth team I will do it." Today 6 youth players trained with the first team','Blodgharm','2024-12-14 10:54:56',20,0,2,20,'',1,1,'soccer',10,7,'2024-12-14 18:07:26.569541+00') was aborted: ERROR: column "post_time" is of type timestamp without time zone but expression is of type character varying
  Hint: You will need to rewrite or cast the expression.
  Position: 248  Call getNextException to see other errors in the batch.
	at org.***ql.jdbc.BatchResultHandler.handleError(BatchResultHandler.java:165)
	at org.***ql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:880)
	at org.***ql.jdbc.PgStatement.executeBatch(PgStatement.java:919)
	at org.***ql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1677)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.savePartition(JdbcUtils.scala:751)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1(JdbcUtils.scala:902)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1$adapted(JdbcUtils.scala:901)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2(RDD.scala:1036)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2$adapted(RDD.scala:1036)
	at org.apache.spark.SparkContext.$anonfun$runJob$5(SparkContext.scala:2438)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)
	at org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:161)
	at org.apache.spark.scheduler.Task.run(Task.scala:141)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.***ql.util.PSQLException: ERROR: column "post_time" is of type timestamp without time zone but expression is of type character varying
  Hint: You will need to rewrite or cast the expression.
  Position: 248
	at org.***ql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2712)
	at org.***ql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2400)
	at org.***ql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:367)
	at org.***ql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:326)
	at org.***ql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:877)
	... 19 more

Traceback (most recent call last):
  File "/opt/bitnami/spark/spark_streaming.py", line 350, in main
    process_stream()
  File "/opt/bitnami/spark/spark_streaming.py", line 342, in process_stream
    raise e
  File "/opt/bitnami/spark/spark_streaming.py", line 337, in process_stream
    query.awaitTermination()
  File "/opt/bitnami/spark/python/lib/pyspark.zip/pyspark/sql/streaming/query.py", line 221, in awaitTermination
    return self._jsq.awaitTermination()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/bitnami/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/java_gateway.py", line 1322, in __call__
    return_value = get_return_value(
                   ^^^^^^^^^^^^^^^^^
  File "/opt/bitnami/spark/python/lib/pyspark.zip/pyspark/errors/exceptions/captured.py", line 185, in deco
    raise converted from None
pyspark.errors.exceptions.captured.StreamingQueryException: [STREAM_FAILED] Query [id = 2f4fb056-b9a8-4f6c-9ae8-6c0892f7084e, runId = 720e5be1-7578-4a45-a12a-05ded77934e0] terminated with exception: An exception was raised by the Python Proxy. Return Message: Traceback (most recent call last):
  File "/opt/bitnami/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/clientserver.py", line 617, in _call_proxy
    return_value = getattr(self.pool[obj_id], method)(*params)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/bitnami/spark/python/lib/pyspark.zip/pyspark/sql/utils.py", line 120, in call
    raise e
  File "/opt/bitnami/spark/python/lib/pyspark.zip/pyspark/sql/utils.py", line 117, in call
    self.func(DataFrame(jdf, wrapped_session_jdf), batch_id)
  File "/opt/bitnami/spark/spark_streaming.py", line 325, in process_batch
    raise e
  File "/opt/bitnami/spark/spark_streaming.py", line 285, in process_batch
    transformer.save_to_***(posts_df, "reddit_posts")
  File "/opt/bitnami/spark/transformation.py", line 457, in save_to_***
    raise e
  File "/opt/bitnami/spark/transformation.py", line 452, in save_to_***
    .save()
     ^^^^^^
  File "/opt/bitnami/spark/python/lib/pyspark.zip/pyspark/sql/readwriter.py", line 1461, in save
    self._jwrite.save()
  File "/opt/bitnami/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/java_gateway.py", line 1322, in __call__
    return_value = get_return_value(
                   ^^^^^^^^^^^^^^^^^
  File "/opt/bitnami/spark/python/lib/pyspark.zip/pyspark/errors/exceptions/captured.py", line 179, in deco
    return f(*a, **kw)
           ^^^^^^^^^^^
  File "/opt/bitnami/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/protocol.py", line 326, in get_return_value
    raise Py4JJavaError(
py4j.protocol.Py4JJavaError: An error occurred while calling o99.save.
: org.apache.spark.SparkException: Job aborted due to stage failure: Task 0 in stage 10.0 failed 1 times, most recent failure: Lost task 0.0 in stage 10.0 (TID 10) (localhost executor driver): java.sql.BatchUpdateException: Batch entry 0 INSERT INTO reddit_posts ("post_id","title","author","post_time","upvotes","downvotes","num_comments","score","text","first_level_comments_count","second_level_comments_count","subreddit","hour_of_day","day_of_week","created_at") VALUES ('1he0jj3','After Milan''s 2-1 win against Crvena Zvezda, coach Fonseca had said: "I don''t give a f... about the player''s name, I work hard to give my best, some in the team don''t. If I need to play players from the youth team I will do it." Today 6 youth players trained with the first team','Blodgharm','2024-12-14 10:54:56',20,0,2,20,'',1,1,'soccer',10,7,'2024-12-14 18:07:26.569541+00') was aborted: ERROR: column "post_time" is of type timestamp without time zone but expression is of type character varying
  Hint: You will need to rewrite or cast the expression.
  Position: 248  Call getNextException to see other errors in the batch.
	at org.***ql.jdbc.BatchResultHandler.handleError(BatchResultHandler.java:165)
	at org.***ql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:880)
	at org.***ql.jdbc.PgStatement.executeBatch(PgStatement.java:919)
	at org.***ql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1677)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.savePartition(JdbcUtils.scala:751)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1(JdbcUtils.scala:902)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1$adapted(JdbcUtils.scala:901)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2(RDD.scala:1036)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2$adapted(RDD.scala:1036)
	at org.apache.spark.SparkContext.$anonfun$runJob$5(SparkContext.scala:2438)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)
	at org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:161)
	at org.apache.spark.scheduler.Task.run(Task.scala:141)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.***ql.util.PSQLException: ERROR: column "post_time" is of type timestamp without time zone but expression is of type character varying
  Hint: You will need to rewrite or cast the expression.
  Position: 248
	at org.***ql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2712)
	at org.***ql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2400)
	at org.***ql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:367)
	at org.***ql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:326)
	at org.***ql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:877)
	... 19 more

Driver stacktrace:
	at org.apache.spark.scheduler.DAGScheduler.failJobAndIndependentStages(DAGScheduler.scala:2844)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$abortStage$2(DAGScheduler.scala:2780)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$abortStage$2$adapted(DAGScheduler.scala:2779)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at org.apache.spark.scheduler.DAGScheduler.abortStage(DAGScheduler.scala:2779)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$handleTaskSetFailed$1(DAGScheduler.scala:1242)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$handleTaskSetFailed$1$adapted(DAGScheduler.scala:1242)
	at scala.Option.foreach(Option.scala:407)
	at org.apache.spark.scheduler.DAGScheduler.handleTaskSetFailed(DAGScheduler.scala:1242)
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.doOnReceive(DAGScheduler.scala:3048)
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:2982)
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:2971)
	at org.apache.spark.util.EventLoop$$anon$1.run(EventLoop.scala:49)
	at org.apache.spark.scheduler.DAGScheduler.runJob(DAGScheduler.scala:984)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2398)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2419)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2438)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2463)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$1(RDD.scala:1036)
	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:151)
	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:112)
	at org.apache.spark.rdd.RDD.withScope(RDD.scala:407)
	at org.apache.spark.rdd.RDD.foreachPartition(RDD.scala:1034)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.saveTable(JdbcUtils.scala:901)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcRelationProvider.createRelation(JdbcRelationProvider.scala:70)
	at org.apache.spark.sql.execution.datasources.SaveIntoDataSourceCommand.run(SaveIntoDataSourceCommand.scala:48)
	at org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult$lzycompute(commands.scala:75)
	at org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult(commands.scala:73)
	at org.apache.spark.sql.execution.command.ExecutedCommandExec.executeCollect(commands.scala:84)
	at org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$1.$anonfun$applyOrElse$1(QueryExecution.scala:107)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$6(SQLExecution.scala:125)
	at org.apache.spark.sql.execution.SQLExecution$.withSQLConfPropagated(SQLExecution.scala:201)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$1(SQLExecution.scala:108)
	at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:900)
	at org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:66)
	at org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$1.applyOrElse(QueryExecution.scala:107)
	at org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$1.applyOrElse(QueryExecution.scala:98)
	at org.apache.spark.sql.catalyst.trees.TreeNode.$anonfun$transformDownWithPruning$1(TreeNode.scala:461)
	at org.apache.spark.sql.catalyst.trees.CurrentOrigin$.withOrigin(origin.scala:76)
	at org.apache.spark.sql.catalyst.trees.TreeNode.transformDownWithPruning(TreeNode.scala:461)
	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.org$apache$spark$sql$catalyst$plans$logical$AnalysisHelper$$super$transformDownWithPruning(LogicalPlan.scala:32)
	at org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.transformDownWithPruning(AnalysisHelper.scala:267)
	at org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.transformDownWithPruning$(AnalysisHelper.scala:263)
	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.transformDownWithPruning(LogicalPlan.scala:32)
	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.transformDownWithPruning(LogicalPlan.scala:32)
	at org.apache.spark.sql.catalyst.trees.TreeNode.transformDown(TreeNode.scala:437)
	at org.apache.spark.sql.execution.QueryExecution.eagerlyExecuteCommands(QueryExecution.scala:98)
	at org.apache.spark.sql.execution.QueryExecution.commandExecuted$lzycompute(QueryExecution.scala:85)
	at org.apache.spark.sql.execution.QueryExecution.commandExecuted(QueryExecution.scala:83)
	at org.apache.spark.sql.execution.QueryExecution.assertCommandExecuted(QueryExecution.scala:142)
	at org.apache.spark.sql.DataFrameWriter.runCommand(DataFrameWriter.scala:859)
	at org.apache.spark.sql.DataFrameWriter.saveToV1Source(DataFrameWriter.scala:388)
	at org.apache.spark.sql.DataFrameWriter.saveInternal(DataFrameWriter.scala:361)
	at org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:248)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)
	at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)
	at py4j.Gateway.invoke(Gateway.java:282)
	at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)
	at py4j.commands.CallCommand.execute(CallCommand.java:79)
	at py4j.ClientServerConnection.sendCommand(ClientServerConnection.java:244)
	at py4j.CallbackClient.sendCommand(CallbackClient.java:384)
	at py4j.CallbackClient.sendCommand(CallbackClient.java:356)
	at py4j.reflection.PythonProxyHandler.invoke(PythonProxyHandler.java:106)
	at jdk.proxy3/jdk.proxy3.$Proxy30.call(Unknown Source)
	at org.apache.spark.sql.execution.streaming.sources.PythonForeachBatchHelper$.$anonfun$callForeachBatch$1(ForeachBatchSink.scala:53)
	at org.apache.spark.sql.execution.streaming.sources.PythonForeachBatchHelper$.$anonfun$callForeachBatch$1$adapted(ForeachBatchSink.scala:53)
	at org.apache.spark.sql.execution.streaming.sources.ForeachBatchSink.addBatch(ForeachBatchSink.scala:34)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.$anonfun$runBatch$17(MicroBatchExecution.scala:732)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$6(SQLExecution.scala:125)
	at org.apache.spark.sql.execution.SQLExecution$.withSQLConfPropagated(SQLExecution.scala:201)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$1(SQLExecution.scala:108)
	at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:900)
	at org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:66)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.$anonfun$runBatch$16(MicroBatchExecution.scala:729)
	at org.apache.spark.sql.execution.streaming.ProgressReporter.reportTimeTaken(ProgressReporter.scala:427)
	at org.apache.spark.sql.execution.streaming.ProgressReporter.reportTimeTaken$(ProgressReporter.scala:425)
	at org.apache.spark.sql.execution.streaming.StreamExecution.reportTimeTaken(StreamExecution.scala:67)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.runBatch(MicroBatchExecution.scala:729)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.$anonfun$runActivatedStream$2(MicroBatchExecution.scala:286)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at org.apache.spark.sql.execution.streaming.ProgressReporter.reportTimeTaken(ProgressReporter.scala:427)
	at org.apache.spark.sql.execution.streaming.ProgressReporter.reportTimeTaken$(ProgressReporter.scala:425)
	at org.apache.spark.sql.execution.streaming.StreamExecution.reportTimeTaken(StreamExecution.scala:67)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.$anonfun$runActivatedStream$1(MicroBatchExecution.scala:249)
	at org.apache.spark.sql.execution.streaming.SingleBatchExecutor.execute(TriggerExecutor.scala:39)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.runActivatedStream(MicroBatchExecution.scala:239)
	at org.apache.spark.sql.execution.streaming.StreamExecution.$anonfun$runStream$1(StreamExe
[2024-12-14T18:07:29.339+0000] {docker.py:413} INFO - cution.scala:311)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:900)
	at org.apache.spark.sql.execution.streaming.StreamExecution.org$apache$spark$sql$execution$streaming$StreamExecution$$runStream(StreamExecution.scala:289)
	at org.apache.spark.sql.execution.streaming.StreamExecution$$anon$1.$anonfun$run$1(StreamExecution.scala:211)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at org.apache.spark.JobArtifactSet$.withActiveJobArtifactState(JobArtifactSet.scala:94)
	at org.apache.spark.sql.execution.streaming.StreamExecution$$anon$1.run(StreamExecution.scala:211)
Caused by: java.sql.BatchUpdateException: Batch entry 0 INSERT INTO reddit_posts ("post_id","title","author","post_time","upvotes","downvotes","num_comments","score","text","first_level_comments_count","second_level_comments_count","subreddit","hour_of_day","day_of_week","created_at") VALUES ('1he0jj3','After Milan''s 2-1 win against Crvena Zvezda, coach Fonseca had said: "I don''t give a f... about the player''s name, I work hard to give my best, some in the team don''t. If I need to play players from the youth team I will do it." Today 6 youth players trained with the first team','Blodgharm','2024-12-14 10:54:56',20,0,2,20,'',1,1,'soccer',10,7,'2024-12-14 18:07:26.569541+00') was aborted: ERROR: column "post_time" is of type timestamp without time zone but expression is of type character varying
  Hint: You will need to rewrite or cast the expression.
  Position: 248  Call getNextException to see other errors in the batch.
	at org.***ql.jdbc.BatchResultHandler.handleError(BatchResultHandler.java:165)
	at org.***ql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:880)
	at org.***ql.jdbc.PgStatement.executeBatch(PgStatement.java:919)
	at org.***ql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1677)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.savePartition(JdbcUtils.scala:751)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1(JdbcUtils.scala:902)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1$adapted(JdbcUtils.scala:901)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2(RDD.scala:1036)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2$adapted(RDD.scala:1036)
	at org.apache.spark.SparkContext.$anonfun$runJob$5(SparkContext.scala:2438)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)
	at org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:161)
	at org.apache.spark.scheduler.Task.run(Task.scala:141)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.***ql.util.PSQLException: ERROR: column "post_time" is of type timestamp without time zone but expression is of type character varying
  Hint: You will need to rewrite or cast the expression.
  Position: 248
	at org.***ql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2712)
	at org.***ql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2400)
	at org.***ql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:367)
	at org.***ql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:326)
	at org.***ql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:877)
	... 19 more


2024-12-14 18:07:29,326 [INFO] Cleaning up resources...
Traceback (most recent call last):
  File "/opt/bitnami/spark/spark_streaming.py", line 360, in <module>
[2024-12-14T18:07:29.342+0000] {docker.py:413} INFO - main()
  File "/opt/bitnami/spark/spark_streaming.py", line 355, in main
[2024-12-14T18:07:29.343+0000] {docker.py:413} INFO - raise e
  File "/opt/bitnami/spark/spark_streaming.py", line 350, in main
    process_stream()
  File "/opt/bitnami/spark/spark_streaming.py", line 342, in process_stream
[2024-12-14T18:07:29.345+0000] {docker.py:413} INFO - raise e
  File "/opt/bitnami/spark/spark_streaming.py", line 337, in process_stream
[2024-12-14T18:07:29.348+0000] {docker.py:413} INFO - query.awaitTermination()
  File "/opt/bitnami/spark/python/lib/pyspark.zip/pyspark/sql/streaming/query.py", line 221, in awaitTermination
[2024-12-14T18:07:29.349+0000] {docker.py:413} INFO - File "/opt/bitnami/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/java_gateway.py", line 1322, in __call__
[2024-12-14T18:07:29.350+0000] {docker.py:413} INFO - File "/opt/bitnami/spark/python/lib/pyspark.zip/pyspark/errors/exceptions/captured.py", line 185, in deco
[2024-12-14T18:07:29.351+0000] {docker.py:413} INFO - pyspark.errors.exceptions.captured.StreamingQueryException
[2024-12-14T18:07:29.354+0000] {docker.py:413} INFO - : [STREAM_FAILED] Query [id = 2f4fb056-b9a8-4f6c-9ae8-6c0892f7084e, runId = 720e5be1-7578-4a45-a12a-05ded77934e0] terminated with exception: An exception was raised by the Python Proxy. Return Message: Traceback (most recent call last):
  File "/opt/bitnami/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/clientserver.py", line 617, in _call_proxy
    return_value = getattr(self.pool[obj_id], method)(*params)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/bitnami/spark/python/lib/pyspark.zip/pyspark/sql/utils.py", line 120, in call
    raise e
  File "/opt/bitnami/spark/python/lib/pyspark.zip/pyspark/sql/utils.py", line 117, in call
    self.func(DataFrame(jdf, wrapped_session_jdf), batch_id)
  File "/opt/bitnami/spark/spark_streaming.py", line 325, in process_batch
    raise e
  File "/opt/bitnami/spark/spark_streaming.py", line 285, in process_batch
    transformer.save_to_***(posts_df, "reddit_posts")
  File "/opt/bitnami/spark/transformation.py", line 457, in save_to_***
    raise e
  File "/opt/bitnami/spark/transformation.py", line 452, in save_to_***
    .save()
     ^^^^^^
  File "/opt/bitnami/spark/python/lib/pyspark.zip/pyspark/sql/readwriter.py", line 1461, in save
    self._jwrite.save()
  File "/opt/bitnami/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/java_gateway.py", line 1322, in __call__
    return_value = get_return_value(
                   ^^^^^^^^^^^^^^^^^
  File "/opt/bitnami/spark/python/lib/pyspark.zip/pyspark/errors/exceptions/captured.py", line 179, in deco
    return f(*a, **kw)
           ^^^^^^^^^^^
  File "/opt/bitnami/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/protocol.py", line 326, in get_return_value
    raise Py4JJavaError(
py4j.protocol.Py4JJavaError: An error occurred while calling o99.save.
: org.apache.spark.SparkException: Job aborted due to stage failure: Task 0 in stage 10.0 failed 1 times, most recent failure: Lost task 0.0 in stage 10.0 (TID 10) (localhost executor driver): java.sql.BatchUpdateException: Batch entry 0 INSERT INTO reddit_posts ("post_id","title","author","post_time","upvotes","downvotes","num_comments","score","text","first_level_comments_count","second_level_comments_count","subreddit","hour_of_day","day_of_week","created_at") VALUES ('1he0jj3','After Milan''s 2-1 win against Crvena Zvezda, coach Fonseca had said: "I don''t give a f... about the player''s name, I work hard to give my best, some in the team don''t. If I need to play players from the youth team I will do it." Today 6 youth players trained with the first team','Blodgharm','2024-12-14 10:54:56',20,0,2,20,'',1,1,'soccer',10,7,'2024-12-14 18:07:26.569541+00') was aborted: ERROR: column "post_time" is of type timestamp without time zone but expression is of type character varying
  Hint: You will need to rewrite or cast the expression.
  Position: 248  Call getNextException to see other errors in the batch.
	at org.***ql.jdbc.BatchResultHandler.handleError(BatchResultHandler.java:165)
	at org.***ql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:880)
	at org.***ql.jdbc.PgStatement.executeBatch(PgStatement.java:919)
	at org.***ql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1677)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.savePartition(JdbcUtils.scala:751)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1(JdbcUtils.scala:902)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1$adapted(JdbcUtils.scala:901)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2(RDD.scala:1036)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2$adapted(RDD.scala:1036)
	at org.apache.spark.SparkContext.$anonfun$runJob$5(SparkContext.scala:2438)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)
	at org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:161)
	at org.apache.spark.scheduler.Task.run(Task.scala:141)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.***ql.util.PSQLException: ERROR: column "post_time" is of type timestamp without time zone but expression is of type character varying
  Hint: You will need to rewrite or cast the expression.
  Position: 248
	at org.***ql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2712)
	at org.***ql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2400)
	at org.***ql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:367)
	at org.***ql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:326)
	at org.***ql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:877)
	... 19 more

Driver stacktrace:
	at org.apache.spark.scheduler.DAGScheduler.failJobAndIndependentStages(DAGScheduler.scala:2844)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$abortStage$2(DAGScheduler.scala:2780)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$abortStage$2$adapted(DAGScheduler.scala:2779)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at org.apache.spark.scheduler.DAGScheduler.abortStage(DAGScheduler.scala:2779)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$handleTaskSetFailed$1(DAGScheduler.scala:1242)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$handleTaskSetFailed$1$adapted(DAGScheduler.scala:1242)
	at scala.Option.foreach(Option.scala:407)
	at org.apache.spark.scheduler.DAGScheduler.handleTaskSetFailed(DAGScheduler.scala:1242)
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.doOnReceive(DAGScheduler.scala:3048)
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:2982)
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:2971)
	at org.apache.spark.util.EventLoop$$anon$1.run(EventLoop.scala:49)
	at org.apache.spark.scheduler.DAGScheduler.runJob(DAGScheduler.scala:984)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2398)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2419)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2438)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2463)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$1(RDD.scala:1036)
	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:151)
	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:112)
	at org.apache.spark.rdd.RDD.withScope(RDD.scala:407)
	at org.apache.spark.rdd.RDD.foreachPartition(RDD.scala:1034)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.saveTable(JdbcUtils.scala:901)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcRelationProvider.createRelation(JdbcRelationProvider.scala:70)
	at org.apache.spark.sql.execution.datasources.SaveIntoDataSourceCommand.run(SaveIntoDataSourceCommand.scala:48)
	at org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult$lzycompute(commands.scala:75)
	at org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult(commands.scala:73)
	at org.apache.spark.sql.execution.command.ExecutedCommandExec.executeCollect(commands.scala:84)
	at org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$1.$anonfun$applyOrElse$1(QueryExecution.scala:107)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$6(SQLExecution.scala:125)
	at org.apache.spark.sql.execution.SQLExecution$.withSQLConfPropagated(SQLExecution.scala:201)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$1(SQLExecution.scala:108)
	at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:900)
	at org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:66)
	at org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$1.applyOrElse(QueryExecution.scala:107)
	at org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$1.applyOrElse(QueryExecution.scala:98)
	at org.apache.spark.sql.catalyst.trees.TreeNode.$anonfun$transformDownWithPruning$1(TreeNode.scala:461)
	at org.apache.spark.sql.catalyst.trees.CurrentOrigin$.withOrigin(origin.scala:76)
	at org.apache.spark.sql.catalyst.trees.TreeNode.transformDownWithPruning(TreeNode.scala:461)
	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.org$apache$spark$sql$catalyst$plans$logical$AnalysisHelper$$super$transformDownWithPruning(LogicalPlan.scala:32)
	at org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.transformDownWithPruning(AnalysisHelper.scala:267)
	at org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.transformDownWithPruning$(AnalysisHelper.scala:263)
	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.transformDownWithPruning(LogicalPlan.scala:32)
	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.transformDownWithPruning(LogicalPlan.scala:32)
	at org.apache.spark.sql.catalyst.trees.TreeNode.transformDown(TreeNode.scala:437)
	at org.apache.spark.sql.execution.QueryExecution.eagerlyExecuteCommands(QueryExecution.scala:98)
	at org.apache.spark.sql.execution.QueryExecution.commandExecuted$lzycompute(QueryExecution.scala:85)
	at org.apache.spark.sql.execution.QueryExecution.commandExecuted(QueryExecution.scala:83)
	at org.apache.spark.sql.execution.QueryExecution.assertCommandExecuted(QueryExecution.scala:142)
	at org.apache.spark.sql.DataFrameWriter.runCommand(DataFrameWriter.scala:859)
	at org.apache.spark.sql.DataFrameWriter.saveToV1Source(DataFrameWriter.scala:388)
	at org.apache.spark.sql.DataFrameWriter.saveInternal(DataFrameWriter.scala:361)
	at org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:248)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)
	at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)
	at py4j.Gateway.invoke(Gateway.java:282)
	at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)
	at py4j.commands.CallCommand.execute(CallCommand.java:79)
	at py4j.ClientServerConnection.sendCommand(ClientServerConnection.java:244)
	at py4j.CallbackClient.sendCommand(CallbackClient.java:384)
	at py4j.CallbackClient.sendCommand(CallbackClient.java:356)
	at py4j.reflection.PythonProxyHandler.invoke(PythonProxyHandler.java:106)
	at jdk.proxy3/jdk.proxy3.$Proxy30.call(Unknown Source)
	at org.apache.spark.sql.execution.streaming.sources.PythonForeachBatchHelper$.$anonfun$callForeachBatch$1(ForeachBatchSink.scala:53)
	at org.apache.spark.sql.execution.streaming.sources.PythonForeachBatchHelper$.$anonfun$callForeachBatch$1$adapted(ForeachBatchSink.scala:53)
	at org.apache.spark.sql.execution.streaming.sources.ForeachBatchSink.addBatch(ForeachBatchSink.scala:34)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.$anonfun$runBatch$17(MicroBatchExecution.scala:732)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$6(SQLExecution.scala:125)
	at org.apache.spark.sql.execution.SQLExecution$.withSQLConfPropagated(SQLExecution.scala:201)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$1(SQLExecution.scala:108)
	at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:900)
	at org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:66)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.$anonfun$runBatch$16(MicroBatchExecution.scala:729)
	at org.apache.spark.sql.execution.streaming.ProgressReporter.reportTimeTaken(ProgressReporter.scala:427)
	at org.apache.spark.sql.execution.streaming.ProgressReporter.reportTimeTaken$(ProgressReporter.scala:425)
	at org.apache.spark.sql.execution.streaming.StreamExecution.reportTimeTaken(StreamExecution.scala:67)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.runBatch(MicroBatchExecution.scala:729)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.$anonfun$runActivatedStream$2(MicroBatchExecution.scala:286)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at org.apache.spark.sql.execution.streaming.ProgressReporter.reportTimeTaken(ProgressReporter.scala:427)
	at org.apache.spark.sql.execution.streaming.ProgressReporter.reportTimeTaken$(ProgressReporter.scala:425)
	at org.apache.spark.sql.execution.streaming.StreamExecution.reportTimeTaken(StreamExecution.scala:67)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.$anonfun$runActivatedStream$1(MicroBatchExecution.scala:249)
	at org.apache.spark.sql.execution.streaming.SingleBatchExecutor.execute(TriggerExecutor.scala:39)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.runActivatedStream(MicroBatchExecution.scala:239)
	at org.apache.spark.sql.execution.streaming.StreamExecution.$anonfun$runStream$1(StreamExecution.scala:311)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:900)
	at org.apache.spark.sql.execution.streaming.StreamExecution.org$apache$spark$sql$execution$streaming$StreamExecution$$runStream(StreamExecution.scala:289)
	at org.apache.spark.sql.execution.streaming.StreamExecution$$anon$1.$anonfun$run$1(StreamExecution.scala:211)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at org.apache.spark.JobArtifactSet$.withActiveJobArtifactState(JobArtifactSet.scala:94)
	at org.apache.spark.sql.execution.streaming.StreamExecution$$anon$1.run(StreamExecution.scala:211)
Caused by: java.sql.BatchUpdateException: Batch entry 0 INSERT INTO reddit_posts ("post_id","title","author","post_time","upvotes","downvotes","num_comments","score","text","first_level_comments_count","second_level_comments_count","subreddit","hour_of_day","day_of_week","created_at") VALUES ('1he0jj3','After Milan''s 2-1 win against Crvena Zvezda, coach Fonseca had said: "I don''t give a f... about the player''s name, I work hard to give my best, some in the team don''t. If I need to play players from the youth team I will do it." Today 6 youth players trained with the first team','Blodgharm','2024-12-14 10:54:56',20,0,2,20,'',1,1,'soccer',10,7,'2024-12-14 18:07:26.569541+00') was aborted: ERROR: column "post_time" is of type timestamp without time zone but expression is of type character varying
  Hint: You will need to rewrite or cast the expression.
  Position: 248  Call getNextException to see other errors in the batch.
	at org.***ql.jdbc.BatchResultHandler.handleError(BatchResultHandler.java:165)
	at org.***ql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:880)
	at org.***ql.jdbc.PgStatement.executeBatch(PgStatement.java:919)
	at org.***ql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1677)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.savePartition(JdbcUtils.scala:751)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1(JdbcUtils.scala:902)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1$adapted(JdbcUtils.scala:901)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2(RDD.scala:1036)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2$adapted(RDD.scala:1036)
	at org.apache.spark.SparkContext.$anonfun$runJob$5(SparkContext.scala:2438)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)
	at org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:161)
	at org.apache.spark.scheduler.Task.run(Task.scala:141)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.***ql.util.PSQLException: ERROR: column "post_time" is of type timestamp without time zone but expression is of type character varying
  Hint: You will need to rewrite or cast the expression.
  Position: 248
	at org.***ql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2712)
	at org.***ql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2400)
	at org.***ql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:367)
	at org.***ql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:326)
	at org.***ql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:877)
	... 19 more
[2024-12-14T18:07:29.357+0000] {docker.py:413} INFO - 2024-12-14 18:07:29,352 [INFO] Closing down clientserver connection
[2024-12-14T18:07:30.247+0000] {docker.py:413} INFO - 24/12/14 18:07:30 INFO ConsumerCoordinator: [Consumer clientId=consumer-spark-kafka-source-c0615079-5755-4c8f-aae6-88e6fa01b989--2054774507-executor-1, groupId=spark-kafka-source-c0615079-5755-4c8f-aae6-88e6fa01b989--2054774507-executor] Resetting generation and member id due to: consumer pro-actively leaving the group
24/12/14 18:07:30 INFO ConsumerCoordinator: [Consumer clientId=consumer-spark-kafka-source-c0615079-5755-4c8f-aae6-88e6fa01b989--2054774507-executor-1, groupId=spark-kafka-source-c0615079-5755-4c8f-aae6-88e6fa01b989--2054774507-executor] Request joining group due to: consumer pro-actively leaving the group
[2024-12-14T18:07:30.271+0000] {docker.py:413} INFO - 24/12/14 18:07:30 INFO Metrics: Metrics scheduler closed
[2024-12-14T18:07:30.274+0000] {docker.py:413} INFO - 24/12/14 18:07:30 INFO Metrics: Closing reporter org.apache.kafka.common.metrics.JmxReporter
[2024-12-14T18:07:30.279+0000] {docker.py:413} INFO - 24/12/14 18:07:30 INFO Metrics: Metrics reporters closed
[2024-12-14T18:07:30.282+0000] {docker.py:413} INFO - 24/12/14 18:07:30 INFO AppInfoParser: App info kafka.consumer for consumer-spark-kafka-source-c0615079-5755-4c8f-aae6-88e6fa01b989--2054774507-executor-1 unregistered
[2024-12-14T18:07:30.284+0000] {docker.py:413} INFO - 24/12/14 18:07:30 INFO SparkContext: Invoking stop() from shutdown hook
[2024-12-14T18:07:30.286+0000] {docker.py:413} INFO - 24/12/14 18:07:30 INFO SparkContext: SparkContext is stopping with exitCode 0.
[2024-12-14T18:07:30.339+0000] {docker.py:413} INFO - 24/12/14 18:07:30 INFO SparkUI: Stopped Spark web UI at http://localhost:4040
[2024-12-14T18:07:30.407+0000] {docker.py:413} INFO - 24/12/14 18:07:30 INFO MapOutputTrackerMasterEndpoint: MapOutputTrackerMasterEndpoint stopped!
[2024-12-14T18:07:30.476+0000] {docker.py:413} INFO - 24/12/14 18:07:30 INFO MemoryStore: MemoryStore cleared
[2024-12-14T18:07:30.478+0000] {docker.py:413} INFO - 24/12/14 18:07:30 INFO BlockManager: BlockManager stopped
[2024-12-14T18:07:30.486+0000] {docker.py:413} INFO - 24/12/14 18:07:30 INFO BlockManagerMaster: BlockManagerMaster stopped
[2024-12-14T18:07:30.506+0000] {docker.py:413} INFO - 24/12/14 18:07:30 INFO OutputCommitCoordinator$OutputCommitCoordinatorEndpoint: OutputCommitCoordinator stopped!
[2024-12-14T18:07:30.559+0000] {docker.py:413} INFO - 24/12/14 18:07:30 INFO SparkContext: Successfully stopped SparkContext
[2024-12-14T18:07:30.561+0000] {docker.py:413} INFO - 24/12/14 18:07:30 INFO ShutdownHookManager: Shutdown hook called
[2024-12-14T18:07:30.563+0000] {docker.py:413} INFO - 24/12/14 18:07:30 INFO ShutdownHookManager: Deleting directory /tmp/spark-7b6202fe-7a69-4e81-97e5-67fab7680553
[2024-12-14T18:07:30.572+0000] {docker.py:413} INFO - 24/12/14 18:07:30 INFO ShutdownHookManager: Deleting directory /tmp/temporary-0cb2ec5f-1d98-42f4-88bf-d46ed202f1bf
[2024-12-14T18:07:30.587+0000] {docker.py:413} INFO - 24/12/14 18:07:30 INFO ShutdownHookManager: Deleting directory /tmp/spark-fd534d19-1ac7-42cd-9364-e6250063a16e/pyspark-e0026a8b-3f66-4e86-8916-33d6056c3626
[2024-12-14T18:07:30.597+0000] {docker.py:413} INFO - 24/12/14 18:07:30 INFO ShutdownHookManager: Deleting directory /tmp/spark-fd534d19-1ac7-42cd-9364-e6250063a16e
[2024-12-14T18:07:31.463+0000] {taskinstance.py:1937} ERROR - Task failed with exception
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.8/site-packages/docker/api/client.py", line 268, in _raise_for_status
    response.raise_for_status()
  File "/home/airflow/.local/lib/python3.8/site-packages/requests/models.py", line 1021, in raise_for_status
    raise HTTPError(http_error_msg, response=self)
requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: http://docker-proxy:2375/v1.47/containers/create

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/providers/docker/operators/docker.py", line 348, in _run_image
    return self._run_image_with_mounts([*self.mounts, tmp_mount], add_tmp_variable=True)
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/providers/docker/operators/docker.py", line 375, in _run_image_with_mounts
    self.container = self.cli.create_container(
  File "/home/airflow/.local/lib/python3.8/site-packages/docker/api/container.py", line 431, in create_container
    return self.create_container_from_config(config, name, platform)
  File "/home/airflow/.local/lib/python3.8/site-packages/docker/api/container.py", line 448, in create_container_from_config
    return self._result(res, True)
  File "/home/airflow/.local/lib/python3.8/site-packages/docker/api/client.py", line 274, in _result
    self._raise_for_status(response)
  File "/home/airflow/.local/lib/python3.8/site-packages/docker/api/client.py", line 270, in _raise_for_status
    raise create_api_error_from_http_exception(e) from e
  File "/home/airflow/.local/lib/python3.8/site-packages/docker/errors.py", line 39, in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation) from e
docker.errors.APIError: 400 Client Error for http://docker-proxy:2375/v1.47/containers/create: Bad Request ("invalid mount config for type "bind": bind source path does not exist: /tmp/airflowtmpxrq3niza")

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/providers/docker/operators/docker.py", line 486, in execute
    return self._run_image()
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/providers/docker/operators/docker.py", line 357, in _run_image
    return self._run_image_with_mounts(self.mounts, add_tmp_variable=False)
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/providers/docker/operators/docker.py", line 421, in _run_image_with_mounts
    raise DockerContainerFailedException(f"Docker container failed: {result!r}", logs=log_lines)
airflow.providers.docker.exceptions.DockerContainerFailedException: Docker container failed: {'StatusCode': 1}
[2024-12-14T18:07:31.501+0000] {taskinstance.py:1400} INFO - Marking task as UP_FOR_RETRY. dag_id=kafka_spark_dag, task_id=pyspark_consumer, execution_date=20241214T180415, start_date=20241214T180508, end_date=20241214T180731
[2024-12-14T18:07:31.552+0000] {standard_task_runner.py:104} ERROR - Failed to execute job 4 for task pyspark_consumer (Docker container failed: {'StatusCode': 1}; 1180)
[2024-12-14T18:07:31.608+0000] {local_task_job_runner.py:228} INFO - Task exited with return code 1
[2024-12-14T18:07:31.679+0000] {taskinstance.py:2778} INFO - 0 downstream tasks scheduled from follow-on schedule check
